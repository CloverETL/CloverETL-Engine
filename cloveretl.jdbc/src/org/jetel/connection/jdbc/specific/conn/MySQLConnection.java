/*
*    jETeL/Clover - Java based ETL application framework.
*    Copyright (C) 2002-04  David Pavlis <david_pavlis@hotmail.com>
*    
*    This library is free software; you can redistribute it and/or
*    modify it under the terms of the GNU Lesser General Public
*    License as published by the Free Software Foundation; either
*    version 2.1 of the License, or (at your option) any later version.
*    
*    This library is distributed in the hope that it will be useful,
*    but WITHOUT ANY WARRANTY; without even the implied warranty of
*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU    
*    Lesser General Public License for more details.
*    
*    You should have received a copy of the GNU Lesser General Public
*    License along with this library; if not, write to the Free Software
*    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*
*/
package org.jetel.connection.jdbc.specific.conn;

import java.sql.SQLException;
import java.sql.Statement;

import org.jetel.connection.jdbc.DBConnection;
import org.jetel.connection.jdbc.specific.JdbcSpecific.AutoGeneratedKeysType;
import org.jetel.connection.jdbc.specific.JdbcSpecific.OperationType;
import org.jetel.exception.JetelException;

public class MySQLConnection extends DefaultConnection {
	
	public MySQLConnection(DBConnection dbConnection, OperationType operationType) throws JetelException {
		super(dbConnection, operationType, AutoGeneratedKeysType.SINGLE);
	}

	@Override
	protected Statement optimizeStatement(Statement statement) throws SQLException {
		super.optimizeStatement(statement);
		
		switch (operationType) {
		case READ:
			statement.setFetchSize(Integer.MIN_VALUE);
			break;
		}

		return statement;
	}
	
}