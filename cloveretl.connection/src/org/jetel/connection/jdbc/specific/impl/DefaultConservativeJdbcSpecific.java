package org.jetel.connection.jdbc.specific.impl;

import java.sql.Connection;
import java.sql.ResultSet;

import org.jetel.connection.jdbc.DBConnection;
import org.jetel.connection.jdbc.specific.conn.DefaultConnection;
import org.jetel.exception.JetelException;

/**
 * The implementation of JdbcSpecific, that isn't set nearly anything.
 *  
 * @author Miroslav Haupt (hauptm@javlin.cz)
 *         (c) Javlin a.s. (www.javlin.cz)
 *
 * @created 20.4.2008
 */
public class DefaultConservativeJdbcSpecific extends AbstractJdbcSpecific {

	private static final DefaultConservativeJdbcSpecific INSTANCE = new DefaultConservativeJdbcSpecific();

	protected DefaultConservativeJdbcSpecific() {
		super(AutoGeneratedKeysType.NONE);
	}

	public static DefaultConservativeJdbcSpecific getInstance() {
		return INSTANCE;
	}

	@Override
	public Connection createSQLConnection(DBConnection dbConnection, OperationType operationType) throws JetelException {
		return new DefaultConnection(dbConnection, operationType, getAutoKeyType(), true);
	}

	@Override
	public void optimizeResultSet(ResultSet resultSet,
			OperationType operationType) {
		// EMPTY
	}
	
	

}
