<?xml version="1.0" encoding="UTF-8"?>
<Graph author="cloveruser" created="Wed Mar 07 09:01:26 CET 2007" description="This example illustrates usage of Reformat component with transformation written in Transform Language.&#10;" guiVersion="0.0.0.devel" id="1204549608934" licenseType="Evaluation Devel" modified="Fri Mar 12 13:21:45 CET 2010" modifiedBy="cloveruser" name="Testing Reformat" revision="1.21">
<Global>
<Metadata fileURL="${META_DIR}/delimited/orders.fmt" id="Metadata0"/>
<Metadata fileURL="${META_DIR}/delimited/ordersInfo.fmt" id="Metadata1"/>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="319" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Use of Reformat" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="481" x="37" y="146">
<attr name="text"><![CDATA[
The graph demonstrates the use of Reformat. In this graph, transformation is defined using the Transform URL attribute and it is written in Clover transformation language in a file outside the graph.

Transformation can also be defined in such external file written in Java (graphOrdersReformatExternTransform.grf).

It can also be written in Java or CTL directly in the graph. See graphOrdersReformatInline.grf or graphOrdersTLReformat.grf, respectively.

Also a compiled Java class can be used: graphOrdersReformat.grf.

All of these options are equivalent ways of defining the transformation. Most component allow to use the same 5 options. Only MultiLevelReader, JMSReader, JMSWriter, and JavaExecute do not allow the use of CTL.

Another equivalent graph is graphSequence.grf which gives the same results. It uses an internal sequence.]]></attr>
</Note>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/delimited/orders.dat" guiHeight="25" guiName="Orders" guiWidth="50" guiX="20" guiY="20" id="INPUT" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/orders.dat.out" guiHeight="25" guiName="Orders Transformed" guiWidth="50" guiX="370" guiY="20" id="OUTPUT" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="25" guiName="Reformat" guiWidth="50" guiX="195" guiY="20" id="REF" transformURL="${TRANS_DIR}/reformatOrders.ctl" type="REFORMAT"/>
<Edge debugMode="false" fromNode="INPUT:0" guiBendpoints="" id="INEDGE" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="REF:0"/>
<Edge debugMode="false" fromNode="REF:0" guiBendpoints="" id="OUTEDGE" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="OUTPUT:0"/>
</Phase>
</Graph>
