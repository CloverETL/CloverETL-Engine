<?xml version="1.0" encoding="UTF-8"?>
<Graph author="avackova" created="Fri Feb 16 10:01:53 CET 2007" description="This graph demonstrates how to use HASH_JOIN component for 3way join. HASH_JOIN component&#10;performs joining of master data with slave data based on specified key. First all slave&#10;data are read and hash-table is constructed from them. Then for every master record, attempt&#10;is made to find corresponding slave-record.&#10;HASH_JOIN performs better than SORT/MERGE_JOIN when you have relatively small slave data set&#10;and big master data set. It doesn't require master and slave data to be sorted" guiVersion="0.0.0.devel" id="1204547167052" licenseType="Evaluation Devel" modified="Fri Jun 17 13:41:15 CEST 2011" modifiedBy="avackova" name="Testing Hash Joiner" revision="1.49" showComponentDetails="true">
<Global>
<Metadata fileURL="${META_DIR}/delimited/customers.fmt" id="Metadata3"/>
<Metadata fileURL="${META_DIR}/delimited/employees.fmt" id="Metadata0"/>
<Metadata fileURL="${META_DIR}/delimited/joinedOrders3way.fmt" id="Metadata2"/>
<Metadata fileURL="${META_DIR}/delimited/orders.fmt" id="Metadata1"/>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/delimited/orders.dat" guiHeight="101" guiName="Orders" guiWidth="128" guiX="24" guiY="9" id="INPUT1" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAIN_DIR}/delimited/employees.dat" guiHeight="101" guiName="Employees" guiWidth="128" guiX="24" guiY="120" id="INPUT2" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAIN_DIR}/delimited/customers_delimited.txt" guiHeight="101" guiName="Customers" guiWidth="128" guiX="24" guiY="227" id="INPUT3" type="DATA_READER"/>
<Node enabled="enabled" guiHeight="101" guiName="ExtHashJoin" guiWidth="128" guiX="252" guiY="97" id="JOIN" joinKey="EmployeeID=EmployeeID#CustomerID=CUSTOMERID" joinType="leftOuter" slaveDuplicates="true" type="EXT_HASH_JOIN">
<attr name="transform"><![CDATA[
import org.jetel.component.DataRecordTransform;
import org.jetel.data.*;


public class ReformatJoinTest3WayInline extends DataRecordTransform{

	private final static String MISSING = "*MISSING*";

	Object CustomerID;
	Object Company;

	public int transform(DataRecord[] source, DataRecord[] target){

			CustomerID = source[0].getField(1).getValue();

			target[0].getField(0).setValue(source[0].getField(0).getValue());	// OrderID
  			target[0].getField(1).setValue(CustomerID != null ? CustomerID : MISSING);	// CustomerID
			target[0].getField(2).setValue(source[0].getField(2).getValue().toString());	// EmployeeID
			if (source[1]!=NullRecord.NULL_RECORD){
				target[0].getField(4).setValue(source[1].getField(1).toString() + ", " + source[1].getField(2).toString());	// Name
			} else {
				target[0].getField(4).setValue(MISSING);
			}

			Company = source[2].getField(1).getValue();
			target[0].getField(3).setValue(Company != null ? Company : MISSING);	// Company
			target[0].getField(5).setValue(MISSING);
		return ALL;
	}
}

]]></attr>
<attr name="guiDescription"><![CDATA[- Orders with Employees on EmployeeID
- Orders with Customers on CustomerID
Left outer join (also Orders without Employees and Customers are joined)]]></attr>
</Node>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/joined_data_hash.out" guiHeight="101" guiName="Orders-Employees-Customers" guiWidth="244" guiX="468" guiY="97" id="WRITER" type="DATA_WRITER"/>
<Edge debugMode="false" fromNode="INPUT1:0" guiBendpoints="218:29|218:113" guiLocks="218|null|null" guiRouter="Manual" id="INEDGE1" inPort="Port 0 (driver)" metadata="Metadata1" outPort="Port 0 (output)" router="Manhattan" toNode="JOIN:0"/>
<Edge debugMode="false" fromNode="INPUT2:0" guiBendpoints="201:140|201:129" guiLocks="201|null|null" guiRouter="Manual" id="INEDGE2" inPort="Port 1 (slave)" metadata="Metadata0" outPort="Port 0 (output)" router="Manhattan" toNode="JOIN:1"/>
<Edge debugMode="false" fromNode="INPUT3:0" guiBendpoints="226:247|226:84" guiLocks="226|null|null" guiRouter="Manual" id="INEDGE3" inPort="Port 2 (slave)" metadata="Metadata3" outPort="Port 0 (output)" router="Manhattan" toNode="JOIN:2"/>
<Edge debugMode="false" fromNode="JOIN:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="OUTEDGE" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (out)" router="Manhattan" toNode="WRITER:0"/>
</Phase>
</Graph>
