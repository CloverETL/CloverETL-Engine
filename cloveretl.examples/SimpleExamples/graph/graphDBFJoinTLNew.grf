<?xml version="1.0" encoding="UTF-8"?>
<Graph author="avackova" created="Wed Nov 22 10:24:41 CET 2006" description="This graph illustrates complex transformation. It reads data about orders made and&#10;combines them (joins) with data about which items were purchased. It then adds&#10;information about which company made particular order/bought particular item.&#10;It illustrates usage of DBFDataReader,Sort,MergeJoin,HashJoin,Filter.&#10;&#10;It also shows how to embed data transformation routine directly into transformation&#10;graph layou file (both joins have the transformations embedded - see below).&#10;&#10;Note: It is faster to reference record's fields by index as opposite to names - used&#10;in this example.&#10;" guiVersion="0.0.0.devel" id="1196411890471" licenseType="Evaluation Devel" modified="Wed Jun 09 11:47:13 CEST 2010" modifiedBy="avackova" name="ComplexTransformation" revision="1.62">
<Global>
<Metadata fileURL="${META_DIR}/delimited/customers.fmt" id="Metadata0"/>
<Metadata fileURL="${META_DIR}/delimited/ordersInfo.fmt" id="Metadata3"/>
<Metadata fileURL="${META_DIR}/fixlen/odetailsDBF.fmt" id="Metadata1"/>
<Metadata fileURL="${META_DIR}/fixlen/ordersDBF.fmt" id="Metadata2"/>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="237" id="Note1" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="ExtMergeJoin" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="159" x="371" y="135">
<attr name="text"><![CDATA[
Left outer join 

= also Orders without Details]]></attr>
</Note>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="237" id="Note2" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="ExtHashJoin" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="155" x="551" y="135">
<attr name="text"><![CDATA[
Left outer join

= also Orders without Customers]]></attr>
</Note>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="228" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Usage of CTL2" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="288" x="717" y="-46">
<attr name="text"><![CDATA[
This graph illustrates the usage of a new Clover Transformation Language 2.

Both Joiners use this new language to define the transformation.

CTL2 is strongly typed language with type control. Arguments and return values of the functions are strictly typed. 

CTL2 has many advantages as compared with CTL1. See CloverETL Designer Users Guide for details.]]></attr>
</Note>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="100" id="Note3" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Equivalent in CTL2" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="274" x="387" y="-82">
<attr name="text"><![CDATA[
This is an equivalent of graphDBFJoinTL.grf written in a new Clover transformation language - CTL2.]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" guiHeight="25" guiName="ExtSort (ORDERID)" guiWidth="50" guiX="196" guiY="194" id="EXT_SORT_DETAILS" sortKey="ORDERID(a)" type="EXT_SORT"/>
<Node enabled="enabled" guiHeight="25" guiName="ExtSort (ORDERID)" guiWidth="50" guiX="196" guiY="281" id="EXT_SORT_ORDERS" sortKey="ORDERID(a)" type="EXT_SORT"/>
<Node charset="ISO-8859-1" enabled="enabled" fileURL="${DATAIN_DIR}/other/ODETAILS.DBF" guiHeight="25" guiName="Orders Details" guiWidth="50" guiX="20" guiY="194" id="IN_DETAILS" type="DBF_DATA_READER"/>
<Node charset="ISO-8859-1" enabled="enabled" fileURL="${DATAIN_DIR}/other/ORDERS.DBF" guiHeight="25" guiName="Orders General" guiWidth="50" guiX="20" guiY="281" id="IN_ORDERS" type="DBF_DATA_READER"/>
<Edge debugMode="false" fromNode="EXT_SORT_DETAILS:0" guiBendpoints="" id="Edge3" inPort="Port 1 (slave)" metadata="Metadata1" outPort="Port 0 (out)" router="Manhattan" toNode="JOIN:1"/>
<Edge debugMode="false" fromNode="EXT_SORT_ORDERS:0" guiBendpoints="" id="Edge2" inPort="Port 0 (driver)" metadata="Metadata2" outPort="Port 0 (out)" router="Manhattan" toNode="JOIN:0"/>
<Edge debugMode="false" fromNode="IN_DETAILS:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" router="Manhattan" toNode="EXT_SORT_DETAILS:0"/>
<Edge debugMode="false" fromNode="IN_ORDERS:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (out)" router="Manhattan" toNode="EXT_SORT_ORDERS:0"/>
</Phase>
<Phase number="1">
<Node enabled="enabled" guiHeight="25" guiName="Filter &quot;N/A&quot; Customers" guiWidth="50" guiX="717" guiY="250" id="FILTER" type="EXT_FILTER">
<attr name="filterExpression"><![CDATA[$CUSTOMER!="N/A"]]></attr>
</Node>
<Node dataPolicy="controlled" enabled="enabled" fileURL="${DATAIN_DIR}/delimited/customers_delimited.txt" guiHeight="25" guiName="Customers (Controlled)" guiWidth="50" guiX="388" guiY="39" id="IN_CUSTOMERS" quotedStrings="true" type="DATA_READER"/>
<Node ascendingInputs="true" enabled="enabled" guiHeight="25" guiName="Orders Complete Info" guiWidth="50" guiX="387" guiY="250" id="JOIN" joinKey="$ORDERID;#$ORDERID;#" joinType="leftOuter" type="EXT_MERGE_JOIN">
<attr name="transform"><![CDATA[//#CTL2

function double price_per_unit(double unit_price,double quantity,double discount){
	return (unit_price*quantity - discount)/quantity;
}


function long ship_time(date ordered,date shipped){
	if (shipped.lt.ordered) {
		raiseError("Ship time can't be lower than order date");
	}
	else return dateDiff(shipped,ordered,day);
}

function integer transform(){
	string datum;
	integer shiptime;
	datum = $ORDERS_DBF.SHIPPEDDAT;
	if (!isnull(datum)) {
		shiptime= long2integer(ship_time($ORDERS_DBF.ORDERDATE,str2date(datum,"yyyyMMdd"))); 
	} else { shiptime=-1;}
	$ORDERS_Info.ORDERID=$ORDERS_DBF.ORDERID;
	$ORDERS_Info.CUSTOMERID=$ORDERS_DBF.CUSTOMERID;
	$ORDERS_Info.PRODUCTID=$Bigodata_dbf.PRODUCTID;
	$ORDERS_Info.UNITPRICE=$Bigodata_dbf.UNITPRICE;
	$ORDERS_Info.PRICE_PER_UNIT=price_per_unit($Bigodata_dbf.UNITPRICE,$Bigodata_dbf.QUANTITY,$Bigodata_dbf.DISCOUNT);
	$ORDERS_Info.QUANTITY=$Bigodata_dbf.QUANTITY;
	$ORDERS_Info.DISCOUNT=$Bigodata_dbf.DISCOUNT;
	$ORDERS_Info.SHIPTIME=shiptime;
	return ALL;
}
]]></attr>
</Node>
<Node enabled="enabled" guiHeight="25" guiName="Orders and Customers" guiWidth="50" guiX="562" guiY="251" id="JOIN_CUSTOMER" joinKey="$CUSTOMERID=$CUSTOMERID;#" joinType="leftOuter" type="EXT_HASH_JOIN">
<attr name="transform"><![CDATA[//#CTL2

function void copyFields(){
	$ORDERS_Info.*=$ORDERS_Info.*;
}
function integer transform(){
	copyFields();
	//only for debugging
	if (isnull($Customer.CompanyName)) {
		printErr("$Customer.CompanyName is null");
	}else {
		printErr("$Customer.CompanyName="+$Customer.CompanyName);
	}
	$ORDERS_Info.CUSTOMER = nvl($Customer.CompanyName,"N/A");
	return ALL;
 }

]]></attr>
</Node>
<Node append="false" enabled="enabled" fileURL="${DATAOUT_DIR}/joinedDBForders.out" guiHeight="25" guiName="Orders-Customers" guiWidth="50" guiX="883" guiY="199" id="WRITER1" type="DATA_WRITER"/>
<Node append="false" enabled="enabled" fileURL="${DATAOUT_DIR}/joinedDBFordersNA.out" guiHeight="25" guiName="Orders-N/ACustomers" guiWidth="50" guiX="882" guiY="296" id="WRITER2" type="DATA_WRITER"/>
<Edge debugMode="false" fromNode="FILTER:0" guiBendpoints="" id="Edge7" inPort="Port 0 (in)" metadata="Metadata3" outPort="Port 0 (accepted)" router="Manhattan" toNode="WRITER1:0"/>
<Edge debugMode="false" fromNode="FILTER:1" guiBendpoints="" id="Edge8" inPort="Port 0 (in)" metadata="Metadata3" outPort="Port 1 (rejected)" router="Manhattan" toNode="WRITER2:0"/>
<Edge debugMode="false" fromNode="IN_CUSTOMERS:0" guiBendpoints="" id="Edge15" inPort="Port 1 (slave)" metadata="Metadata0" outPort="Port 0 (output)" router="Manhattan" toNode="JOIN_CUSTOMER:1"/>
<Edge debugMode="false" fromNode="JOIN:0" guiBendpoints="" id="Edge11" inPort="Port 0 (driver)" metadata="Metadata3" outPort="Port 0 (out)" router="Manhattan" toNode="JOIN_CUSTOMER:0"/>
<Edge debugMode="false" fromNode="JOIN_CUSTOMER:0" guiBendpoints="" id="Edge13" inPort="Port 0 (in)" metadata="Metadata3" outPort="Port 0 (out)" router="Manhattan" toNode="FILTER:0"/>
</Phase>
</Graph>
