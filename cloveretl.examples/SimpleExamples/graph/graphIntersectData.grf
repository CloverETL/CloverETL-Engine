<?xml version="1.0" encoding="UTF-8"?>
<Graph author="avackova" created="Thu Jan 25 12:46:12 CET 2007" description="This graph demonstrates functionality of DATA_INTERSECT component - performs &#10;joining of two sorted (based on specified key) data flows (A and B) and outputs:&#10;- to port 0 records found only in flow A&#10;- to port 1 records found in A &amp;amp; B&#10;- to port 2 records found only in flow B  &#10;&#10;Records both in flow A &amp;amp; B should be unique" guiVersion="0.0.0.devel" id="1204546108983" licenseType="Evaluation Devel" modified="Fri Jun 17 13:40:42 CEST 2011" modifiedBy="avackova" name="Intersect Data" revision="1.41" showComponentDetails="true">
<Global>
<Metadata fileURL="${META_DIR}/delimited/employeeDB.fmt" id="Metadata0"/>
<Metadata fileURL="${META_DIR}/delimited/employees.fmt" id="Metadata1"/>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="343" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Use of the DataIntersection Component" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="552" x="22" y="223">
<attr name="text"><![CDATA[
DataIntersection receives data records through two required input ports. Metadata may by different on either of the two input ports. 

Output metadata on output port 0 must be identical with those on input 0. Output metadata on output port 2 must be identical with those on input 1. Output metadata on port 1 are arbitrary.

DataIntersection requires sorted records on both input ports. Unsorted records would give unpredictable results.

Component processes data flows from both inputs and sends those records that are only in flow A to the output 0, those which are only in flow B to the output 3, and those from both A and B to the output 1.

Data record is considered to be a member of both data flows if corresponding part of their metadata on one input equals to the same part of the other input. In our case, Join key is $EmployeeID=$EMP_NO. This means that records in which the value of EmployeeID (port 0) equals to the value of EMP_NO (port1) are in both A and B flows.

By default, component has also Allow key duplicates set to true. In other words, to one master record (port 0) multiple slaves (port 1) may be found. If you want to find one record only for each master, switch this attribute to false.
]]></attr>
</Note>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="355" id="Note4" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Groups of Employees" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="186" x="583" y="-58"/>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" guiHeight="101" guiName="DataIntersection" guiWidth="152" guiX="394" guiY="11" id="DATA_INTERSECTION0" joinKey="$EmployeeID=$EMP_NO" type="DATA_INTERSECTION">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$0.EMP_NO = $0.EmployeeID;
	$0.FIRST_NAME = $0.FirstName;
	$0.LAST_NAME = $0.LastName;
	$0.FULL_NAME = $1.FULL_NAME;
	$0.HIRE_DATE = $1.HIRE_DATE;
	$0.HIRE_DATE = $0.HireDate;
	return ALL;
}

// Called to return a user-defined error message when an error occurs.
// function getMessage() {}

// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
<attr name="guiDescription"><![CDATA[Employees in both flows (A and B) are compared and intersection of both flows is performed.]]></attr>
</Node>
<Node enabled="enabled" guiHeight="85" guiName="ExtSort (Flow A)" guiWidth="148" guiX="190" guiY="-37" id="EXT_SORT0" sortKey="EmployeeID(a)" type="EXT_SORT"/>
<Node enabled="enabled" guiHeight="85" guiName="ExtSort (Flow B)" guiWidth="147" guiX="190" guiY="107" id="EXT_SORT1" sortKey="EMP_NO(a)" type="EXT_SORT"/>
<Node enabled="enabled" fileURL="${DATAIN_DIR}/delimited/employees.dat" guiHeight="101" guiName="Employees" guiWidth="128" guiX="22" guiY="-37" id="INPUT1" type="DATA_READER">
<attr name="guiDescription"><![CDATA[Source of Data Flow A]]></attr>
</Node>
<Node enabled="enabled" fileURL="${DATAIN_DIR}/delimited/employees.list.dat" guiHeight="101" guiName="List of Employees" guiWidth="157" guiX="22" guiY="107" id="INPUT2" type="DATA_READER">
<attr name="guiDescription"><![CDATA[Source of Data Flow B]]></attr>
</Node>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/intersect_1_data.out" guiHeight="85" guiName="Flow A &amp;&amp; Not B" guiWidth="148" guiX="602" guiY="-24" id="WRITER1" type="DATA_WRITER">
<attr name="OneRecordPerLine"><![CDATA[true]]></attr>
<attr name="guiDescription"><![CDATA[Only A]]></attr>
</Node>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/intersect_1_2_data.out" guiHeight="85" guiName="Flow A &amp;&amp; Flow B" guiWidth="155" guiX="598" guiY="84" id="WRITER2" type="DATA_WRITER">
<attr name="OneRecordPerLine"><![CDATA[true]]></attr>
<attr name="guiDescription"><![CDATA[A and B]]></attr>
</Node>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/intersect_2_data.out" guiHeight="85" guiName="Flow B &amp;&amp; Not A" guiWidth="148" guiX="602" guiY="189" id="WRITER3" type="DATA_WRITER">
<attr name="OneRecordPerLine"><![CDATA[true]]></attr>
<attr name="guiDescription"><![CDATA[Only B]]></attr>
</Node>
<Edge debugMode="false" fromNode="DATA_INTERSECTION0:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="OUTEDGE1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (only in A)" router="Manhattan" toNode="WRITER1:0"/>
<Edge debugMode="false" fromNode="DATA_INTERSECTION0:1" guiBendpoints="573:47|573:104" guiLocks="573|null|null" guiRouter="Manual" id="OUTEDGE2" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 1 (in A &amp; B)" router="Manhattan" toNode="WRITER2:0"/>
<Edge debugMode="false" fromNode="DATA_INTERSECTION0:2" guiBendpoints="559:65|559:209" guiLocks="559|null|null" guiRouter="Manual" id="OUTEDGE3" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 2 (only in B)" router="Manhattan" toNode="WRITER3:0"/>
<Edge debugMode="true" fromNode="EXT_SORT0:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (set A)" metadata="Metadata1" outPort="Port 0 (out)" router="Manhattan" toNode="DATA_INTERSECTION0:0"/>
<Edge debugMode="true" fromNode="EXT_SORT1:0" guiBendpoints="355:127|355:47" guiLocks="355|null|null" guiRouter="Manual" id="Edge1" inPort="Port 1 (set B)" metadata="Metadata0" outPort="Port 0 (out)" router="Manhattan" toNode="DATA_INTERSECTION0:1"/>
<Edge fromNode="INPUT1:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="INEDGE1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (output)" router="Manhattan" toNode="EXT_SORT0:0"/>
<Edge fromNode="INPUT2:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="INEDGE2" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" router="Manhattan" toNode="EXT_SORT1:0"/>
</Phase>
</Graph>
