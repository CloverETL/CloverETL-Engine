<?xml version="1.0" encoding="UTF-8"?>
<Graph author="cloveruser" created="Wed Mar 07 09:01:26 CET 2007" description="This example illustrates usage of Reformat component. Source data contains&#10;info about orders customers made.&#10;We add artifitial key - OrderKey which is a sequence of integers. We also&#10;combine individual fields of ship-to-address (address,city,country) into&#10;one single field.&#10;The ShippedDate is set to constant- 02.02.1999&#10;&#10;Reformat component calls &quot;reformatOrders&quot; class which  implements RecordTransform&#10;interface (required by Reformat component).&#10;" guiVersion="0.0.0.devel" id="1204549338496" licenseType="Evaluation Devel" modified="Fri Jun 10 16:08:02 CEST 2011" modifiedBy="avackova" name="Testing Reformat" revision="1.25" showComponentDetails="true">
<Global>
<Metadata fileURL="${META_DIR}/delimited/orders.fmt" id="Metadata0"/>
<Metadata fileURL="${META_DIR}/delimited/ordersInfo.fmt" id="Metadata1"/>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="259" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Use of Reformat" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="523" x="20" y="141">
<attr name="text"><![CDATA[
The graph demonstrates the use of Reformat. In this graph, transformation is defined using the Transform URL attribute and it is written in Java in a file outside the graph.

Transformation can also be defined in such external file written in Clover transformation languge (graphOrdersTLReformatExtern.grf).

It can also be written in Java or CTL directly in the graph. See graphOrdersReformatInline.grf or graphOrdersTLReformat.grf, respectively.

Also a compiled Java class can be used: graphOrdersReformat.grf.

All of these options are equivalent ways of defining the transformation. Most component allow to use the same 5 options. Only MultiLevelReader, JMSReader, JMSWriter, and JavaExecute do not allow the use of CTL.

]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/delimited/orders.dat" guiHeight="101" guiName="Orders" guiWidth="128" guiX="20" guiY="20" id="INPUT" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/orders.dat.out" guiHeight="101" guiName="Orders Transformed" guiWidth="173" guiX="370" guiY="20" id="OUTPUT" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="69" guiName="Reformat" guiWidth="128" guiX="195" guiY="20" id="REF" transformURL="${TRANS_DIR}/reformatOrders.java" type="REFORMAT"/>
<Edge debugMode="false" fromNode="INPUT:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="INEDGE" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" router="Manhattan" toNode="REF:0"/>
<Edge debugMode="false" fromNode="REF:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="OUTEDGE" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" router="Manhattan" toNode="OUTPUT:0"/>
</Phase>
</Graph>
