<?xml version="1.0" encoding="UTF-8"?>
<Graph author="avackova" created="Wed Nov 22 10:24:41 CET 2006" debugMode="true" description="This graph illustrates complex transformation. It reads data about orders made and&#10;combines them (joins) with data about which items were purchased. It then adds&#10;information about which company made particular order/bought particular item.&#10;It illustrates usage of DBFDataReader,Sort,MergeJoin,HashJoin,Filter.&#10;&#10;It also shows how to embed data transformation routine directly into transformation&#10;graph layou file (both joins have the transformations embedded - see below).&#10;&#10;Note: It is faster to reference record's fields by index as opposite to names - used&#10;in this example.&#10;" guiVersion="0.0.0.devel" id="1196411890471" licenseType="Evaluation Devel" modified="Wed Sep 14 12:52:47 CEST 2011" modifiedBy="avackova" name="ComplexTransformation" revision="1.77" showComponentDetails="true">
<Global>
<Metadata fileURL="${META_DIR}/delimited/customers.fmt" id="Metadata0"/>
<Metadata fileURL="${META_DIR}/delimited/incorrectRecords.fmt" id="Metadata4"/>
<Metadata fileURL="${META_DIR}/delimited/ordersInfo.fmt" id="Metadata3"/>
<Metadata fileURL="${META_DIR}/fixlen/odetailsDBF.fmt" id="Metadata1"/>
<Metadata fileURL="${META_DIR}/fixlen/ordersDBF.fmt" id="Metadata2"/>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="130" id="Note3" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="CTL1 vs. CTL2" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="353" x="17" y="241">
<attr name="text"><![CDATA[
This example is written in CTL1. Now Clover offers a new transformation language - CTL2. 
The same graph written in CTL2 is graphDBFJoinTLNew.grf.]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" guiHeight="85" guiName="ExtSort (ORDERID)" guiWidth="167" guiX="181" guiY="126" id="EXT_SORT_DETAILS" sortKey="ORDERID(a)" type="EXT_SORT"/>
<Node enabled="enabled" guiHeight="85" guiName="ExtSort (ORDERID)" guiWidth="167" guiX="181" guiY="-4" id="EXT_SORT_ORDERS" sortKey="ORDERID(a)" type="EXT_SORT"/>
<Node enabled="enabled" guiHeight="101" guiName="Filter &quot;N/A&quot; Customers" guiWidth="194" guiX="843" guiY="58" id="FILTER" type="EXT_FILTER">
<attr name="guiDescription"><![CDATA[Records without a customer name are rejected and records with a customer name are accepted.]]></attr>
<attr name="filterExpression"><![CDATA[$CUSTOMER!="N/A"]]></attr>
</Node>
<Node charset="UTF-8" dataPolicy="controlled" enabled="enabled" fileURL="${DATAIN_DIR}/delimited/customers_delimited.txt" guiHeight="101" guiName="Customers (Controlled)" guiWidth="199" guiX="384" guiY="214" id="IN_CUSTOMERS" quotedStrings="true" type="DATA_READER">
<attr name="guiDescription"><![CDATA[Customers who made the orders]]></attr>
</Node>
<Node charset="IBM850" enabled="enabled" fileURL="${DATAIN_DIR}/other/ODETAILS.DBF" guiHeight="101" guiName="Orders Details" guiWidth="134" guiX="14" guiY="126" id="IN_DETAILS" type="DBF_DATA_READER">
<attr name="guiDescription"><![CDATA[Information about individual items of each order (details)]]></attr>
</Node>
<Node charset="IBM850" enabled="enabled" fileURL="${DATAIN_DIR}/other/ORDERS.DBF" guiHeight="101" guiName="Orders General" guiWidth="139" guiX="14" guiY="-4" id="IN_ORDERS" type="DBF_DATA_READER">
<attr name="guiDescription"><![CDATA[Information about the orders as a whole]]></attr>
</Node>
<Node ascendingInputs="true" enabled="enabled" guiHeight="101" guiName="Orders Complete Info" guiWidth="187" guiX="381" guiY="58" id="JOIN" joinKey="$ORDERID;#$ORDERID;#" joinType="leftOuter" type="EXT_MERGE_JOIN">
<attr name="transform"><![CDATA[
//#TL
function price_per_unit(unit_price,quantity,discount){
	return (unit_price*quantity - discount)/quantity
}
function ship_time(ordered,shipped){
	if (shipped.lt.ordered) raise_error("Ship time can't be lower than order date");
	else return datediff(shipped,ordered,day);
}

function transform(){
	string datum;
	int shiptime;
	datum = $ORDERS_DBF.SHIPPEDDAT;
	if (!isnull(datum)) {
		shiptime=ship_time($ORDERS_DBF.ORDERDATE,str2date(datum,"yyyyMMdd")); 
	} else { shiptime=-1;}
	$ORDERS_Info.ORDERID:=$ORDERS_DBF.ORDERID;
	$ORDERS_Info.CUSTOMERID:=$ORDERS_DBF.CUSTOMERID;
	$ORDERS_Info.PRODUCTID:=$Bigodata_dbf.PRODUCTID;
	$ORDERS_Info.UNITPRICE:=$Bigodata_dbf.UNITPRICE;
	$ORDERS_Info.PRICE_PER_UNIT:=price_per_unit($Bigodata_dbf.UNITPRICE,$Bigodata_dbf.QUANTITY,$Bigodata_dbf.DISCOUNT);
	$ORDERS_Info.QUANTITY:=$Bigodata_dbf.QUANTITY;
	$ORDERS_Info.DISCOUNT:=$Bigodata_dbf.DISCOUNT;
	$ORDERS_Info.SHIPTIME:=shiptime;
}
]]></attr>
<attr name="guiDescription"><![CDATA[joinType is set to "Left outer join" to process also Orders without Details. slaveDuplicates attribute is set to true as order may include multiple ordered items.]]></attr>
</Node>
<Node enabled="enabled" guiHeight="101" guiName="Orders and Customers" guiWidth="190" guiX="596" guiY="58" id="JOIN_CUSTOMER" joinKey="$CUSTOMERID=$CUSTOMERID;#" joinType="leftOuter" type="EXT_HASH_JOIN">
<attr name="transform"><![CDATA[
//#TL
function copyFields(){
	$ORDERS_Info.*:=$ORDERS_Info.*;
}
function transform(){
	copyFields();
	//only for debugging
	if (isnull($Customer.CompanyName)) {
		print_err("$Customer.CompanyName is null");
	}else {
		print_err("$Customer.CompanyName="+$Customer.CompanyName);
	}
	$ORDERS_Info.CUSTOMER:= nvl($Customer.CompanyName,"N/A");
 }

]]></attr>
<attr name="guiDescription"><![CDATA[joinType is set to "Left outer join" as we want to join also the orders without a customer. But customers without an order will be ignored and will not be sent to the output. slaveDuplicates attribute is set to "false" as customers are unique in the flat file.]]></attr>
</Node>
<Node enabled="enabled" guiHeight="69" guiName="Incorrect Customers" guiWidth="176" guiX="668" guiY="248" id="TRASH0" type="TRASH"/>
<Node charset="UTF-8" enabled="enabled" fileURL="${DATAOUT_DIR}/joinedDBForders.out" guiHeight="101" guiName="Orders-Customers" guiWidth="161" guiX="1074" guiY="11" id="WRITER1" type="DATA_WRITER"/>
<Node charset="UTF-8" enabled="enabled" fileURL="${DATAOUT_DIR}/joinedDBFordersNA.out" guiHeight="101" guiName="Orders-N/ACustomers" guiWidth="188" guiX="1074" guiY="141" id="WRITER2" type="DATA_WRITER"/>
<Edge debugMode="true" fromNode="EXT_SORT_DETAILS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge3" inPort="Port 1 (slave)" metadata="Metadata1" outPort="Port 0 (out)" router="Manhattan" toNode="JOIN:1"/>
<Edge debugMode="true" fromNode="EXT_SORT_ORDERS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge2" inPort="Port 0 (driver)" metadata="Metadata2" outPort="Port 0 (out)" router="Manhattan" toNode="JOIN:0"/>
<Edge debugMode="true" fromNode="FILTER:0" guiBendpoints="" guiRouter="Manhattan" id="Edge7" inPort="Port 0 (in)" metadata="Metadata3" outPort="Port 0 (accepted)" router="Manhattan" toNode="WRITER1:0"/>
<Edge debugMode="true" fromNode="FILTER:1" guiBendpoints="" guiRouter="Manhattan" id="Edge8" inPort="Port 0 (in)" metadata="Metadata3" outPort="Port 1 (rejected)" router="Manhattan" toNode="WRITER2:0"/>
<Edge debugMode="true" fromNode="IN_CUSTOMERS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge15" inPort="Port 1 (slave)" metadata="Metadata0" outPort="Port 0 (output)" router="Manhattan" toNode="JOIN_CUSTOMER:1"/>
<Edge debugMode="true" fromNode="IN_CUSTOMERS:1" guiBendpoints="" guiRouter="Manhattan" id="Edge4" inPort="Port 0 (in)" metadata="Metadata4" outPort="Port 1 (logs)" router="Manhattan" toNode="TRASH0:0"/>
<Edge debugMode="false" fromNode="IN_DETAILS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" router="Manhattan" toNode="EXT_SORT_DETAILS:0"/>
<Edge debugMode="false" fromNode="IN_ORDERS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (out)" router="Manhattan" toNode="EXT_SORT_ORDERS:0"/>
<Edge debugMode="true" fromNode="JOIN:0" guiBendpoints="" guiRouter="Manhattan" id="Edge11" inPort="Port 0 (driver)" metadata="Metadata3" outPort="Port 0 (out)" router="Manhattan" toNode="JOIN_CUSTOMER:0"/>
<Edge debugMode="true" fromNode="JOIN_CUSTOMER:0" guiBendpoints="" guiRouter="Manhattan" id="Edge13" inPort="Port 0 (in)" metadata="Metadata3" outPort="Port 0 (out)" router="Manhattan" toNode="FILTER:0"/>
</Phase>
</Graph>
