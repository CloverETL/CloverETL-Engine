<?xml version="1.0" encoding="UTF-8"?>
<Graph author="Petr" created="Thu Sep 24 09:28:57 CEST 2009" guiVersion="4.5.0.M1" id="1253797005857" licenseCode="Javlin-Internal-License" licenseType="Evaluation Devel" modified="Fri Jun 10 10:30:25 CEST 2011" modifiedBy="avackova" name="D_STORE_SCD1" revision="1.33" showComponentDetails="true">
<Global>
<Metadata fileURL="${META_DIR}/D_STORE.fmt" id="Metadata1"/>
<Metadata fileURL="${META_DIR}/Store.fmt" id="Metadata0"/>
<Metadata id="Metadata2" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="D_STORE_Store" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" recordSize="-1" skipSourceRows="1" type="delimited">
<Field eofAsDelimiter="false" name="ID_D_STORE" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="STORE_NUMBER" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="STORE_NAME" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="STORE_STREET_ADDRESS" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="STORE_CITY" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="STORE_MANAGER" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="STORE_ZIP_CODE" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="NO_EMPLOYEE" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="STORE_NAME_NEW" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="STORE_STREET_ADDRESS_NEW" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="STORE_CITY_NEW" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="STORE_MANAGER_NEW" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="STORE_ZIP_CODE_NEW" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="NO_EMPLOYEE_NEW" nullable="true" shift="0" size="0" type="integer"/>
</Record>
</Metadata>
<GraphParameters>
<GraphParameterFile fileURL="workspace.prm"/>
</GraphParameters>
<Sequence cached="5" fileURL="${SEQ_DIR}/ID_D_STORE.seq" id="Sequence0" name="ID_D_STORE" start="1" step="1" type="SIMPLE_SEQUENCE"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="146" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="OLTP" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="149" x="63" y="194"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="146" id="Note1" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Data Warehouse" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="149" x="63" y="38"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="258" id="Note3" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Filling of Store dimension of DWH" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="922" x="64" y="347">
<attr name="text"><![CDATA[
Store dimension is slowly changing dimension type 1 (no history preserved)

Inputs:
- D_STORE file contains the contents of Store dimension as of 24th Sep 2009
- Store_input contains a snapshot of the online transaction processing system (OLTP) as of 25th Sep 2009

Processing:
- data records from dimension and OLTP are intersected on natural key (STORE_NUMBER) in the DataIntersection component
- the records not contained in DWH but contained in OLTP are processed in the third branch of the graph after DataIntersection - new ID_D_STORE is genereted and the resulting data records are written to the D_STORE_insert.tbl file
- the records contained in both DWH and OLTP are processed in the second branch of the graph after DataIntersection - differences between OLTP and DWH are found and the new values from OLTP are written to the D_STORE_update.tbl file

If the data is stored in database instead of files, the D_STORE_update.tbl and D_STORE_insert.tbl files are replaced by SQL queries: UPDATE (ID_D_STORE is unique identifier of records) and INSERT
]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" guiName="DataIntersection" guiX="479" guiY="136" id="DATA_INTERSECTION0" joinKey="$STORE_NUMBER=$STORE_NUMBER" keyDuplicates="false" order="Asc" type="DATA_INTERSECTION">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$0.ID_D_STORE = toString($0.ID_D_STORE);
	$0.STORE_NUMBER = $0.STORE_NUMBER;
	$0.STORE_NAME = $0.STORE_NAME;
	$0.STORE_STREET_ADDRESS = $0.STORE_STREET_ADDRESS;
	$0.STORE_CITY = $0.STORE_CITY;
	$0.STORE_MANAGER = $0.STORE_MANAGER;
	$0.STORE_ZIP_CODE = $0.STORE_ZIP_CODE;
	$0.NO_EMPLOYEE = $0.NO_EMPLOYEE;
	$0.STORE_NAME_NEW = $1.STORE_NAME;
	$0.STORE_STREET_ADDRESS_NEW = $1.STORE_STREET_ADDRESS;
	$0.STORE_CITY_NEW = $1.STORE_CITY;
	$0.STORE_MANAGER_NEW = $1.STORE_MANAGER;
	$0.STORE_ZIP_CODE_NEW = $1.STORE_ZIP_CODE;
	$0.NO_EMPLOYEE_NEW = $1.NO_EMPLOYEE;
	return ALL;
}

// Called to return a user-defined error message when an error occurs.
// function getMessage() {}

// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
<attr name="guiDescription"><![CDATA[Records are intersected on natural key]]></attr>
</Node>
<Node enabled="enabled" fileURL="${TABLES}/D_STORE.tbl" guiName="D_STORE" guiX="72" guiY="71" id="DATA_READER0" type="DATA_READER">
<attr name="guiDescription"><![CDATA[Store dimension as of 24th Sep 2009]]></attr>
</Node>
<Node enabled="enabled" fileURL="${DATAIN_DIR}/Store_25092009.csv" guiName="Store_input" guiX="73" guiY="225" id="DATA_READER1" skipRows="1" type="DATA_READER">
<attr name="guiDescription"><![CDATA[Snapshot of the online transaction processing system (OLTP) as of 25th Sep 2009]]></attr>
</Node>
<Node enabled="enabled" guiName="Find differences" guiX="652" guiY="128" id="EXT_FILTER0" type="EXT_FILTER">
<attr name="guiDescription"><![CDATA[Processing the records contained in both DWH and OLTP]]></attr>
<attr name="filterExpression"><![CDATA[//#CTL2
$STORE_NAME != $STORE_NAME_NEW OR $STORE_STREET_ADDRESS != $STORE_STREET_ADDRESS_NEW OR $STORE_CITY != $STORE_CITY_NEW
OR $STORE_MANAGER != $STORE_MANAGER_NEW OR $STORE_ZIP_CODE != $STORE_ZIP_CODE_NEW OR $NO_EMPLOYEE != $NO_EMPLOYEE_NEW]]></attr>
</Node>
<Node enabled="enabled" guiName="Sort by STORE_NUMBER" guiX="251" guiY="87" id="EXT_SORT0" sortKey="STORE_NUMBER(a)" type="EXT_SORT"/>
<Node enabled="enabled" guiName="Sort by STORE_NUMBER" guiX="253" guiY="225" id="EXT_SORT1" sortKey="STORE_NUMBER(a)" type="EXT_SORT"/>
<Node enabled="enabled" guiName="Add ID_D_STORE" guiX="653" guiY="243" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$0.STORE_NUMBER = $0.STORE_NUMBER;
	$0.STORE_NAME = $0.STORE_NAME;
	$0.STORE_STREET_ADDRESS = $0.STORE_STREET_ADDRESS;
	$0.STORE_CITY = $0.STORE_CITY;
	$0.STORE_MANAGER = $0.STORE_MANAGER;
	$0.STORE_ZIP_CODE = $0.STORE_ZIP_CODE;
	$0.NO_EMPLOYEE = $0.NO_EMPLOYEE;
	$0.ID_D_STORE = sequence(ID_D_STORE).next();
	return ALL;
}

// Called to return a user-defined error message when an error occurs.
// function getMessage() {}

// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
<attr name="guiDescription"><![CDATA[Processing the records not contained in DWH but contained in OLTP]]></attr>
</Node>
<Node enabled="enabled" guiName="Select new values" guiX="818" guiY="128" id="REFORMAT1" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$0.ID_D_STORE = str2integer($0.ID_D_STORE);
	$0.STORE_NUMBER = $0.STORE_NUMBER;
	$0.STORE_NAME = $0.STORE_NAME_NEW;
	$0.STORE_STREET_ADDRESS = $0.STORE_STREET_ADDRESS_NEW;
	$0.STORE_CITY = $0.STORE_CITY_NEW;
	$0.STORE_MANAGER = $0.STORE_MANAGER_NEW;
	$0.STORE_ZIP_CODE = $0.STORE_ZIP_CODE_NEW;
	$0.NO_EMPLOYEE = $0.NO_EMPLOYEE_NEW;
	return ALL;
}

// Called to return a user-defined error message when an error occurs.
// function getMessage() {}

// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Node enabled="enabled" guiName="Trash" guiX="651" guiY="56" id="TRASH0" type="TRASH"/>
<Edge fromNode="DATA_INTERSECTION0:0" guiBendpoints="4:0|4:-78" guiLocks="null|null|null" guiRouter="Manual" id="Edge8" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (only in A)" toNode="TRASH0:0"/>
<Edge debugMode="false" fromNode="DATA_INTERSECTION0:1" guiBendpoints="646:172|646:148" guiLocks="646|null|null" guiRouter="Manual" id="Edge6" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 1 (in A &amp; B)" toNode="EXT_FILTER0:0"/>
<Edge fromNode="DATA_INTERSECTION0:2" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge4" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 2 (only in B)" toNode="REFORMAT0:0"/>
<Edge fromNode="DATA_READER0:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (output)" toNode="EXT_SORT0:0"/>
<Edge debugMode="false" fromNode="DATA_READER1:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="EXT_SORT1:0"/>
<Edge fromNode="EXT_FILTER0:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge7" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (accepted)" toNode="REFORMAT1:0"/>
<Edge fromNode="EXT_SORT0:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge2" inPort="Port 0 (set A)" metadata="Metadata1" outPort="Port 0 (out)" toNode="DATA_INTERSECTION0:0"/>
<Edge fromNode="EXT_SORT1:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge3" inPort="Port 1 (set B)" metadata="Metadata0" outPort="Port 0 (out)" toNode="DATA_INTERSECTION0:1"/>
<Edge fromNode="REFORMAT0:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge5" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="DATA_WRITER0:0"/>
<Edge debugMode="false" fromNode="REFORMAT1:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge9" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="DATA_WRITER1:0"/>
</Phase>
<Phase number="1">
<Node enabled="enabled" fileURL="${TABLES}/D_STORE_insert.tbl" guiName="INSERT to D_STORE" guiX="813" guiY="244" id="DATA_WRITER0" type="DATA_WRITER">
<attr name="guiDescription"><![CDATA[New stores]]></attr>
</Node>
<Node enabled="enabled" fileURL="${TABLES}/D_STORE_update.tbl" guiName="UPDATE D_STORE" guiX="985" guiY="128" id="DATA_WRITER1" type="DATA_WRITER">
<attr name="guiDescription"><![CDATA[Updated stores]]></attr>
</Node>
</Phase>
</Graph>
