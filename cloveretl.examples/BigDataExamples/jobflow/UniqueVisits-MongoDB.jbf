<?xml version="1.0" encoding="UTF-8"?>
<Graph author="krivanekm" created="Wed Feb 20 11:21:19 CET 2013" guiVersion="4.2.0.M1" id="1361360543511" licenseCode="Commercial Devel" licenseType="Commercial" modified="Tue Mar 25 15:58:34 CET 2014" modifiedBy="User" name="ProcessLog_CloverETL" nature="jobflow" revision="1.52" showComponentDetails="true">
<Global>
<MetadataGroup name="Implicit metadata" type="implicit">
<Metadata id="__static_metadata_EXECUTE_GRAPH_ExecuteGraph_RunStatus">
<Record fieldDelimiter="|" name="ExecuteGraph_RunStatus" recordDelimiter="\n" type="delimited">
<Field name="runId" trim="true" type="long"/>
<Field name="originalJobURL" type="string"/>
<Field format="yyyy-MM-dd HH:mm:ss" name="startTime" trim="true" type="date"/>
<Field format="yyyy-MM-dd HH:mm:ss" name="endTime" trim="true" type="date"/>
<Field name="duration" trim="true" type="long"/>
<Field name="executionGroup" type="string"/>
<Field name="executionLabel" type="string"/>
<Field name="status" type="string"/>
<Field name="errException" type="string"/>
<Field name="errMessage" type="string"/>
<Field name="errComponent" type="string"/>
<Field name="errComponentType" type="string"/>
</Record>
</Metadata>
</MetadataGroup>
<Connection config="${CONN_DIR}/MongoDB.cfg" id="MONGODB0" type="MONGODB"/>
<GraphParameters>
<GraphParameterFile fileURL="workspace.prm"/>
</GraphParameters>
<RichTextNote backgroundColor="404040" enabled="true" folded="false" fontSize="medium" height="106" id="Note3" textColor="FFFFFF" width="929" x="19" y="17">
<attr name="text"><![CDATA[h3. Big Data - Processing Web Access Log (Unique Visitors):  MongoDB Solution
Report the number of unique visitors per month from a potentially huge web access log using different methods.
(CloverETL, Hadoop HIVE, Hadoop MapReduce, and MongoDB)]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FFFFFF" enabled="true" folded="false" fontSize="medium" height="254" id="Note2" textColor="000000" width="310" x="19" y="122">
<attr name="text"><![CDATA[h3. Scenario

Web servers under heavy load can generate web access logs in orders of tens or hundreds of gigabytes per day.

Preparing such data for analytics in a timely basis is crucial to fast operating businesses.

In this example we demonstrate how to produce a simple "uniques per month" report from a standard Apache access_log file.
]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FFFFFF" enabled="true" folded="false" fontSize="medium" height="254" id="Note5" textColor="000000" width="394" x="328" y="122">
<attr name="text"><![CDATA[h3. CloverETL feeding data to MongoDB

The end-to-end solution is composed of the following steps:

Step 1: Parse the log file on local disks, extract the (year+month, ip) pairs and insert them into MongoDB

Step 2: Count the unique visitors using MongoDB aggregation framework

Step 3: Sorts the output file and generate an Excel report]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FFFFFF" enabled="true" folded="false" fontSize="medium" height="254" id="Note4" textColor="000000" width="226" x="721" y="122">
<attr name="text"><![CDATA[h3. MongoDB Configuration

Before running the job you need to setup the MongoDB connection.


]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="60FF60" enabled="true" folded="false" fontSize="medium" height="158" id="Note0" textColor="000000" width="389" x="315" y="402">
<attr name="text"><![CDATA[h3. MongoDB query
]]></attr>
</RichTextNote>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" guiName="Count Unique Visitors using MongoDB Query" guiX="371" guiY="460" id="COUNT_UNIQUE_VISITORS_USING_MONGO_DB_QUERY" jobURL="${GRAPH_DIR}/MongoDB-CountVisits.grf" type="EXECUTE_GRAPH"/>
<Node enabled="enabled" guiName="Generate Report" guiX="823" guiY="460" id="GENERATE_REPORT" jobURL="${GRAPH_DIR}/GenerateReport.grf" type="EXECUTE_GRAPH"/>
<Node enabled="enabled" guiName="Write Inputs to MongoDB" guiX="61" guiY="460" id="WRITE_INPUTS_TO_MONGO_DB" jobURL="${GRAPH_DIR}/PrepareInputData_MongoDB.grf" type="EXECUTE_GRAPH">
<attr name="outputMapping"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.runId = $in.1.runId;
	$out.0.originalJobURL = $in.1.originalJobURL;
	$out.0.startTime = $in.1.startTime;
	$out.0.endTime = $in.1.endTime;
	$out.0.duration = $in.1.duration;
	$out.0.status = $in.1.status;
	$out.0.errException = $in.1.errException;
	$out.0.errMessage = $in.1.errMessage;
	$out.0.errComponent = $in.1.errComponent;
	$out.0.errComponentType = $in.1.errComponentType;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge fromNode="COUNT_UNIQUE_VISITORS_USING_MONGO_DB_QUERY:0" guiBendpoints="" guiRouter="Manhattan" id="Edge2" inPort="Port 0 (in)" outPort="Port 0 (out)" persistedImplicitMetadata="__static_metadata_EXECUTE_GRAPH_ExecuteGraph_RunStatus" toNode="GENERATE_REPORT:0"/>
<Edge debugMode="true" fromNode="WRITE_INPUTS_TO_MONGO_DB:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" outPort="Port 0 (out)" persistedImplicitMetadata="__static_metadata_EXECUTE_GRAPH_ExecuteGraph_RunStatus" toNode="COUNT_UNIQUE_VISITORS_USING_MONGO_DB_QUERY:0"/>
</Phase>
</Graph>
