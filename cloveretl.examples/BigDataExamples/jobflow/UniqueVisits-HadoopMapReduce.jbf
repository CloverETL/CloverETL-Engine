<?xml version="1.0" encoding="UTF-8"?><Graph author="Wesley" created="Wed Feb 20 11:21:19 CET 2013" guiVersion="3.4.0.M2" id="1361360543511" licenseType="Commercial" modified="Thu Mar 14 18:03:38 CET 2013" modifiedBy="mtomcanyi" name="ProcessLog_CloverETL" nature="jobflow" revision="1.70" showComponentDetails="true">
<Global>
<Metadata id="ExecuteGraph_RunStatus2">
<Record fieldDelimiter="|" name="ExecuteGraph_RunStatus" recordDelimiter="\n" type="delimited">
<Field name="runId" type="long"/>
<Field name="originalJobURL" type="string"/>
<Field format="yyyy-MM-dd HH:mm:ss" name="startTime" type="date"/>
<Field format="yyyy-MM-dd HH:mm:ss" name="endTime" type="date"/>
<Field name="duration" type="long"/>
<Field name="status" type="string"/>
<Field name="errException" type="string"/>
<Field name="errMessage" type="string"/>
<Field name="errComponent" type="string"/>
<Field name="errComponentType" type="string"/>
</Record>
</Metadata>
<Connection config="${CONN_DIR}/Hadoop-CDH-3u5.cfg" id="CDH3" type="HADOOP"/>
<Connection config="${CONN_DIR}/Hadoop-CDH-4.1.2.cfg" id="CDH4" type="HADOOP"/>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="255" backgroundColorG="255" backgroundColorR="255" enabled="true" folded="false" height="263" id="Note6" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Notes" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="233" x="716" y="103">
<attr name="text"><![CDATA[n/a]]></attr>
</Note>
<Note alignment="1" backgroundColorB="255" backgroundColorG="255" backgroundColorR="255" enabled="true" folded="false" height="263" id="Note2" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="A. Scenario" titleColorB="64" titleColorG="64" titleColorR="64" titleFontSize="10" width="233" x="20" y="103">
<attr name="text"><![CDATA[Take a standard web access log file and calculate the number of unique visitors in any given month

The final report should contain a list of months and their respective number of unique visitors

The listing is sorted by months with the most to the least unique visitors ]]></attr>
</Note>
<Note alignment="2" backgroundColorB="64" backgroundColorG="64" backgroundColorR="64" enabled="true" folded="false" height="84" id="Note3" textColorB="255" textColorG="255" textColorR="255" textFontSize="10" title="Big Data Example: Process Web Access Log" titleColorB="255" titleColorG="255" titleColorR="255" titleFontSize="13" width="929" x="20" y="20">
<attr name="text"><![CDATA[
Using different methods (CloverETL, Hadoop HIVE, and Hadoop MapReduce) to report number of unique visitors in a month from a web access log]]></attr>
</Note>
<Note alignment="1" backgroundColorB="255" backgroundColorG="255" backgroundColorR="255" enabled="true" folded="false" height="263" id="Note4" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Important" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="233" x="484" y="103">
<attr name="text"><![CDATA[Before running the job you need to setup the Hadoop HDFS and Hive connections in underlying jobs.

The necessary Hive and Hadoop libraries are located in "lib" directory of this project

Hadoop HDFS+MapRed:
- CDH-3u5: lib/hadoop/cdh3u5/*.jar 
- CDH-4.1.2: lib/hadoop/cdh-412/*jar

MapReduce job JAR:
lib/hadoop/mapreduce/UniqueVisits.jar

MapReduce source (Eclipse project)
src/]]></attr>
</Note>
<Note alignment="1" backgroundColorB="255" backgroundColorG="255" backgroundColorR="255" enabled="true" folded="false" height="263" id="Note5" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="B. Solution" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="233" x="252" y="103">
<attr name="text"><![CDATA[The solution relies on Hadoop map-reduce and takes the following steps:

Step 1: Parses the log file on local disks, extracts the (year+month, ip) pairs and uploads them directly to HDFS

Step 2: Invokes map-reduce and utilizing the secondary sort counts the unique visitors. Map-reduce job stores its a text file stored on HDFS.

Step 3: Downloads the text file from HDFS to local disk.

Step 4: Sorts the interim text file and produces an Excel report.]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node clearOutputDir="true" enabled="enabled" groupingComparatorClass="com.cloveretl.bigdata.example.weblog.GroupByMonthComparator" guiName="Count Unique Visitors using MapReduce" guiX="277" guiY="458" hadoopConnectionId="CDH3" id="COUNT_UNIQUE_VISITORS_USING_MAP_REDUCE" inputFiles="/tmp/bigdata_examples/key-value-pairs" jarLocation="${LIB_DIR}/hadoop/mapreduce-job-definition/UniqueVisits.jar" jobAPIVersion="mapreduce" jobName="Unique Weblog IPs" mapperClass="com.cloveretl.bigdata.example.weblog.UniqueVisitsMapper_NewAPI" mapperOutKeyClass="com.cloveretl.bigdata.example.weblog.CompositeKey" mapperOutValueClass="org.apache.hadoop.io.Text" outKeyClass="org.apache.hadoop.io.Text" outValueClass="org.apache.hadoop.io.IntWritable" outputDirectory="/tmp/WebLogIPsResult" partitionerClass="com.cloveretl.bigdata.example.weblog.GroupByMonthPartitioner_NewAPI" reducerClass="com.cloveretl.bigdata.example.weblog.UniqueVisitsReducer_NewAPI" sortingComparatorClass="com.cloveretl.bigdata.example.weblog.CompositeKeyComparator" type="EXECUTE_MAPREDUCE"/>
<Node enabled="enabled" guiName="Download Results from HDFS" guiX="642" guiY="452" id="DOWNLOAD_RESULTS_FROM_HDFS" jobURL="${GRAPH_DIR}/MapReduce-CountVisits.grf" type="EXECUTE_GRAPH"/>
<Node enabled="enabled" guiName="Generate Report" guiX="929" guiY="452" id="GENERATE_REPORT" jobURL="${GRAPH_DIR}/GenerateReport.grf" type="EXECUTE_GRAPH"/>
<Node enabled="enabled" guiName="Upload Inputs to HDFS" guiX="20" guiY="458" id="UPLOAD_INPUTS_TO_HDFS" jobURL="${GRAPH_DIR}/PrepareInputData.grf" type="EXECUTE_GRAPH">
<attr name="outputMapping"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.runId = $in.1.runId;
	$out.0.originalJobURL = $in.1.originalJobURL;
	$out.0.startTime = $in.1.startTime;
	$out.0.endTime = $in.1.endTime;
	$out.0.duration = $in.1.duration;
	$out.0.status = $in.1.status;
	$out.0.errException = $in.1.errException;
	$out.0.errMessage = $in.1.errMessage;
	$out.0.errComponent = $in.1.errComponent;
	$out.0.errComponentType = $in.1.errComponentType;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge debugMode="true" fromNode="COUNT_UNIQUE_VISITORS_USING_MAP_REDUCE:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" metadata="ExecuteGraph_RunStatus2" outPort="Port 0 (out)" toNode="DOWNLOAD_RESULTS_FROM_HDFS:0"/>
<Edge debugMode="true" fromNode="DOWNLOAD_RESULTS_FROM_HDFS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="ExecuteGraph_RunStatus2" outPort="Port 0 (out)" toNode="GENERATE_REPORT:0"/>
<Edge debugMode="true" fromNode="UPLOAD_INPUTS_TO_HDFS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge2" inPort="Port 0 (in)" metadata="ExecuteGraph_RunStatus2" outPort="Port 0 (out)" toNode="COUNT_UNIQUE_VISITORS_USING_MAP_REDUCE:0"/>
</Phase>
</Graph>
