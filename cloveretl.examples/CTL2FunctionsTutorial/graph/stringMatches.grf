<?xml version="1.0" encoding="UTF-8"?>
<Graph author="cloveruser" created="Wed Jun 09 15:40:10 CEST 2010" guiVersion="0.0.0.devel" id="1276092155114" licenseType="Evaluation Devel" modified="Wed Jun 09 16:17:22 CEST 2010" modifiedBy="cloveruser" name="matches" revision="1.6">
<Global>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="matchesInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Arg" type="string"/>
<Field name="Regex" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="matchesOutput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Arg" type="string"/>
<Field name="Regex" type="string"/>
<Field name="Function" type="string"/>
<Field name="Result" type="boolean"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="143" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="boolean matches(string Arg, string Regexp)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="461" x="61" y="-14">
<attr name="text"><![CDATA[
The matches(string, string) function accepts two string arguments. The second is a regular expression. The string specified as the first argument is compared against the regular expresssion and if the regular expression can match the whole string, the function returns true, otherwise it returns false.
]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/stringMatches.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="33" guiY="152" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/stringMatchesOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="431" guiY="152" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="217" guiY="152" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$0.Arg = $0.Arg;
	$0.Regex = $0.Regex;
	$0.Function = "matches($0.Arg,$0.Regex)";
	$0.Result = matches($0.Arg,$0.Regex);
	return 0;
}

// Called to return a user-defined error message when an error occurs.
// function getMessage() {}

// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Edge fromNode="DATA_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (output)" router="Manhattan" toNode="REFORMAT0:0"/>
<Edge fromNode="REFORMAT0:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" router="Manhattan" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
