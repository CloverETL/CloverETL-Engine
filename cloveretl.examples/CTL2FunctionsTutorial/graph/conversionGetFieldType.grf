<?xml version="1.0" encoding="UTF-8"?>
<Graph author="cloveruser" created="Mon Jun 14 08:30:01 CEST 2010" guiVersion="0.0.0.devel" id="1276513912702" licenseType="Evaluation Devel" modified="Thu Jun 24 10:17:55 CEST 2010" modifiedBy="avackova" name="conversionGetFieldName" revision="1.33">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="getFieldTypeInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n\\|\n" type="delimited">
<Field auto_filling="default_value" default="true" name="booleanField" type="boolean"/>
<Field auto_filling="default_value" default="0" name="byteField" type="byte"/>
<Field auto_filling="source_timestamp" name="dateField" type="date"/>
<Field auto_filling="graph_reader_row_count" name="decimalField" type="decimal"/>
<Field auto_filling="global_row_count" name="integerField" type="integer"/>
<Field auto_filling="source_row_count" name="longField" type="long"/>
<Field auto_filling="source_size" name="numberField" type="number"/>
<Field name="stringField" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="getFieldTypeOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="booleanField" type="boolean"/>
<Field name="byteField" type="byte"/>
<Field name="dateField" type="date"/>
<Field name="decimalField" type="decimal"/>
<Field name="integerField" type="integer"/>
<Field name="longField" type="long"/>
<Field name="numberField" type="number"/>
<Field name="stringField" type="string"/>
<Field name="WhichField" type="integer"/>
<Field name="Function" type="string"/>
<Field name="Result" type="string"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="141" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="string getFieldType(&lt;metadata name&gt; myRecord, integer Index)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="586" x="27" y="20">
<attr name="text"><![CDATA[
This function accepts two arguments: one record and one integer. The function takes the second argument and returns the type of the field in a record with specified Index.

Remember that fields are indexed starting from 0.]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/hack.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="43" guiY="185" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/conversionGetFieldTypeOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="487" guiY="185" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="257" guiY="185" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2
integer Index;
getFieldTypeInput myInputRecords;

function void preExecute() {
     setRandomSeed(10);
}

// Transforms input record into output record.
function integer transform() {
    Index = randomInteger(0,7);
	$0.booleanField = $0.booleanField;
	$0.byteField = $0.byteField;
	$0.dateField = $0.dateField;
	$0.decimalField = $0.decimalField;
	$0.integerField = $0.integerField;
	$0.longField = $0.longField;
	$0.numberField = $0.numberField;
	$0.stringField = $0.stringField;
	$0.WhichField = Index;
	$0.Function = "getFieldType(myInputRecords, Index)";
	$0.Result = getFieldType(myInputRecords, Index);
    return 0;
}

// Called to return a user-defined error message when an error occurs.
// function getMessage() {}

// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Edge fromNode="DATA_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" router="Manhattan" toNode="REFORMAT0:0"/>
<Edge fromNode="REFORMAT0:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" router="Manhattan" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
