<?xml version="1.0" encoding="UTF-8"?>
<Graph author="cloveruser" created="Thu Mar 19 14:24:06 CET 2009" guiVersion="0.0.0.devel" id="1237480457206" licenseType="Evaluation Devel" modified="Mon Jul 12 11:12:36 CEST 2010" modifiedBy="cloveruser" name="conversionNum2str_FormatLocale" revision="1.51">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="num2strFormatInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Number" type="integer"/>
<Field name="Format" type="string"/>
<Field name="Locale" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="num2strFormatOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Number" type="integer"/>
<Field name="Format" type="string"/>
<Field name="Locale" type="string"/>
<Field name="FunctionWithSystemLocale" type="string"/>
<Field name="ResultWithSystemLocale" type="string"/>
<Field name="FunctionWithLocale" type="string"/>
<Field name="ResultWithLocale" type="string"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="150" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="string num2str(numerictype Arg, string Format, string Locale)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="525" x="38" y="31">
<attr name="text"><![CDATA[
The num2str(numerictype, string, string) function accepts three arguments: the first is of any numeric data type and the other two are strings. 
It takes the first argument and converts it into its string representation using the format specified as the second argument and the locale specified as the third.
If third argument is omitted, system locale is used.
]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/conversionNum2str_FormatLocale.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="38" guiY="213" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/conversionNum2stringFormatOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="440" guiY="213" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="229" guiY="213" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$0.Number = $0.Number;
	$0.Format = $0.Format;
	$0.Locale = $Locale;
	$0.FunctionWithSystemLocale = "num2str($0.Number,$0.Format)";
	$0.ResultWithSystemLocale = num2str($0.Number,$0.Format);
	$0.FunctionWithLocale = "num2str($0.Number,$0.Format,$0.Locale)";
	$0.ResultWithLocale = num2str($0.Number,$0.Format,$Locale);

	return 0;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge debugMode="false" fromNode="DATA_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" router="Manhattan" toNode="REFORMAT0:0"/>
<Edge debugMode="true" fromNode="REFORMAT0:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" router="Manhattan" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
