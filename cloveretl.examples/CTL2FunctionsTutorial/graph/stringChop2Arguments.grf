<?xml version="1.0" encoding="UTF-8"?>
<Graph author="cloveruser" created="Mon Jan 26 14:04:02 CET 2009" guiVersion="0.0.0.devel" id="1232976969504" licenseType="Evaluation Devel" modified="Mon Jun 21 08:27:30 CEST 2010" modifiedBy="cloveruser" name="stringChop2Arguments" revision="1.21">
<Global>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="chop2ArgumentsOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Arg1" type="string"/>
<Field name="Arg2" type="string"/>
<Field name="Function" type="string"/>
<Field name="Result" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="chop2Input" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Arg1" type="string"/>
<Field name="Arg2" type="string"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="135" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="string chop(string arg1, string arg2)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="505" x="91" y="65">
<attr name="text"><![CDATA[
The chop(string, string) function accepts two string arguments. It takes the first argument, removes the string specified as the second argument from the end of the first argument and returns the first string argument without the string specified as the second argument.]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/stringChop2Arguments.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="38" guiY="269" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/stringChop2ArgumentsOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="454" guiY="269" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="242" guiY="269" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$0.Arg1 = $0.Arg1;
	$0.Arg2 = $0.Arg2;
	$0.Function = "chop($0.Arg1,$0.Arg2)";
	$0.Result = chop($0.Arg1,$0.Arg2);
	return 0;
}

// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Edge debugLastRecords="true" debugMode="false" fromNode="DATA_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" router="Manhattan" toNode="REFORMAT0:0"/>
<Edge debugLastRecords="true" debugMode="false" fromNode="REFORMAT0:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" router="Manhattan" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
