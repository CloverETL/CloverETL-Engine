<?xml version="1.0" encoding="UTF-8"?>
<Graph author="milos_kovalcik" created="Thu Dec 18 12:51:41 CET 2008" guiVersion="0.0.0.devel" id="1229611915203" licenseType="Evaluation Devel" modified="Mon Jul 12 12:12:29 CEST 2010" modifiedBy="cloveruser" name="stringGetAlphanumericChars" revision="1.31">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="get_alphanumeric_charsInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Arg" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="get_alphanumeric_charsOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Arg" type="string"/>
<Field name="FunctionArg" type="string"/>
<Field name="ResultArg" type="string"/>
<Field name="FunctionTrueFalse" type="string"/>
<Field name="ResultTrueFalse" type="string"/>
<Field name="FunctionFalseTrue" type="string"/>
<Field name="ResultFalseTrue" type="string"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="123" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="string getAlphanumericChars(string arg)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="556" x="59" y="3">
<attr name="text"><![CDATA[
The getAlphanumericChars(string) function takes one string argument and returns only letters and digits contained in the string argument in the order of their appearance in the string. The other characters are removed.]]></attr>
</Note>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="129" id="Note1" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="string getAlphanumericChars(string arg, boolean takeAlpha, boolean takeNumeric)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="557" x="61" y="145">
<attr name="text"><![CDATA[
The getAlphanumericChars(string, boolean, boolean) function accepts three arguments: one string and two booleans. It takes them and returns letters and/or digits if the second and/or the third arguments, respectively, are set to true.]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/stringGetAlphanumericChars.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="60" guiY="297" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/stringGetAlphanumericCharsOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="465" guiY="297" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="265" guiY="297" id="REFORMAT1" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$0.Arg = $0.Arg;
	$0.FunctionArg = "getAlphanumericChars($0.Arg)";
	$0.ResultArg = getAlphanumericChars($0.Arg);
	$0.FunctionTrueFalse = "getAlphanumericChars($0.Arg,true,false)";
	$0.ResultTrueFalse = getAlphanumericChars($0.Arg,true,false);
	$0.FunctionFalseTrue = "getAlphanumericChars($0.Arg,false,true)";
	$0.ResultFalseTrue = getAlphanumericChars($0.Arg,false,true);

	return 0;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge debugLastRecords="true" debugMode="false" fromNode="DATA_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" router="Manhattan" toNode="REFORMAT1:0"/>
<Edge debugLastRecords="true" debugMode="true" fromNode="REFORMAT1:0" guiBendpoints="" id="Edge2" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" router="Manhattan" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
