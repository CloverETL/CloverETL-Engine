<?xml version="1.0" encoding="UTF-8"?>
<Graph author="cloveruser" created="Thu Dec 18 10:28:44 CET 2008" guiVersion="0.0.0.devel" id="1229608164792" licenseType="Evaluation Devel" modified="Tue Jun 15 15:04:02 CEST 2010" modifiedBy="cloveruser" name="container_push" revision="1.82">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="forInsertInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="ListElement0" type="string"/>
<Field name="ListElement1" type="string"/>
<Field name="ListElement2" type="string"/>
<Field name="ListElement3" type="string"/>
<Field name="Index" type="integer"/>
<Field name="NewElement" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="insertOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="List" type="string"/>
<Field name="Index" type="integer"/>
<Field name="NewElement" type="string"/>
<Field name="Function" type="string"/>
<Field name="ReturnValue" type="string"/>
<Field name="NewValueOfList" type="string"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="130" id="Note1" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Example" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="421" x="78" y="230">
<attr name="text"><![CDATA[
Here we use a list consisting of 4 string elements. 
We are inserting a new string element into the list to the specified positions. The resulting list has 5 elements. 
]]></attr>
</Note>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="179" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="elementtype[] insert(elementtype[] List1, integer Index, elementtype newelement)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="635" x="79" y="44">
<attr name="text"><![CDATA[
The insert(elementtype[], integer, elementtype) function accepts three arguments. 
The first argument is a list of any data type, the second is integer and the last is of element data type.
The function inserts the new element into the list into position whose index is specified as the second argument.
The list changes to this new value and this list is also returned.
Positions in the list are indexed starting from 0.
]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/containerInsert.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="78" guiY="406" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/containerInsertOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="470" guiY="406" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="280" guiY="406" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {

//Declarations.
string[] list1;
string[] list2;
boolean bool;

// Creates the original list1.
push(list1,$0.ListElement0);
push(list1,$0.ListElement1);
push(list1,$0.ListElement2);
push(list1,$0.ListElement3);

//Prints the original list, the position starting from which the elements are inserted into the list, two elements that should be inserted, the return value of the function and the new value of the list. 
$0.List = toString(list1);

//Inserts two new elements into the original list. list1 has been changed to its new value.
list2 = insert(list1,$0.Index,$0.NewElement);

$0.Index = $0.Index;
$0.NewElement = $0.NewElement;
$0.Function = "insert(list1,$0.Index,$0.NewElement)";
$0.ReturnValue = toString(list2);
$0.NewValueOfList = toString(list1);
return 0;
}

// Called during component initialization.
//function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Edge debugLastRecords="true" debugMode="true" fromNode="DATA_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" router="Manhattan" toNode="REFORMAT0:0"/>
<Edge debugLastRecords="true" debugMode="true" fromNode="REFORMAT0:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" router="Manhattan" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
