<?xml version="1.0" encoding="UTF-8"?>
<Graph author="milos_kovalcik" created="Wed Jan 14 14:13:20 CET 2009" guiVersion="0.0.0.devel" id="1231951087953" licenseType="Evaluation Devel" modified="Mon Jul 12 11:57:17 CEST 2010" modifiedBy="cloveruser" name="miscellaneousPrintErr" revision="1.50">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="print_errInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Message1" type="string"/>
<Field name="Message2" type="string"/>
<Field name="PrintLocation" type="boolean"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="print_errOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Message1" type="string"/>
<Field name="Message2" type="string"/>
<Field name="PrintLocation" type="boolean"/>
<Field name="FunctionMessage1" type="string"/>
<Field name="FunctionMessage2WithLocation" type="string"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="132" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="void printErr(anytype message, boolean PrintLocation)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="514" x="49" y="-20">
<attr name="text"><![CDATA[
The printErr(anytype, boolean) function accepts two arguments: the first is of any data type and the second is boolean. It takes them and prints out the string representation of the error message along with the location of the error (if the second argument is true) to stdout.]]></attr>
</Note>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="122" id="Note1" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Version of the printErr() function." titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="511" x="51" y="129">
<attr name="text"><![CDATA[
The printErr(anytype message) function equals to printErr(anytype message, false).]]></attr>
</Note>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="115" id="Note2" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Example" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="517" x="52" y="261">
<attr name="text"><![CDATA[
Here we have used messages of string data type. 
However, we could also print a message of any other data type: integer, boolean, number, etc.]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/miscellaneousPrintErr.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="51" guiY="393" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/miscellaneousPrintErrOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="456" guiY="393" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="256" guiY="393" id="REFORMAT1" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	printErr($0.Message1);
	printErr($0.Message2,$0.PrintLocation);

	$0.Message1 = $0.Message1;
	$0.Message2 = $0.Message2;
	$0.PrintLocation = $0.PrintLocation;

	$0.FunctionMessage1 = 'printErr($0.Message1)';
	$0.FunctionMessage2WithLocation =  'printErr($0.Message2,$0.PrintLocation)';
	return 0;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge debugMode="false" fromNode="DATA_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" router="Manhattan" toNode="REFORMAT1:0"/>
<Edge debugMode="true" fromNode="REFORMAT1:0" guiBendpoints="" id="Edge2" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" router="Manhattan" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
