<?xml version="1.0" encoding="UTF-8"?>
<Graph author="milos_kovalcik" created="Fri Dec 19 12:59:32 CET 2008" guiVersion="0.0.0.devel" id="1229696179046" licenseType="Evaluation Devel" modified="Tue Jul 13 14:51:04 CEST 2010" modifiedBy="cloveruser" name="dataDateAdd" revision="1.42">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="dateaddInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field format="yyyy-MM-dd" name="Date" type="date"/>
<Field name="AmountOfTimeUnits" type="long"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="dateaddOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field format="yyyy-MM-dd HH:mm:ss SSS" name="Date" type="date"/>
<Field name="AmountOfTimeUnits" type="long"/>
<Field name="FunctionYear" type="string"/>
<Field format="yyyy-MM-dd HH:mm:ss SSS" name="YearsAdded" type="date"/>
<Field name="FunctionMonth" type="string"/>
<Field format="yyyy-MM-dd HH:mm:ss SSS" name="MonthsAdded" type="date"/>
<Field name="FunctionWeek" type="string"/>
<Field format="yyyy-MM-dd HH:mm:ss SSS" name="WeeksAdded" type="date"/>
<Field name="FunctionDay" type="string"/>
<Field format="yyyy-MM-dd HH:mm:ss SSS" name="DaysAdded" type="date"/>
<Field name="FunctionHour" type="string"/>
<Field format="yyyy-MM-dd HH:mm:ss SSS" name="HoursAdded" type="date"/>
<Field name="FunctionMinute" type="string"/>
<Field format="yyyy-MM-dd HH:mm:ss SSS" name="MinutesAdded" type="date"/>
<Field name="FunctionSecond" type="string"/>
<Field format="yyyy-MM-dd HH:mm:ss SSS" name="SecondsAdded" type="date"/>
<Field name="FunctionMillisec" type="string"/>
<Field format="yyyy-MM-dd HH:mm:ss SSS" name="MillisecsAdded" type="date"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="195" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="date dateAdd(date arg, long amount, unit timeunit)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="521" x="34" y="14">
<attr name="text"><![CDATA[
The dateAdd(date, long, unit) function accepts three arguments: the first is date, the second is long, and the last is any time unit. 
The unit can be one of the following: year, month, week, day, hour, minute, second, millisec. 
The unit must be specified as a symbolic constant in the function. It can neither be received through an edge nor set as variable. 
The function takes the first argument, adds the amount of time units to it and returns the result as a date. The amount and time unit are specified as the second and third arguments, respectively.]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/dateDateAdd.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="41" guiY="230" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/dateDateAddOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="475" guiY="230" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="265" guiY="230" id="REFORMAT1" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$0.Date = $0.Date;
	$0.AmountOfTimeUnits = $0.AmountOfTimeUnits;
	$0.FunctionYear = "dateAdd($0.Date,$0.AmountOfTimeUnits,year)";
	$0.YearsAdded = dateAdd($0.Date,$0.AmountOfTimeUnits,year);
	$0.FunctionMonth = "dateAdd($0.Date,$0.AmountOfTimeUnits,month)";
	$0.MonthsAdded = dateAdd($0.Date,$0.AmountOfTimeUnits,month);
	$0.FunctionWeek = "dateAdd($0.Date,$0.AmountOfTimeUnits,week)";
	$0.WeeksAdded = dateAdd($0.Date,$0.AmountOfTimeUnits,week);
	$0.FunctionDay = "dateAdd($0.field1,$0.field2,day)";
	$0.DaysAdded = dateAdd($0.Date,$0.AmountOfTimeUnits,day);
	$0.FunctionHour = "dateAdd($0.Date,$0.AmountOfTimeUnits,hour)";
	$0.HoursAdded = dateAdd($0.Date,$0.AmountOfTimeUnits,hour);
	$0.FunctionMinute = "dateAdd($0.Date,$0.AmountOfTimeUnits,minute)";
	$0.MinutesAdded = dateAdd($0.Date,$0.AmountOfTimeUnits,minute);
	$0.FunctionSecond = "dateAdd($0.Date,$0.AmountOfTimeUnits,second)";
	$0.SecondsAdded = dateAdd($0.Date,$0.AmountOfTimeUnits,second);
	$0.FunctionMillisec = "dateAdd($0.Date,$0.AmountOfTimeUnits,millisec)";
	$0.MillisecsAdded = dateAdd($0.Date,$0.AmountOfTimeUnits,millisec);

	return 0;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge debugLastRecords="true" debugMode="false" fromNode="DATA_READER0:0" guiBendpoints="" id="Edge3" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" router="Manhattan" toNode="REFORMAT1:0"/>
<Edge debugLastRecords="true" debugMode="true" fromNode="REFORMAT1:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" router="Manhattan" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
