<?xml version="1.0" encoding="UTF-8"?>
<Graph author="milos_kovalcik" created="Thu Dec 18 12:51:41 CET 2008" guiVersion="0.0.0.devel" id="1229616712953" licenseType="Evaluation Devel" modified="Wed Jun 16 10:10:15 CEST 2010" modifiedBy="cloveruser" name="stringIs_date" revision="1.84">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="isDateInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Arg" type="string"/>
<Field name="Pattern" type="string"/>
<Field name="Locale" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="isDateOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Arg" type="string"/>
<Field name="Pattern" type="string"/>
<Field name="Locale" type="string"/>
<Field name="DefaultLocaleIsSystemValue" type="string"/>
<Field name="ResultSystemLocale" type="boolean"/>
<Field name="FunctionAllArguments" type="string"/>
<Field name="ResultAllArguments" type="boolean"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="150" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="boolean isDate(string arg, string pattern, string locale)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="579" x="77" y="61">
<attr name="text"><![CDATA[
The isDate(string, string, string) function accepts three string arguments. The function takes these arguments, compares the first argument with the second as a pattern, use the third (locale) and, if the first string can be converted to a date which is valid within specified locale, according to the specified pattern, the function returns true. 
If this is not possible, it returns false. ]]></attr>
</Note>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="96" id="Note1" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="The other isDate() function." titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="581" x="78" y="253">
<attr name="text"><![CDATA[
The isDate(string arg, string pattern) function equals to isDate(string arg, string pattern, SystemLocale). 

]]></attr>
</Note>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="93" id="Note2" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Function with arguments displayed" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="569" x="78" y="466">
<attr name="text"><![CDATA[
For better understanding, below we show the functions in which values of all arguments are displayed.]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/stringIsDate.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="79" guiY="379" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/stringIsDate0Overview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="484" guiY="379" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="284" guiY="379" id="REFORMAT1" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$0.Arg = $0.Arg;
	$0.Pattern = $0.Pattern;
	$0.Locale = $0.Locale;
	$0.DefaultLocaleIsSystemValue = "isDate($0.Arg,$0.Pattern)";
	$0.ResultSystemLocale = isDate($0.Arg,$0.Pattern);
	$0.FunctionAllArguments = "isDate($0.Arg,$0.Pattern,$0.Locale)";
	$0.ResultAllArguments = isDate($0.Arg,$0.Pattern,$0.Locale);

	return 0;
}
// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Edge debugLastRecords="true" debugMode="false" fromNode="DATA_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" router="Manhattan" toNode="REFORMAT1:0"/>
<Edge debugLastRecords="true" debugMode="false" fromNode="REFORMAT1:0" guiBendpoints="" id="Edge2" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" router="Manhattan" toNode="DATA_WRITER0:0"/>
</Phase>
<Phase number="1">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/stringIsDate.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="79" guiY="579" id="DATA_READER1" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/stringIsDate1Overview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="484" guiY="579" id="DATA_WRITER1" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="284" guiY="579" id="REFORMAT2" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$0.Arg = $0.Arg;
	$0.Pattern = $0.Pattern;
	$0.Locale = $0.Locale;
	$0.DefaultLocaleIsSystemValue = "isDate(" + $0.Arg + "," + $0.Pattern + ")";
	$0.ResultSystemLocale = isDate($0.Arg,$0.Pattern);
	$0.FunctionAllArguments = "isDate(" + $0.Arg + "," + $0.Pattern + "," + $0.Locale + ")";
	$0.ResultAllArguments = isDate($0.Arg,$0.Pattern,$0.Locale);
	return 0;
}
// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Edge debugLastRecords="true" debugMode="false" fromNode="DATA_READER1:0" guiBendpoints="" id="Edge3" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" router="Manhattan" toNode="REFORMAT2:0"/>
<Edge debugLastRecords="true" debugMode="false" fromNode="REFORMAT2:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" router="Manhattan" toNode="DATA_WRITER1:0"/>
</Phase>
</Graph>
