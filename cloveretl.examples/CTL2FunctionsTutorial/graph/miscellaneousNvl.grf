<?xml version="1.0" encoding="UTF-8"?>
<Graph author="milos_kovalcik" created="Wed Jan 14 14:13:20 CET 2009" guiVersion="0.0.0.devel" id="1231948177343" licenseType="Evaluation Devel" modified="Mon Jul 12 11:55:50 CEST 2010" modifiedBy="cloveruser" name="miscellaneousNvl" revision="1.16">
<Global>
<Metadata id="Metadata2" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="nvlInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Arg" type="string"/>
<Field name="DefaultValue" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="nvlOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Arg" type="string"/>
<Field name="DefaultValue" type="string"/>
<Field name="Function" type="string"/>
<Field name="Result" type="string"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="149" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="anytype nvl(anytype arg, anytype default)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="472" x="41" y="27">
<attr name="text"><![CDATA[
The nvl(anytype, anytype) function accepts two arguments of any data type. Both arguments must be of the same type. 
If the first argument is not null, the function returns its value. If it is null, the function returns the default value specified as the second argument.]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/miscellaneousNvl.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="46" guiY="206" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/miscellaneousNvlOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="439" guiY="206" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="241" guiY="206" id="REFORMAT1" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$0.Arg = $0.Arg;
	$0.DefaultValue = $0.DefaultValue;
	$0.Function = 'nvl($0.Arg,$0.DefaultValue)';
	$0.Result = nvl($0.Arg,$0.DefaultValue);

	return 0;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge debugLastRecords="true" debugMode="false" fromNode="DATA_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (output)" router="Manhattan" toNode="REFORMAT1:0"/>
<Edge debugLastRecords="true" debugMode="true" fromNode="REFORMAT1:0" guiBendpoints="" id="Edge2" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" router="Manhattan" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
