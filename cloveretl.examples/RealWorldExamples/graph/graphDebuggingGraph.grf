<?xml version="1.0" encoding="UTF-8"?>
<Graph author="lucie" created="Wed Jul 28 10:10:37 CEST 2010" guiVersion="0.0.0.devel" id="1280331230946" licenseType="Evaluation Devel" modified="Thu Jul 29 11:36:27 CEST 2010" modifiedBy="lucie" name="CreatingFixedMixedCust" revision="1.83">
<Global>
<Metadata fileURL="${META_DIR}/customers_fixed_not_nullable_default.fmt" id="Metadata3"/>
<Metadata fileURL="${META_DIR}/customers_fixed_not_nullable.fmt" id="Metadata5"/>
<Metadata fileURL="${META_DIR}/customers_fixed.fmt" id="Metadata2"/>
<Metadata fileURL="${META_DIR}/customers.fmt" id="Metadata1"/>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record name="EMPLOYEE" previewAttachmentCharset="ISO-8859-1" recordSize="-1" type="delimited">
<Field delimiter=",\\|;\\|#" format="#" name="EMP_NO" nullable="true" shift="0" type="integer"/>
<Field delimiter=",\\|;\\|#" name="FIRST_NAME" nullable="true" shift="0" type="string"/>
<Field delimiter=",\\|;\\|#" name="LAST_NAME" nullable="true" shift="0" type="string"/>
<Field delimiter=",\\|;\\|#" name="PHONE_EXT" nullable="true" shift="0" type="string"/>
<Field delimiter=",\\|;\\|#" format="dd/MM/yyyy" name="HIRE_DATE" nullable="true" shift="0" type="date"/>
<Field delimiter=",\\|;\\|#" name="DEPT_NO" nullable="true" shift="0" type="string"/>
<Field delimiter=",\\|;\\|#" name="JOB_CODE" nullable="true" shift="0" type="string"/>
<Field delimiter=",\\|;\\|#" name="JOB_GRADE" nullable="true" shift="0" type="decimal"/>
<Field delimiter=",\\|;\\|#" name="JOB_COUNTRY" nullable="true" shift="0" type="string"/>
<Field delimiter=",\\|;\\|#" length="10" name="SALARY" nullable="true" scale="2" shift="0" type="decimal"/>
<Field delimiter="\n" name="FULL_NAME" nullable="true" shift="0" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata4">
<Record fieldDelimiter="|" name="error_message" recordDelimiter="\r\n" type="delimited">
<Field name="recordNo" type="integer"/>
<Field name="fieldNo" type="integer"/>
<Field name="wrong_data" type="string"/>
<Field name="error_message" type="string"/>
</Record>
</Metadata>
<Property id="GraphParameter0" name="sample" value="0.1"/>
<Property fileURL="workspace.prm" id="GraphParameter1"/>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/customers_region1.csv" guiHeight="0" guiName="CustomersDelimited" guiWidth="0" guiX="25" guiY="23" id="DATA_READER0" numRecords="100" skipFirstLine="true" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATATMP_DIR}/CustomersFixed.txt" guiHeight="0" guiName="random records" guiWidth="0" guiX="541" guiY="23" id="DATA_WRITER0" outputFieldNames="false" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="367" guiY="22" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2
 integer counter =0;
// Transforms input record into output record.
function integer transform() {

	counter++;
	boolean location = false;
	double random_number = random();
	printErr("random_number = " + random_number + "  : ", location);
	if (random_number < ${sample}) {
	printLog(info,"You get record number " + counter);
		$0.* =$0.*;
		return 0;
	//$0.address2 = randomString(1,6);
	}
	else $1.*=$0.*;
	return 1;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node enabled="enabled" guiHeight="0" guiName="DelimitedToFixed" guiWidth="0" guiX="194" guiY="21" id="SIMPLE_COPY0" type="SIMPLE_COPY"/>
<Node enabled="enabled" guiHeight="0" guiName="the others" guiWidth="0" guiX="546" guiY="156" id="TRASH0" type="TRASH"/>
<Edge debugMode="false" fromNode="DATA_READER0:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (output)" toNode="SIMPLE_COPY0:0"/>
<Edge debugFilterExpression="$0.gender == &quot;M&quot;" debugLastRecords="false" debugMaxRecords="25" debugMode="true" debugSampleData="false" fromNode="REFORMAT0:0" guiBendpoints="" guiRouter="Manhattan" id="Edge6" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (out)" toNode="DATA_WRITER0:0"/>
<Edge debugLastRecords="true" debugMode="true" debugSampleData="true" fromNode="REFORMAT0:1" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 1 (out)" toNode="TRASH0:0"/>
<Edge debugMode="false" fromNode="SIMPLE_COPY0:0" guiBendpoints="" guiRouter="Manhattan" id="Edge3" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (out)" toNode="REFORMAT0:0"/>
</Phase>
<Phase number="1">
<Node enabled="enabled" fileURL="C:/Users/lucie/workspace.svn.galileo_trunk/cloveretl.examples/RealWorldExamples/data-in/customers_region_BAD.csv" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="21" guiY="291" id="DATA_READER1" trim="false" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATATMP_DIR}/CustomersFixedMax10.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="482" guiY="291" id="DATA_WRITER1" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="243" guiY="292" id="REFORMAT1" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2
integer count=0;
// Transforms input record into output record.
function integer transform() {
	count++;
	$0.firstname = $0.firstname;
	$0.lastname = $0.lastname;
	$0.address1 = $0.address1;
	$0.address2 = $0.address2;
	$0.city = $0.city;
	$0.state = $0.state;
	$0.zip = $0.zip;
	$0.country = $0.country;
	$0.region = $0.region;
	$0.email = $0.email;
	$0.phone = $0.phone;
	$0.creditcardtype = $0.creditcardtype;
	$0.creditcard = $0.creditcard;
	$0.creditcardexpiration = $0.creditcardexpiration;
	$0.username = $0.username;
	$0.password = $0.password;
	$0.age = $0.age;
	$0.income = $0.income;
	if (($0.gender != "M") && ($0.gender != "F"))
	raiseError($0.gender + " is not a valid gender. Go to record No. " + count + " and replace with 'M' or 'F'.");
	else $0.gender = $0.gender;

	return 0;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge fromNode="DATA_READER1:0" guiBendpoints="" guiRouter="Manhattan" id="Edge2" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (output)" toNode="REFORMAT1:0"/>
<Edge fromNode="REFORMAT1:0" guiBendpoints="" guiRouter="Manhattan" id="Edge7" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (out)" toNode="DATA_WRITER1:0"/>
</Phase>
</Graph>
