<?xml version="1.0" encoding="UTF-8"?>
<Graph author="Petr" created="Fri Jul 02 14:49:13 CEST 2010" guiVersion="4.4.0.M1" id="1278077546166" licenseCode="Commercial Devel" licenseType="Commercial" modified="Tue Feb 23 15:25:48 CET 2016" modifiedBy="jansedlacek" name="graphXMLProcessing" revision="1.75" showComponentDetails="true">
<Global>
<Metadata id="Metadata5" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="actor" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" recordSize="-1" type="delimited">
<Field eofAsDelimiter="false" name="actor_id" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="first_name" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="last_name" nullable="true" shift="0" size="0" type="string"/>
<Field name="movie_id" type="integer"/>
</Record>
</Metadata>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="movie" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" recordSize="-1" type="delimited">
<Field eofAsDelimiter="false" name="movie_id" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="title" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="description" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="release_year" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="language" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="length" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="rating" nullable="true" shift="0" size="0" type="string"/>
<Field name="category" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="movie_short" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" recordSize="-1" type="delimited">
<Field eofAsDelimiter="false" name="movie_id" nullable="true" shift="0" size="0" type="integer"/>
<Field eofAsDelimiter="false" name="title" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="description" nullable="true" shift="0" size="0" type="string"/>
<Field eofAsDelimiter="false" name="release_year" nullable="true" shift="0" size="0" type="integer"/>
<Field name="category" type="string"/>
<Field name="actor_id" type="integer"/>
</Record>
</Metadata>
<GraphParameters>
<GraphParameterFile fileURL="workspace.prm"/>
</GraphParameters>
<RichTextNote backgroundColor="DAD8C9" enabled="true" folded="false" fontSize="medium" height="109" id="Note4" textColor="000000" width="940" x="25" y="2">
<attr name="text"><![CDATA[h3. Working with XML source file
We have a list of movies and the actors in them. We want to have a reverse list with actors and the movies they are in. Use the provided [Movies.xml|open://BasicExamples/data-in/others/Movies.xml] file.]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FAF6D6" enabled="true" folded="false" fontSize="medium" height="430" id="Note1" textColor="000000" width="243" x="25" y="120">
<attr name="text"><![CDATA[h3. Read XML file
It reads data from following XML structure.

{noformat}<movies>
  <movie>
     ...
    <actor>...</actor>
    <actor>...</actor>
  </movie>
  ...
</movies>
{noformat}]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FAF6D6" enabled="true" folded="false" fontSize="medium" height="430" id="Note2" textColor="000000" width="251" x="714" y="120">
<attr name="text"><![CDATA[h3. Write XML file
It writes data to following XML structure.

{noformat}<actors>
  <actor>
    <movie>...</movie>
    <movie>...</movie>
  </actor>
  ...
</actors>{noformat}]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FAF6D6" enabled="true" folded="false" fontSize="medium" height="143" id="Note0" textColor="000000" width="431" x="276" y="120">
<attr name="text"><![CDATA[h3. XML data processing
The structure of input XML file is defined by XSD so you can use visual mapping editor for defining of mapping input fields to inner clover fields.]]></attr>
</RichTextNote>
<Dictionary/>
</Global>
<Phase number="0">
<Node dedupKey="actor_id(a)" enabled="enabled" guiName="1 record per actor" guiX="558" guiY="283" id="DEDUP0" type="DEDUP"/>
<Node enabled="enabled" guiName="join actor_id to movie" guiX="473" guiY="394" id="EXT_HASH_JOIN0" joinKey="$movie_id=$movie_id" type="EXT_HASH_JOIN">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.actor_id = $in.0.actor_id;
	$out.0.movie_id = $in.1.movie_id;
	$out.0.title = $in.1.title;
	$out.0.description = $in.1.description;
	$out.0.release_year = $in.1.release_year;
	$out.0.category = $in.1.category;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node enabled="enabled" guiName="actor_id" guiX="419" guiY="283" id="EXT_SORT0" sortKey="actor_id(a)" type="EXT_SORT"/>
<Node charset="UTF-8" enabled="enabled" fileURL="${DATAOUT_DIR}/Actors.xml" guiName="XMLWriter" guiX="770" guiY="404" id="EXT_XML_WRITER0" type="EXT_XML_WRITER">
<attr name="mapping"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<actors xmlns:clover="http://www.cloveretl.com/ns/xmlmapping">
  <actor clover:inPort="0">
    <clover:elements clover:include="$0.first_name;$0.last_name"/>
    <movie clover:inPort="1" clover:key="actor_id" clover:parentKey="actor_id" clover:include="$1.*" clover:exclude="$1.movie_id;$1.actor_id"/>
  </actor>
</actors>]]></attr>
</Node>
<Node enabled="enabled" guiName="SimpleCopy" guiX="276" guiY="404" id="SIMPLE_COPY0" type="SIMPLE_COPY"/>
<Node enabled="enabled" guiName="SimpleCopy" guiX="276" guiY="283" id="SIMPLE_COPY1" type="SIMPLE_COPY"/>
<Node charset="ISO-8859-1" enabled="enabled" fileURL="${DATAOUT_DIR}/Movies_list.html" footer="&#9;&#9;&#9;&lt;/tbody&gt;&#13;&#10;&#9;&#9;&lt;/table&gt;&#13;&#10;&#9;&lt;/body&gt;&#13;&#10;&lt;/html&gt;&#13;&#10;" guiName="Movies HTML list" guiX="473" guiY="484" header="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot;&#13;&#10;   &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;&#13;&#10;&lt;html&gt;&#13;&#10;   &lt;head&gt;&#13;&#10;      &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&#13;&#10;      &lt;title&gt;List of movies&lt;/title&gt;&#13;&#10;   &lt;/head&gt;&#13;&#10;   &lt;body&gt;&#13;&#10;&#9;&#9;&lt;h1&gt;Movies&lt;/h1&gt;&#13;&#10;&#9;&#9;&lt;table style=&quot;border: 0px; border-collapse: collapse&quot; width=&quot;100%&quot; summary=&quot;Readers&quot;&gt;&#13;&#10;&#9;&#9;&#9;&lt;colgroup&gt;&lt;col width=&quot;10%&quot; /&gt;&lt;col width=&quot;15%&quot; /&gt;&lt;col width=&quot;40%&quot; /&gt;&lt;col width=&quot;15%&quot; /&gt;&lt;col width=&quot;10%&quot; /&gt;&lt;col width=&quot;10%&quot; /&gt;&lt;/colgroup&gt;&#13;&#10;&#9;&#9;&#9;&lt;thead&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;tr&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;th style=&quot;border: 1px solid black; background: #e5e5e5 repeat-x 50% bottom; padding: 2px&quot;&gt;movie_id&lt;/th&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;th style=&quot;border: 1px solid black; background: #e5e5e5 repeat-x 50% bottom; padding: 2px&quot;&gt;title&lt;/th&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;th style=&quot;border: 1px solid black; background: #e5e5e5 repeat-x 50% bottom; padding: 2px&quot;&gt;description&lt;/th&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;th style=&quot;border: 1px solid black; background: #e5e5e5 repeat-x 50% bottom; padding: 2px&quot;&gt;language&lt;/th&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;th style=&quot;border: 1px solid black; background: #e5e5e5 repeat-x 50% bottom; padding: 2px&quot;&gt;release year&lt;/th&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;th style=&quot;border: 1px solid black; background: #e5e5e5 repeat-x 50% bottom; padding: 2px&quot;&gt;length (min)&lt;/th&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;/tr&gt;&#13;&#10;&#9;&#9;&#9;&lt;/thead&gt;&#13;&#10;&#9;&#9;&#9;&lt;tbody&gt;&#13;&#10;" id="STRUCTURE_WRITER0" mask="&#9;&#9;&#9;&#9;&lt;tr&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td style=&quot;border: 1px solid black; padding: 3px&quot;&gt;$movie_id&lt;/td&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td style=&quot;border: 1px solid black; padding: 3px&quot;&gt;$title&lt;/td&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td style=&quot;border: 1px solid black; padding: 3px&quot;&gt;$description&lt;/td&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td style=&quot;border: 1px solid black; padding: 3px&quot;&gt;$language&lt;/td&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td style=&quot;border: 1px solid black; padding: 3px&quot;&gt;$release_year&lt;/td&gt;&#13;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td style=&quot;border: 1px solid black; padding: 3px&quot;&gt;$length&lt;/td&gt;&#13;&#10;&#9;&#9;&#9;&#9;&lt;/tr&gt;&#13;&#10;" type="STRUCTURE_WRITER">
<attr name="guiDescription"><![CDATA[It generates HTML page with list of movies formatted in table structure.]]></attr>
</Node>
<Node charset="UTF-8" enabled="enabled" guiName="Read Movies.xml" guiX="55" guiY="415" id="XML_EXTRACT0" schema="${DATAIN_DIR}/others/movies.xsd" sourceUri="${DATAIN_DIR}/others/Movies.xml" type="XML_EXTRACT" useNestedNodes="true">
<attr name="mapping"><![CDATA[<Mappings>
	<Mapping element="movies">
		<Mapping element="movie" outPort="1">
			<Mapping element="actor" outPort="0" parentKey="movie_id" generatedKey="movie_id"
					xmlFields="first_name;actor_id;last_name"
					cloverFields="first_name;actor_id;last_name"/>
		</Mapping>
	</Mapping>
</Mappings>
]]></attr>
</Node>
<Edge fromNode="DEDUP0:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge7" inPort="Port 0 (in)" outPort="Port 0 (unique)" persistedImplicitMetadata="Metadata5" toNode="EXT_XML_WRITER0:0"/>
<Edge debugMode="true" fromNode="EXT_HASH_JOIN0:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge6" inPort="Port 1 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="EXT_XML_WRITER0:1"/>
<Edge fromNode="EXT_SORT0:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge8" inPort="Port 0 (in)" outPort="Port 0 (out)" persistedImplicitMetadata="Metadata5" toNode="DEDUP0:0"/>
<Edge fromNode="SIMPLE_COPY0:0" guiBendpoints="403:321|403:339" guiLocks="402|null|null" guiRouter="Manual" id="Edge2" inPort="Port 1 (slave)" outPort="Port 0 (out)" persistedImplicitMetadata="Metadata0" toNode="EXT_HASH_JOIN0:1"/>
<Edge fromNode="SIMPLE_COPY0:1" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge3" inPort="Port 0 (Body port)" outPort="Port 1 (out)" persistedImplicitMetadata="Metadata0" toNode="STRUCTURE_WRITER0:0"/>
<Edge fromNode="SIMPLE_COPY1:0" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge5" inPort="Port 0 (in)" outPort="Port 0 (out)" persistedImplicitMetadata="Metadata5" toNode="EXT_SORT0:0"/>
<Edge fromNode="SIMPLE_COPY1:1" guiBendpoints="413:316|413:413" guiLocks="412|394|null" guiRouter="Manual" id="Edge4" inPort="Port 0 (driver)" outPort="Port 1 (out)" persistedImplicitMetadata="Metadata5" toNode="EXT_HASH_JOIN0:0"/>
<Edge debugMode="true" fromNode="XML_EXTRACT0:0" guiBendpoints="214:290|214:222" guiLocks="213|null|null" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" metadata="Metadata5" outPort="Port 0 (out)" toNode="SIMPLE_COPY1:0"/>
<Edge debugMode="true" fromNode="XML_EXTRACT0:1" guiBendpoints="" guiLocks="null|null|null" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 1 (out)" toNode="SIMPLE_COPY0:0"/>
</Phase>
</Graph>
