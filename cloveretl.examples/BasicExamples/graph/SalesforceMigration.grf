<?xml version="1.0" encoding="UTF-8"?>
<Graph author="User" created="Tue Aug 02 16:07:04 CEST 2016" guiVersion="4.3.0" id="1470149454547" licenseCode="CLP1DJAVLI21013179BY" name="crm_migration" showComponentDetails="true">
<Global>
<Metadata id="Metadata2" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="contacts_to_insert" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field name="id" trim="true" type="integer"/>
<Field name="name" type="string"/>
<Field name="email" type="string"/>
<Field name="phone" type="string"/>
<Field eofAsDelimiter="true" name="account_sf_id" trim="true" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata0" previewAttachment="${DATAIN_DIR}/accounts.csv" previewAttachmentCharset="UTF-8">
<Record fieldDelimiter="," label="accounts.csv" name="import_accounts" previewAttachment="${DATAIN_DIR}/accounts.csv" previewAttachmentCharset="UTF-8" quoteChar="both" quotedStrings="false" recordDelimiter="\n" skipSourceRows="0" type="delimited">
<Field name="id" type="integer"/>
<Field name="name" type="string"/>
<Field eofAsDelimiter="true" name="country" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachment="${DATAIN_DIR}/contacts.csv" previewAttachmentCharset="UTF-8">
<Record fieldDelimiter="," label="contacts.csv" name="import_contacts" previewAttachment="${DATAIN_DIR}/contacts.csv" previewAttachmentCharset="UTF-8" quoteChar="both" quotedStrings="false" recordDelimiter="\n" skipSourceRows="0" type="delimited">
<Field name="id" type="integer"/>
<Field name="name" type="string"/>
<Field name="email" type="string"/>
<Field name="phone" type="string"/>
<Field eofAsDelimiter="true" name="account_id" type="integer"/>
</Record>
</Metadata>
<MetadataGroup name="Implicit metadata" type="implicit">
<Metadata id="__dynamic_metadata_SALESFORCE_WRITE_ACCOUNTS_salesforce">
<Record fieldDelimiter="," label="accounts.csv" name="import_accounts_SalesforceResult" recordDelimiter="\n" type="delimited">
<Field name="id" trim="true" type="integer"/>
<Field name="name" type="string"/>
<Field eofAsDelimiter="true" name="country" type="string"/>
<Field name="ObjectId" type="string"/>
</Record>
</Metadata>
<Metadata id="__dynamic_metadata_SALESFORCE_WRITE_CONTACTS_salesforce">
<Record fieldDelimiter="|" name="contacts_to_insert_SalesforceResult" recordDelimiter="\n" type="delimited">
<Field name="id" trim="true" type="integer"/>
<Field name="name" type="string"/>
<Field name="email" type="string"/>
<Field name="phone" type="string"/>
<Field eofAsDelimiter="true" name="account_sf_id" trim="true" type="string"/>
<Field name="Error" type="string"/>
</Record>
</Metadata>
<Metadata id="__dynamic_metadata_SALESFORCE_WRITE_ACCOUNTS_salesforce1">
<Record fieldDelimiter="," label="accounts.csv" name="import_accounts_SalesforceResult" recordDelimiter="\n" type="delimited">
<Field name="id" trim="true" type="integer"/>
<Field name="name" type="string"/>
<Field eofAsDelimiter="true" name="country" type="string"/>
<Field name="Error" type="string"/>
</Record>
</Metadata>
<Metadata id="__dynamic_metadata_SALESFORCE_WRITE_CONTACTS_salesforce1">
<Record fieldDelimiter="|" name="contacts_to_insert_SalesforceResult" recordDelimiter="\n" type="delimited">
<Field name="id" trim="true" type="integer"/>
<Field name="name" type="string"/>
<Field name="email" type="string"/>
<Field name="phone" type="string"/>
<Field eofAsDelimiter="true" name="account_sf_id" trim="true" type="string"/>
<Field name="ObjectId" type="string"/>
</Record>
</Metadata>
</MetadataGroup>
<Connection config="${CONN_DIR}/My Salesforce.cfg" id="SALESFORCE0" type="SALESFORCE"/>
<GraphParameters>
<GraphParameterFile fileURL="workspace.prm"/>
</GraphParameters>
<RichTextNote backgroundColor="DAD8C9" folded="false" fontSize="large" height="253" id="Note2" textColor="444444" width="1014" x="26" y="32">
<attr name="text"><![CDATA[h3. Migrate Accounts and Contacts (with relationships) to Salesforce within a single transformation

In this CRM migration example we start with two datasets ([Accounts|element://ACCOUNTS] and [Contacts|element://CONTACTS]) that are linked by foreign keys exported from a source CRM. We need to migrate those datasets to Salesforce, retaining the relationships using Salesforce ObjectId's.

You will see you can do this in one go, using CloverETL's capability to pass new ObjectId's from one writer to another down the stream.

See also the [SalesforceRead|open://BasicExamples/graph/SalesforceRead.grf] example.

*Important:* this example uploads 100 new Accounts and 200 new Contacts to the Salesforce account.]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FAF6D6" folded="false" fontSize="medium" height="208" id="Note4" textColor="444444" width="585" x="226" y="642">
<attr name="text"><![CDATA[h3. Writing Accounts

We use SalesforceBulkWriter to write Accounts into Salesforce (notice the input mapping).

First output passes through successfully written records enriched with ObjectId field. Weâ€™ll use it later for joining Contacts with Accounts.

Second output contains information about rejected records.
]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FAF6D6" folded="false" fontSize="medium" height="228" id="Note5" textColor="444444" width="316" x="225" y="978">
<attr name="text"><![CDATA[h3. Joining Contacts with Accounts

Contacts in the source CRM reference their parent Accounts via an ID field. These source ID fields are used to join the successfully written Accounts with the incoming Contacts. 

Important part is to get the ObjectId field of Accounts (autogenerated ID created when writing Accounts to Salesforce) so it can be used to represent the relationship between Contacts and Accounts.]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FAF6D6" folded="false" fontSize="medium" height="228" id="Note6" textColor="444444" width="247" x="563" y="978">
<attr name="text"><![CDATA[h3. Writing Contacts

Contacts are written to Salesforce similarly as Accounts. To keep their relationship to Accounts, they need to store the Account ObjectId in the Contact's AccountId field. The Account ObjectId was acquired previously by joining with results of writing Accounts.]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="DEF4AB" folded="false" fontSize="medium" height="170" id="Note7" textColor="444444" width="1014" x="26" y="308">
<attr name="text"><![CDATA[h3. Connect to Salesforce

First, you'll need to configure a Salesforce connection in [Outline > Connections > My Salesforce|element://SALESFORCE0].

If you don't have a Salesforce Username, Password and Security Token, follow these steps:

# Create an account in [Salesforce|https://login.salesforce.com/]
# Get your Security Token (in Salesforce go to "Your Account Name" > My Settings > Personal > Reset My Security Token) - this will send the token to your email
# Enter your username, password and security token in the [Salesforce connection|element://SALESFORCE0]]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FAF6D6" folded="false" fontSize="medium" height="301" id="Note8" textColor="444444" width="128" x="26" y="586">
<attr name="text"><![CDATA[h3. Source CRM
The CSV files represent accounts and contacts in the source CRM. Typically these would be read from database or via an API of the CRM.]]></attr>
</RichTextNote>
<Dictionary/>
</Global>
<Phase number="0">
<Node fileURL="${DATAIN_DIR}/salesforce/accounts.csv" guiName="Accounts" guiX="26" guiY="494" id="ACCOUNTS" skipRows="1" type="FLAT_FILE_READER"/>
<Node fileURL="${DATAIN_DIR}/salesforce/contacts.csv" guiName="Contacts" guiX="26" guiY="886" id="CONTACTS" skipRows="1" type="FLAT_FILE_READER"/>
<Node guiName="Join Account SF ID" guiX="408" guiY="886" id="JOIN_ACCOUNT_SF_ID1" joinKey="$account_id=$id" joinType="leftOuter" type="EXT_HASH_JOIN">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.* = $in.0.*;
	$out.0.account_sf_id = $in.1.ObjectId;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node fileURL="${DATAOUT_DIR}/salesforce/rejected_accounts.txt" guiName="Log Rejected Accounts" guiX="883" guiY="603" id="LOG_REJECTED_ACCOUNTS" makeDirs="true" type="FLAT_FILE_WRITER"/>
<Node fileURL="${DATAOUT_DIR}/salesforce/rejected_contacts.txt" guiName="Log Rejected Contacts" guiX="881" guiY="1006" id="LOG_REJECTED_CONTACTS" makeDirs="true" type="FLAT_FILE_WRITER"/>
<Node fileURL="${DATAOUT_DIR}/salesforce/written_accounts.txt" guiName="Log Written Accounts" guiX="883" guiY="494" id="LOG_WRITTEN_ACCOUNTS" makeDirs="true" type="FLAT_FILE_WRITER"/>
<Node fileURL="${DATAOUT_DIR}/salesforce/written_contacts.txt" guiName="Log Written Contacts" guiX="883" guiY="886" id="LOG_WRITTEN_CONTACTS" makeDirs="true" type="FLAT_FILE_WRITER"/>
<Node guiName="Salesforce: Write Accounts" guiX="228" guiY="494" id="SALESFORCE_WRITE_ACCOUNTS" object="Account" sfConnection="SALESFORCE0" type="SALESFORCE_BULK_WRITER">
<attr name="inputMapping"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.Name = $in.0.name;
	$out.0.BillingCountry = $in.0.country;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node guiName="Salesforce: Write Contacts" guiX="633" guiY="886" id="SALESFORCE_WRITE_CONTACTS" object="Contact" sfConnection="SALESFORCE0" type="SALESFORCE_BULK_WRITER">
<attr name="inputMapping"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.LastName = $in.0.name;
	$out.0.Email = $in.0.email;
	$out.0.Phone = $in.0.phone;
	$out.0.AccountId = $in.0.account_sf_id;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node guiName="SimpleCopy" guiX="682" guiY="494" id="SIMPLE_COPY" type="SIMPLE_COPY"/>
<Edge debugMode="true" fromNode="ACCOUNTS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="SALESFORCE_WRITE_ACCOUNTS:0"/>
<Edge debugMode="true" fromNode="CONTACTS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (driver)" metadata="Metadata1" outPort="Port 0 (output)" toNode="JOIN_ACCOUNT_SF_ID1:0"/>
<Edge debugMode="true" fromNode="JOIN_ACCOUNT_SF_ID1:0" guiBendpoints="" guiRouter="Manhattan" id="Edge5" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (out)" toNode="SALESFORCE_WRITE_CONTACTS:0"/>
<Edge debugMode="true" fromNode="SALESFORCE_WRITE_ACCOUNTS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge2" inPort="Port 0 (in)" outPort="Port 0 (accepted records)" persistedImplicitMetadata="__dynamic_metadata_SALESFORCE_WRITE_ACCOUNTS_salesforce" toNode="SIMPLE_COPY:0"/>
<Edge debugMode="true" fromNode="SALESFORCE_WRITE_ACCOUNTS:1" guiBendpoints="" guiRouter="Manhattan" id="Edge3" inPort="Port 0 (in)" outPort="Port 1 (rejected records)" persistedImplicitMetadata="__dynamic_metadata_SALESFORCE_WRITE_ACCOUNTS_salesforce1" toNode="LOG_REJECTED_ACCOUNTS:0"/>
<Edge debugMode="true" fromNode="SALESFORCE_WRITE_CONTACTS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge12" inPort="Port 0 (in)" outPort="Port 0 (accepted records)" persistedImplicitMetadata="__dynamic_metadata_SALESFORCE_WRITE_CONTACTS_salesforce1" toNode="LOG_WRITTEN_CONTACTS:0"/>
<Edge debugMode="true" fromNode="SALESFORCE_WRITE_CONTACTS:1" guiBendpoints="1002:492|1002:598" guiLocks="1002|null|null" guiRouter="Manhattan" id="Edge7" inPort="Port 0 (in)" outPort="Port 1 (rejected records)" persistedImplicitMetadata="__dynamic_metadata_SALESFORCE_WRITE_CONTACTS_salesforce" toNode="LOG_REJECTED_CONTACTS:0"/>
<Edge fromNode="SIMPLE_COPY:0" guiBendpoints="" guiRouter="Manhattan" id="Edge8" inPort="Port 0 (in)" outPort="Port 0 (out)" persistedImplicitMetadata="__dynamic_metadata_SALESFORCE_WRITE_ACCOUNTS_salesforce" toNode="LOG_WRITTEN_ACCOUNTS:0"/>
<Edge debugMode="true" fromNode="SIMPLE_COPY:1" guiBendpoints="816:409|847:752|390:752|394:801" guiLocks="847|390|752" guiRouter="Manual" id="Edge6" inPort="Port 1 (slave)" outPort="Port 1 (out)" persistedImplicitMetadata="__dynamic_metadata_SALESFORCE_WRITE_ACCOUNTS_salesforce" toNode="JOIN_ACCOUNT_SF_ID1:1"/>
</Phase>
</Graph>
