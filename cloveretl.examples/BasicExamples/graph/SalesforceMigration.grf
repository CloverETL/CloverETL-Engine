<?xml version="1.0" encoding="UTF-8"?>
<Graph author="User" created="Tue Aug 02 16:07:04 CEST 2016" guiVersion="4.3.0" id="1470149454547" licenseCode="CLP1DJAVLI21013179BY" name="crm_migration" showComponentDetails="true">
<Global>
<Metadata id="Metadata7" previewAttachment="${DATAIN_DIR}/account_notes.csv" previewAttachmentCharset="UTF-8">
<Record fieldDelimiter="," label="account_notes.csv" name="account_notes_csv" previewAttachment="${DATAIN_DIR}/account_notes.csv" previewAttachmentCharset="UTF-8" quoteChar="both" quotedStrings="false" recordDelimiter="\r\n" skipSourceRows="1" type="delimited">
<Field name="id" type="integer"/>
<Field name="title" type="string"/>
<Field name="body" type="string"/>
<Field eofAsDelimiter="true" name="account_id" type="integer"/>
</Record>
</Metadata>
<Metadata id="Metadata8">
<Record fieldDelimiter="|" name="account_notes_to_insert" recordDelimiter="\r\n" type="delimited">
<Field name="id" trim="true" type="integer"/>
<Field name="title" type="string"/>
<Field name="body" type="string"/>
<Field eofAsDelimiter="true" name="account_id" trim="true" type="integer"/>
<Field name="account_sf_id" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata2" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="contacts_to_insert" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field name="id" trim="true" type="integer"/>
<Field name="name" type="string"/>
<Field name="email" type="string"/>
<Field name="phone" type="string"/>
<Field eofAsDelimiter="true" name="account_sf_id" trim="true" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata0" previewAttachment="${DATAIN_DIR}/accounts.csv" previewAttachmentCharset="UTF-8">
<Record fieldDelimiter="," label="accounts.csv" name="import_accounts" previewAttachment="${DATAIN_DIR}/accounts.csv" previewAttachmentCharset="UTF-8" quoteChar="both" quotedStrings="false" recordDelimiter="\n" skipSourceRows="0" type="delimited">
<Field name="id" type="integer"/>
<Field name="name" type="string"/>
<Field eofAsDelimiter="true" name="country" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachment="${DATAIN_DIR}/contacts.csv" previewAttachmentCharset="UTF-8">
<Record fieldDelimiter="," label="contacts.csv" name="import_contacts" previewAttachment="${DATAIN_DIR}/contacts.csv" previewAttachmentCharset="UTF-8" quoteChar="both" quotedStrings="false" recordDelimiter="\n" skipSourceRows="0" type="delimited">
<Field name="id" type="integer"/>
<Field name="name" type="string"/>
<Field name="email" type="string"/>
<Field name="phone" type="string"/>
<Field eofAsDelimiter="true" name="account_id" type="integer"/>
</Record>
</Metadata>
<Metadata id="Metadata5" previewAttachment="${DATAIN_DIR}/notes.csv" previewAttachmentCharset="UTF-8">
<Record fieldDelimiter="," label="notes.csv" name="import_notes" previewAttachment="${DATAIN_DIR}/notes.csv" previewAttachmentCharset="UTF-8" quoteChar="both" quotedStrings="true" recordDelimiter="\n" skipSourceRows="0" type="delimited">
<Field name="id" type="integer"/>
<Field eofAsDelimiter="true" name="title" type="string"/>
<Field name="body" type="string"/>
<Field name="contact_id" type="integer"/>
</Record>
</Metadata>
<Metadata id="Metadata3" previewAttachment="${DATAIN_DIR}/partners.csv" previewAttachmentCharset="UTF-8">
<Record fieldDelimiter="," label="partners.csv" name="import_partners" previewAttachment="${DATAIN_DIR}/partners.csv" previewAttachmentCharset="UTF-8" quoteChar="both" quotedStrings="false" recordDelimiter="\n" skipSourceRows="0" type="delimited">
<Field name="id" type="integer"/>
<Field name="name" type="string"/>
<Field eofAsDelimiter="true" name="account_id" type="integer"/>
</Record>
</Metadata>
<Metadata id="Metadata6">
<Record fieldDelimiter="|" name="note_to_insert" recordDelimiter="\n" type="delimited">
<Field eofAsDelimiter="true" name="title" type="string"/>
<Field name="body" type="string"/>
<Field delimiter=";" name="contact_id" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata4">
<Record fieldDelimiter="|" name="partners_to_insert" recordDelimiter="\n" type="delimited">
<Field name="name" type="string"/>
<Field delimiter=";" name="account_sf_id" type="string"/>
</Record>
</Metadata>
<MetadataGroup name="Implicit metadata" type="implicit">
<Metadata id="__dynamic_metadata_WRITE_ACCOUNTS_salesforce">
<Record fieldDelimiter="," label="accounts.csv" name="import_accounts_SalesforceResult" recordDelimiter="\n" type="delimited">
<Field name="id" trim="true" type="integer"/>
<Field name="name" type="string"/>
<Field eofAsDelimiter="true" name="country" type="string"/>
<Field name="ObjectId" type="string"/>
</Record>
</Metadata>
<Metadata id="__dynamic_metadata_WRITE_CONTACTS_salesforce">
<Record fieldDelimiter="|" name="contacts_to_insert_SalesforceResult" recordDelimiter="\n" type="delimited">
<Field name="id" trim="true" type="integer"/>
<Field name="name" type="string"/>
<Field name="email" type="string"/>
<Field name="phone" type="string"/>
<Field eofAsDelimiter="true" name="account_sf_id" trim="true" type="string"/>
<Field name="Error" type="string"/>
</Record>
</Metadata>
<Metadata id="__dynamic_metadata_WRITE_ACCOUNTS_salesforce1">
<Record fieldDelimiter="," label="accounts.csv" name="import_accounts_SalesforceResult" recordDelimiter="\n" type="delimited">
<Field name="id" trim="true" type="integer"/>
<Field name="name" type="string"/>
<Field eofAsDelimiter="true" name="country" type="string"/>
<Field name="ObjectId" type="string"/>
</Record>
</Metadata>
<Metadata id="__dynamic_metadata_WRITE_ACCOUNTS_salesforce2">
<Record fieldDelimiter="," label="accounts.csv" name="import_accounts_SalesforceResult" recordDelimiter="\n" type="delimited">
<Field name="id" trim="true" type="integer"/>
<Field name="name" type="string"/>
<Field eofAsDelimiter="true" name="country" type="string"/>
<Field name="Error" type="string"/>
</Record>
</Metadata>
<Metadata id="__dynamic_metadata_WRITE_ACCOUNTS_salesforce3">
<Record fieldDelimiter="," label="accounts.csv" name="import_accounts_SalesforceResult" recordDelimiter="\n" type="delimited">
<Field name="id" trim="true" type="integer"/>
<Field name="name" type="string"/>
<Field eofAsDelimiter="true" name="country" type="string"/>
<Field name="ObjectId" type="string"/>
</Record>
</Metadata>
<Metadata id="__dynamic_metadata_WRITE_CONTACTS_salesforce1">
<Record fieldDelimiter="|" name="contacts_to_insert_SalesforceResult" recordDelimiter="\n" type="delimited">
<Field name="id" trim="true" type="integer"/>
<Field name="name" type="string"/>
<Field name="email" type="string"/>
<Field name="phone" type="string"/>
<Field eofAsDelimiter="true" name="account_sf_id" trim="true" type="string"/>
<Field name="ObjectId" type="string"/>
</Record>
</Metadata>
</MetadataGroup>
<Connection config="${CONN_DIR}/My Salesforce.cfg" id="SALESFORCE0" type="SALESFORCE"/>
<GraphParameters>
<GraphParameterFile fileURL="workspace.prm"/>
</GraphParameters>
<RichTextNote backgroundColor="DAD8C9" folded="false" fontSize="medium" height="134" id="Note2" textColor="444444" width="775" x="145" y="-113">
<attr name="backgroundColorR"><![CDATA[96]]></attr>
<attr name="backgroundColorG"><![CDATA[255]]></attr>
<attr name="backgroundColorB"><![CDATA[96]]></attr>
<attr name="text"><![CDATA[h3. Migration to Salesforce with relationships
This example demonstrates migration to Salesforce using the SalesforceBulkWriter component. The source CSV files represent an in-house CRM system. We are loading Accounts and their respective Contacts to Salesforce. Contacts are bound to their parent Accounts via IDs and this example shows how to easily keep this relationship in Salesforce - by using the Salesforce keys generated when writing Accounts.]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FAF6D6" enabled="true" folded="false" fontSize="medium" height="208" id="Note3" textColor="000000" width="128" x="145" y="205">
<attr name="text"><![CDATA[h6. Source CRM
The CSV files represent accounts and contacts in the source CRM. Typically these would be read from database or via an API of the CRM.]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FAF6D6" folded="false" fontSize="medium" height="224" id="Note0" textColor="444444" width="137" x="1165" y="65">
<attr name="text"><![CDATA[h3. Results

Results of writing Accounts - successfully written and rejected records. Rejected records contain information about the problem in the Error field.

]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FAF6D6" folded="false" fontSize="medium" height="208" id="Note4" textColor="444444" width="585" x="344" y="205">
<attr name="text"><![CDATA[h3. Writing Accounts

The SalesforceBulkWriter component is used to write Accounts into Salesforce. It uses a Salesforce connection and an input mapping that maps input fields onto Salesforce Account object fields.

After writing Accounts we send information about successfull writes to the first output port. They contain the full input record and an ObjectId field. The ObjectId field is the Salesforce auto-generated ID. This will be used later when writing Contacts for the accounts.

Second output port contains information about accounts that were rejected by Salesforce with a description of the cause.]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FAF6D6" folded="false" fontSize="medium" height="228" id="Note5" textColor="444444" width="316" x="344" y="551">
<attr name="text"><![CDATA[h3. Joining Contacts with Accounts

Contacts in the source CRM reference their parent Accounts via an ID field. These source ID fields are used to join the successfully written Accounts with the incoming Contacts. 

Important part is to get the ObjectId field of Accounts (autogenerated ID created when writing Accounts to Salesforce) so it can be used to represent the relationship between Contacts and Accounts.]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FAF6D6" folded="false" fontSize="medium" height="228" id="Note6" textColor="444444" width="247" x="682" y="551">
<attr name="text"><![CDATA[h3. Writing Contacts

Contacts are written to Salesforce similarly as Accounts. To keep their relationship to Accounts, they need to store the Account Salesforce ID in the Contact's AccountId field. The Account Salesforce ID was acquired previously by joining with results of writing Accounts.]]></attr>
</RichTextNote>
<RichTextNote backgroundColor="FAF6D6" folded="false" fontSize="medium" height="224" id="Note1" textColor="444444" width="137" x="1165" y="459">
<attr name="text"><![CDATA[h3. Results

Results of writing Contacts - successfully written and rejected records. Rejected records contain information about the problem in the Error field.

]]></attr>
</RichTextNote>
<Dictionary/>
</Global>
<Phase number="0">
<Node fileURL="${DATAIN_DIR}/salesforce/accounts.csv" guiName="Accounts" guiX="145" guiY="67" id="ACCOUNTS1" skipRows="1" type="FLAT_FILE_READER"/>
<Node fileURL="${DATAIN_DIR}/salesforce/contacts.csv" guiName="Contacts" guiX="145" guiY="459" id="CONTACTS" skipRows="1" type="FLAT_FILE_READER"/>
<Node guiName="Join Account SF ID" guiX="527" guiY="459" id="JOIN_ACCOUNT_SF_ID1" joinKey="$account_id=$id" joinType="leftOuter" type="EXT_HASH_JOIN">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.* = $in.0.*;
	$out.0.account_sf_id = $in.1.ObjectId;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node fileURL="${DATAOUT_DIR}/salesforce/rejected_accounts.txt" guiName="Rejected Accounts" guiX="1002" guiY="176" id="REJECTED_ACCOUNTS1" makeDirs="true" type="FLAT_FILE_WRITER"/>
<Node fileURL="${DATAOUT_DIR}/salesforce/rejected_contacts.txt" guiName="Rejected Contacts" guiX="1000" guiY="579" id="REJECTED_CONTACTS" makeDirs="true" type="FLAT_FILE_WRITER"/>
<Node guiName="SimpleCopy" guiX="801" guiY="67" id="SIMPLE_COPY" type="SIMPLE_COPY"/>
<Node guiName="Write Accounts" guiX="347" guiY="67" id="WRITE_ACCOUNTS" object="Account" sfConnection="SALESFORCE0" type="SALESFORCE_BULK_WRITER">
<attr name="inputMapping"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.ExternalID__c = num2str($in.0.id);
	$out.0.Name = $in.0.name;
	$out.0.BillingCountry = $in.0.country;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node guiName="Write Contacts" guiX="801" guiY="459" id="WRITE_CONTACTS" object="Contact" sfConnection="SALESFORCE0" type="SALESFORCE_BULK_WRITER">
<attr name="inputMapping"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$out.0.LastName = $in.0.name;
	$out.0.Email = $in.0.email;
	$out.0.Phone = $in.0.phone;
	$out.0.AccountId = $in.0.account_sf_id;

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node fileURL="${DATAOUT_DIR}/salesforce/written_accounts.txt" guiName="Written Accounts" guiX="1002" guiY="67" id="WRITTEN_ACCOUNTS" makeDirs="true" type="FLAT_FILE_WRITER"/>
<Node fileURL="${DATAOUT_DIR}/salesforce/written_contacts.txt" guiName="Written Contacts" guiX="1002" guiY="459" id="WRITTEN_CONTACTS" makeDirs="true" type="FLAT_FILE_WRITER"/>
<Edge debugMode="true" fromNode="ACCOUNTS1:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="WRITE_ACCOUNTS:0"/>
<Edge debugMode="true" fromNode="CONTACTS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (driver)" metadata="Metadata1" outPort="Port 0 (output)" toNode="JOIN_ACCOUNT_SF_ID1:0"/>
<Edge debugMode="true" fromNode="JOIN_ACCOUNT_SF_ID1:0" guiBendpoints="" guiRouter="Manhattan" id="Edge5" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (out)" toNode="WRITE_CONTACTS:0"/>
<Edge fromNode="SIMPLE_COPY:0" guiBendpoints="" guiRouter="Manhattan" id="Edge8" inPort="Port 0 (in)" outPort="Port 0 (out)" persistedImplicitMetadata="__dynamic_metadata_WRITE_ACCOUNTS_salesforce" toNode="WRITTEN_ACCOUNTS:0"/>
<Edge debugMode="true" fromNode="SIMPLE_COPY:1" guiBendpoints="966:100|966:432|509:432|509:492" guiLocks="966|509|432" guiRouter="Manual" id="Edge6" inPort="Port 1 (slave)" outPort="Port 1 (out)" persistedImplicitMetadata="__dynamic_metadata_WRITE_ACCOUNTS_salesforce1" toNode="JOIN_ACCOUNT_SF_ID1:1"/>
<Edge debugMode="true" fromNode="WRITE_ACCOUNTS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge2" inPort="Port 0 (in)" outPort="Port 0 (accepted records)" persistedImplicitMetadata="__dynamic_metadata_WRITE_ACCOUNTS_salesforce3" toNode="SIMPLE_COPY:0"/>
<Edge debugMode="true" fromNode="WRITE_ACCOUNTS:1" guiBendpoints="" guiRouter="Manhattan" id="Edge3" inPort="Port 0 (in)" outPort="Port 1 (rejected records)" persistedImplicitMetadata="__dynamic_metadata_WRITE_ACCOUNTS_salesforce2" toNode="REJECTED_ACCOUNTS1:0"/>
<Edge fromNode="WRITE_CONTACTS:0" guiBendpoints="" guiRouter="Manhattan" id="Edge12" inPort="Port 0 (in)" outPort="Port 0 (accepted records)" persistedImplicitMetadata="__dynamic_metadata_WRITE_CONTACTS_salesforce1" toNode="WRITTEN_CONTACTS:0"/>
<Edge debugMode="true" fromNode="WRITE_CONTACTS:1" guiBendpoints="1002:492|1002:598" guiLocks="1002|null|null" guiRouter="Manhattan" id="Edge7" inPort="Port 0 (in)" outPort="Port 1 (rejected records)" persistedImplicitMetadata="__dynamic_metadata_WRITE_CONTACTS_salesforce" toNode="REJECTED_CONTACTS:0"/>
</Phase>
</Graph>
