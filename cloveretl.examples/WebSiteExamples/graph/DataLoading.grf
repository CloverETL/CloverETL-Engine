<?xml version="1.0" encoding="UTF-8"?>
<Graph author="avackova" created="Wed Jul 14 12:57:27 CEST 2010" description=" This simple graph performs the following steps&#10;&#10;    *     Exchange rates for multiple currencies are loaded from an XML file located on the web&#10;    *     A timestamp is then added to the list of exchange rates&#10;    *     The completed list is written to an Excel Worksheet&#10;&#10;" guiVersion="0.0.0.devel" id="1279107410652" licenseType="Evaluation Devel" modified="Mon Jul 19 12:27:58 CEST 2010" modifiedBy="avackova" name="DataLoading" revision="1.16">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="rates" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field name="currency" type="string"/>
<Field length="10" name="rate" scale="5" type="decimal"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="rates_with_date" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\n" type="delimited">
<Field name="currency" type="string"/>
<Field length="10" name="rate" scale="5" type="decimal"/>
<Field format="yyyy-MM-dd" name="date" type="date"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="181" backgroundColorG="245" backgroundColorR="245" folded="false" height="123" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Data Loading" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="555" x="23" y="13">
<attr name="text"><![CDATA[ This simple graph performs the following steps

    *      Exchange rates for multiple currencies are loaded from an XML file located on the web
    *      A timestamp is then added to the list of exchange rates
    *      The completed list is written to an Excel Worksheet
]]></attr>
</Note>
<Note alignment="1" backgroundColorB="181" backgroundColorG="245" backgroundColorR="245" folded="false" height="128" id="Note1" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Related Points of Interest" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="554" x="23" y="224">
<attr name="text"><![CDATA[    *      Data can be loaded from many different text formats including XML, CSV, ASCII
    *      Even variable formats can be read from within a single file
    *      Data can be automatically read from multiple files 
    *      Files can be read from file systems, FTP, SFTP, HTTP etc.
    *      Clover can parse and process XML using a special XPathReader component as well as reading directly from simpler XML records
]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" guiHeight="0" guiName="Add timestamp" guiWidth="0" guiX="231" guiY="150" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$0.currency = $0.currency;
	$0.rate = $0.rate;
	$0.date = today();

	return 0;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the transform. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if transform() throws an exception.
// function integer transformOnError(string errorMessage, string stackTrace) {}

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/rates.xls" guiHeight="0" guiName="XLSDataWriter" guiWidth="0" guiX="449" guiY="150" id="XLS_WRITER0" namesRow="1" sheetName="$date" type="XLS_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Rates Reader" guiWidth="0" guiX="23" guiY="150" id="XML_EXTRACT0" sourceUri="http://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml" type="XML_EXTRACT">
<attr name="mapping"><![CDATA[<Mappings>
  <Mapping element="gesmes:Envelope">
    <Mapping element="Cube">
     <Mapping element="Cube">
        <Mapping element="Cube" outPort="0"/>
      </Mapping>
    </Mapping>
  </Mapping>
</Mappings>]]></attr>
</Node>
<Edge debugMode="true" fromNode="REFORMAT0:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="XLS_WRITER0:0"/>
<Edge debugMode="true" fromNode="XML_EXTRACT0:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="REFORMAT0:0"/>
</Phase>
</Graph>
