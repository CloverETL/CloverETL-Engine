<?xml version="1.0" encoding="UTF-8"?>
<Graph author="cloveruser" created="Mon Feb 23 11:29:37 CET 2009" guiVersion="0.0.0.devel" id="1235387325275" licenseType="Evaluation Devel" modified="Wed Jun 09 18:04:35 CEST 2010" modifiedBy="cloveruser" name="string2bits" revision="1.52">
<Global>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="date2numInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field format="yyyy-MM-dd HH:mm:ss SSS z" name="Date" type="date"/>
</Record>
</Metadata>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="date2numOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field format="yyyy-MM-dd HH:mm:ss SSS z" name="Date" type="date"/>
<Field name="FunctionYear" type="string"/>
<Field name="Year" type="integer"/>
<Field name="FunctionMonth" type="string"/>
<Field name="Month" type="integer"/>
<Field name="FunctionWeek" type="string"/>
<Field name="Week" type="integer"/>
<Field name="FunctionDay" type="string"/>
<Field name="Day" type="integer"/>
<Field name="FunctionHour" type="string"/>
<Field name="Hour" type="integer"/>
<Field name="FunctionMinute" type="string"/>
<Field name="Minute" type="integer"/>
<Field name="FunctionSecond" type="string"/>
<Field name="Second" type="integer"/>
<Field name="FunctionMillisec" type="string"/>
<Field name="Millisec" type="integer"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="210" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="integer date2num(date arg,unit timeunit)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="549" x="88" y="78">
<attr name="text"><![CDATA[
The date2num(date, unit) function accepts two arguments: the first is date and the other is any time unit. 
The unit can be one of the following: year, month, week, day, hour, minute, second, millisec. The unit must be specified as a symbolic constant in the function. It can neither be received through an edge nor set as variable. 
The function takes these two arguments and converts them to an integer. If the time unit is contained in the date, it is returned as an integer number. If it is not contained, the function returns 0. 
Remember that months are numbered starting from 1 unlike in CTL1. Thus, date2num(2008-06-12, month) returns 6. 
And date2num(2008-06-12, hour) returns 0.]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/conversionDate2num.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="56" guiY="337" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/conversionDate2numOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="585" guiY="338" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="299" guiY="337" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#CTL2

// Transforms input record into output record.
function integer transform() {
	$0.Date = $Date;
	$0.FunctionYear = "date2num($0.Date,year)";
	$0.Year = date2num($0.Date,year);
	$0.FunctionMonth = "date2num($0.Date,month)";
	$0.Month = date2num($0.Date,month);
	$0.FunctionWeek = "date2num($0.Date,week)";
	$0.Week = date2num($0.Date,week);
	$0.FunctionDay = "date2num($0.Date,day)";
	$0.Day = date2num($0.Date,day);
	$0.FunctionHour = "date2num($0.Date,hour)";
	$0.Hour = date2num($0.Date,hour);
	$0.FunctionMinute = "date2num($0.Date,minute)";
	$0.Minute = date2num($0.Date,minute);
	$0.FunctionSecond = "date2num($0.Date,second)";
	$0.Second = date2num($0.Date,second);
	$0.FunctionMillisec = "date2num($0.Date,millisec)";
	$0.Millisec = date2num($0.Date,millisec);
	return 0;
}

// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Edge debugLastRecords="true" debugMode="false" fromNode="DATA_READER0:0" guiBendpoints="" id="Edge2" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (output)" router="Manhattan" toNode="REFORMAT0:0"/>
<Edge debugLastRecords="true" debugMode="true" fromNode="REFORMAT0:0" guiBendpoints="" id="Edge3" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" router="Manhattan" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
