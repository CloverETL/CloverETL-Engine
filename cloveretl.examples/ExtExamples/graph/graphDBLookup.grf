<?xml version="1.0" encoding="UTF-8"?>
<Graph author="yanas" created="Fri Jan 12 08:41:50 CET 2007" description="This graph illustrates how to join data using reformat component." guiVersion="0.0.0.devel" id="1204558846009" licenseType="Evaluation Devel" modified="Tue Jun 15 12:52:03 CEST 2010" modifiedBy="agad" name="Testing Hash Joiner" revision="1.72">
<Global>
<Metadata fileURL="${META_DIR}/delimited/joinedOrders.fmt" id="Metadata0"/>
<Metadata fileURL="${META_DIR}/delimited/orders.fmt" id="Metadata2"/>
<Metadata id="Metadata1">
<Record fieldDelimiter=";" name="employee" recordDelimiter="\n" recordSize="-1" type="delimited">
<Field name="employee_id" nullable="true" shift="0" type="integer"/>
<Field name="full_name" nullable="true" shift="0" type="string"/>
<Field name="first_name" nullable="true" shift="0" type="string"/>
<Field name="last_name" nullable="true" shift="0" type="string"/>
<Field name="position_id" nullable="true" shift="0" type="integer"/>
<Field name="position_title" nullable="true" shift="0" type="string"/>
<Field name="store_id" nullable="true" shift="0" type="integer"/>
<Field name="department_id" nullable="true" shift="0" type="integer"/>
<Field name="birth_date" nullable="true" shift="0" type="date"/>
<Field name="hire_date" nullable="true" shift="0" type="date"/>
<Field name="end_date" nullable="true" shift="0" type="date"/>
<Field name="salary" nullable="true" shift="0" type="number"/>
<Field name="supervisor_id" nullable="true" shift="0" type="integer"/>
<Field name="education_level" nullable="true" shift="0" type="string"/>
<Field name="marital_status" nullable="true" shift="0" type="string"/>
<Field name="gender" nullable="true" shift="0" type="string"/>
<Field name="management_role" nullable="true" shift="0" type="string"/>
</Record>
</Metadata>
<Connection dbConfig="${CONN_DIR}/${connection}" id="Connection2" type="JDBC"/>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<LookupTable dbConnection="Connection2" id="LookupTable0" maxCached="0" metadata="Metadata1" name="name" type="dbLookup">
<attr name="sqlQuery"><![CDATA[select * from employee where employee_id=?]]></attr>
</LookupTable>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="301" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Use of DB Lookup Table in Reformat" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="517" x="24" y="108">
<attr name="text"><![CDATA[
UniversalDataReader reads a flat file with Orders data. It is received by Reformat. In it, these records are joined with Employees that are get from DB lookup table. 

The Transform attribute is defined, it is written in Java directly in the graph source code.

The records are processed in the same way as if it was by Inner join in a Joiner. In other words, only Orders with an Employee are processed by transformation. 

If we wanted to send also the Orders without an Employee to an output in the similar way as in Joiners, we could do it. In such a case, however, we should define the mapping of such records to a higher output port.

Remember that mapping must be defined for all output ports in Reformat!

graphLookupJoin.grf is an equivalent of this graph. There are multiple ways to the same results.]]></attr>
</Note>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="107" id="Note1" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Reformat" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="205" x="548" y="-17">
<attr name="text"><![CDATA[
Orders are joined with Employees from DB lookup table within transformation in Reformat.]]></attr>
</Note>
<Note alignment="1" backgroundColorB="0" backgroundColorG="196" backgroundColorR="255" folded="false" height="83" id="Note2" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Note" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="423" x="24" y="-73">
<attr name="text"><![CDATA[This example uses Derby database located in ${DATAIN_DIR} directory. To run this graph successfully PROJECT parameter needs to be set to absolute path to ExtExamples project.]]></attr>
</Note>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/delimited/orders.dat" guiHeight="25" guiName="Orders" guiWidth="50" guiX="24" guiY="26" id="INPUT1" type="DATA_READER"/>
<Node enabled="enabled" errorActions="-2=CONTINUE;" errorLog="${DATAOUT_DIR}/log.err" guiHeight="25" guiName="Reformat (Join)" guiWidth="50" guiX="219" guiY="26" id="JOIN" type="REFORMAT">
<attr name="transform"><![CDATA[
import org.jetel.component.DataRecordTransform;
import org.jetel.data.DataRecord;
import org.jetel.data.RecordKey;
import org.jetel.data.lookup.Lookup;
import org.jetel.data.lookup.LookupTable;
import org.jetel.exception.ComponentNotReadyException;

public class ReformatTestInline extends DataRecordTransform{

	private RecordKey key;

	private LookupTable lt;
	private Lookup mylookup;

	public boolean init() throws ComponentNotReadyException{
		
		// create key 
	    String[] lookupKeyStr={"EmployeeID"};
		key=new RecordKey(lookupKeyStr,sourceMetadata[0]);
		key.init();

		lt = graph.getLookupTable("LookupTable0");

		return true;
	}

	public void preExecute() throws ComponentNotReadyException{
		mylookup = lt.createLookup(key);
	}

	public int transform(DataRecord[] source, DataRecord[] target){
		mylookup.seek(source[0]);
		
		if (!mylookup.hasNext()) {// skip this one
			errorMessage = "Order: " + source[0].getField(0).getValue() + " - no corresponding record in lookup table";
			return -2; 
		}
		
		DataRecord employee = (DataRecord)mylookup.next(); 

		target[0].getField(0).setValue(source[0].getField(0).getValue());
  		target[0].getField(1).setValue(source[0].getField(1).getValue());
		target[0].getField(2).setValue(source[0].getField(2).getValue().toString());
		target[0].getField(3).setValue(employee.getField(0).getValue().toString());
		target[0].getField(4).setValue(employee.getField(3).getValue());

		return ALL;
	}

}
]]></attr>
</Node>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/joined_data.out" guiHeight="25" guiName="Orders-Employees" guiWidth="50" guiX="408" guiY="26" id="WRITER" type="DATA_WRITER"/>
<Edge debugMode="false" fromNode="INPUT1:0" guiBendpoints="" id="INEDGE1" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (output)" router="Manhattan" toNode="JOIN:0"/>
<Edge debugMode="false" fromNode="JOIN:0" guiBendpoints="" id="OUTEDGE" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" router="Manhattan" toNode="WRITER:0"/>
</Phase>
</Graph>
