<plugin
   id="org.jetel.hadoop"
   version="0.0.0.devel"
   provider-name="Javlin a.s."
   class="org.jetel.hadoop.Activator">

	<runtime>
		<library path="bin/"/>
		<library path="lib/commons-configuration-1.8.jar"/>
		<library path="lib/commons-lang3-3.4.jar"/>
   	</runtime> 

	<requires engine-version="0.0.0.devel">
		<import plugin-id="org.jetel.component"/>
		<import plugin-id="org.jetel.connection"/>
	</requires>
	

	<extension point-id="connection">
		<parameter id="className" value="org.jetel.hadoop.connection.HadoopConnection"/>
		<parameter id="type" value="HADOOP"/>
	</extension>
	
	<extension point-id="component">
	  <ETLComponent category="writers" iconPath="icons/writers/HDFSWriter" name="HadoopWriter" type="HADOOP_WRITER" viewPlainData="false" viewGridData="false" className="org.jetel.hadoop.component.HadoopWriter">
	    <shortDescription>Writes Hadoop/HDFS Sequence Files.</shortDescription>
	    <description>Writes key-value sequences to Hadoop/HDFS Sequence File; copies key &amp; value from fields of input data records writes them to HDFS.</description>
	    <outputPorts>
	    </outputPorts>
	    <inputPorts>
	      <singlePort name="0" required="true"/>
	    </inputPorts>
	    <properties>
	      <property category="basic" displayName="Hadoop connection" modifiable="true" name="connectionId" nullable="false" required="true">
	        <singleType name="hadoopConnection"/>
	      </property>
	     <property category="basic" displayName="File URL" modifiable="true" name="fileURL" nullable="true" required="true">
	        <singleType name="file" fields="input" dictionary="input" selectionMode="file_only" mandatory_existing_file="false"/>
	      </property>
	      <property category="basic" displayName="Key field" modifiable="true" name="keyField" nullable="true" required="true">
	        <singleType name="field" inputPortName="0" />
	      </property>
	      <property category="basic" displayName="Value field" modifiable="true" name="valueField" nullable="true" required="true">
	        <singleType name="field" inputPortName="0" />
	      </property>
	      <property category="advanced" displayName="Create empty files" modifiable="true" name="createEmptyFiles" nullable="true" defaultHint="true">
	        <singleType name="bool" />
	      </property>
	    </properties>
	  </ETLComponent>
	</extension>

	<extension point-id="component">
	  <ETLComponent category="readers" iconPath="icons/readers/HDFSReader" name="HadoopReader" type="HADOOP_READER" viewPlainData="false" className="org.jetel.hadoop.component.HadoopReader">
	    <shortDescription>Reads Hadoop/HDFS Sequence Files.</shortDescription>
	    <description>Reads key-value sequences from Hadoop/HDFS Sequence File; copies key &amp; value on to output data fields and sends the record to the first output port.</description>
	    <inputPorts>
	      <singlePort name="0" required="false"/>
	    </inputPorts>
	    <outputPorts>
	      <singlePort name="0" required="true" />
	    </outputPorts>
	    <properties>
	      <property category="basic" displayName="Hadoop connection" modifiable="true" name="connectionId" nullable="false" required="true">
	        <singleType name="hadoopConnection"/>
	      </property>
	      <property category="basic" displayName="File URL" modifiable="true" name="fileURL" nullable="true" required="true">
	        <singleType name="file" fields="input" dictionary="input" selectionMode="file_only"/>
	      </property>
	      <property category="basic" displayName="Key field" modifiable="true" name="keyField" nullable="true" required="true">
	        <singleType name="field" outputPortName="0" />
	      </property>
	      <property category="basic" displayName="Value field" modifiable="true" name="valueField" nullable="true" required="true">
	        <singleType name="field" outputPortName="0" />
	      </property>
	    </properties>
	  </ETLComponent>
	</extension>

	<extension point-id="urlResolver">
		<parameter id="className" value="org.jetel.hadoop.service.filesystem.HadoopPathResolver"/>
		<parameter id="type" value="HADOOP_HDFS"/>
	</extension>

</plugin>
