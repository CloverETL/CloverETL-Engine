<?xml version="1.0" encoding="UTF-8"?>
<Graph author="tkramolis" created="Thu Nov 01 11:26:47 CET 2012" guiVersion="0.0.0.devel" id="1351771661181" licenseType="Commercial" modified="Tue Nov 27 14:35:43 CET 2012" modifiedBy="krivanekm" name="HDFS_UDW_UDR" revision="1.64" showComponentDetails="true">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="recordName1" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="i" type="integer"/>
<Field name="l" type="long"/>
<Field name="n" type="number"/>
<Field name="dec" type="decimal"/>
<Field format="yyyy.MM.dd HH:mm:ss.SSS z" name="date" type="date"/>
<Field name="str" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter="|" name="recordName2" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="field1" type="integer"/>
</Record>
</Metadata>
<Connection config="cdh_3u5.cfg" id="CDH_3U5" type="HADOOP"/>
<Connection config="cdh_4-1-2.cfg" id="CDH412" type="HADOOP"/>
<Property id="GraphParameter0" name="ENCODING" value="UTF-8"/>
<Dictionary/>
</Global>
<Phase number="0">
<Node enabled="enabled" guiHeight="67" guiName="DataGenerator" guiWidth="128" guiX="142" guiY="168" id="DATA_GENERATOR" recordsNumber="0" type="DATA_GENERATOR">
<attr name="generate"><![CDATA[//#CTL2

// Generates output record.
function integer generate() {

	return OK;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the generate. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if generate() throws an exception.
// function integer generateOnError(string errorMessage, string stackTrace) {
// }

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Node enabled="enabled" guiHeight="67" guiName="Trash" guiWidth="128" guiX="458" guiY="168" id="TRASH" type="TRASH"/>
<Edge fromNode="DATA_GENERATOR:0" guiBendpoints="" guiRouter="Manhattan" id="Edge1" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="TRASH:0"/>
</Phase>
</Graph>
