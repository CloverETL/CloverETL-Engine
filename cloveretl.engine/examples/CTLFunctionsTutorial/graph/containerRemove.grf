<?xml version="1.0" encoding="UTF-8"?>
<Graph author="cloveruser" created="Thu Dec 18 10:28:44 CET 2008" guiVersion="0.0.0.devel" id="1229608164792" licenseType="Evaluation license." modified="Fri May 15 14:01:04 CEST 2009" modifiedBy="cloveruser" name="container_push" revision="1.69">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="forRemoveInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="ListElement0" type="string"/>
<Field name="ListElement1" type="string"/>
<Field name="ListElement2" type="string"/>
<Field name="ListElement3" type="string"/>
<Field name="ListElement4" type="string"/>
<Field name="Index" type="integer"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="removeOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="List" type="string"/>
<Field name="Index" type="integer"/>
<Field name="Function" type="string"/>
<Field name="ReturnValue" type="string"/>
<Field name="NewValueOfList" type="string"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="141" id="Note1" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Example" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="421" x="60" y="212">
<attr name="text"><![CDATA[
Here we use lists consisting of string elements. 
List consists of 5 elements. 
remove(List, Index) removes the element from the specified index of List. 
And after the function is executed, List consists of 4 remaining elements.
The function returns the removed element.]]></attr>
</Note>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="182" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="elementType remove(list arg, numerictype index)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="420" x="60" y="24">
<attr name="text"><![CDATA[
The remove(list, numerictype) function accepts two arguments: the first is list and the second is of any numeric data type. The function takes the integer part of the second argument and removes the list element at the specified index. 
The list specified as the first argument changes to this new value (with the specified element removed). 
And the function returns this element as its return value.
Remember that the list elements are indexed starting from 0.]]></attr>
</Note>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/containerRemove.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="61" guiY="373" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/containerRemoveOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="453" guiY="373" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="263" guiY="373" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#TL

// Transforms input record into output record.
function transform() {

//Declarations.
list list1;
list old_list1;
string element;

// Creates the original list1.
push(list1,$0.ListElement0);
push(list1,$0.ListElement1);
push(list1,$0.ListElement2);
push(list1,$0.ListElement3);
push(list1,$0.ListElement4);

//Older value of the original list1.
old_list1=list1;

//Removes the element at the position specified by index ($0.field6). list1 has been changed to its new value.
element=remove(list1,$0.Index);

//Prints the original list, the position (index - starts from 0), the return value of the function and the new value of list.
$0.List := concat("[",old_list1[0],",",old_list1[1],",",old_list1[2],",",old_list1[3],",",old_list1[4],"]");
$0.Index := $0.Index;
$0.Function := "remove(list1,$0.Index)";
$0.ReturnValue := element;
$0.NewValueOfList := concat("[",list1[0],",",list1[1],",",list1[2],",",list1[3],"]");
}

// Called during component initialization.
//function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Edge debugLastRecords="true" debugMode="false" fromNode="DATA_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="REFORMAT0:0"/>
<Edge debugLastRecords="true" debugMode="false" fromNode="REFORMAT0:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
