<?xml version="1.0" encoding="UTF-8"?>
<Graph author="cloveruser" created="Thu Dec 18 10:28:44 CET 2008" guiVersion="0.0.0.devel" id="1229608164792" licenseType="Evaluation license." modified="Tue Mar 24 18:11:16 CET 2009" modifiedBy="cloveruser" name="container_push" revision="1.49">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="forPollInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="ListElement0" type="string"/>
<Field name="ListElement1" type="string"/>
<Field name="ListElement2" type="string"/>
<Field name="ListElement3" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="pollOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="List" type="string"/>
<Field name="Function" type="string"/>
<Field name="ReturnValue" type="string"/>
<Field name="NewValueOfList" type="string"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="117" id="Note1" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Example" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="421" x="30" y="182">
<attr name="text"><![CDATA[
Here we use lists consisting of string elements. 
List consists of 4 elements. 
poll(List) returns the first element of List. 
And after the function is executed, List consists of 3 resulting elements.]]></attr>
</Note>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="119" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="elementType poll(list arg)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="420" x="31" y="18">
<attr name="text"><![CDATA[
The poll(list) function accepts one argument of list data type. It takes this argument, removes the first element from the list and returns this element. 
The list specified as the argument changes to this new value (with the first element removed).]]></attr>
</Note>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/containerPoll.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="29" guiY="335" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/containerPollOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="421" guiY="335" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="231" guiY="335" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#TL

// Transforms input record into output record.
function transform() {

//Declarations.
string element;
list list1;
list old_list1;

// Creates a list.
push(list1,$0.ListElement0);
push(list1,$0.ListElement1);
push(list1,$0.ListElement2);
push(list1,$0.ListElement3);

//Older value of the original list1.
old_list1=list1;

//Removes the first element of the list. list1 has been changed to its new value.
element=poll(list1);

//Prints the elements of the original list.
$0.List := concat("[",old_list1[0],",",old_list1[1],",",old_list1[2],",",old_list1[3],"]");

//Prints the first element of the list. The poll() function returns the first element of the list.
$0.Function := "poll(List)";
$0.ReturnValue := element;

//Prints the remaining elements of the list.
$0.NewValueOfList := concat("[",list1[0],",",list1[1],",",list1[2],"]");
}

// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Edge debugLastRecords="true" debugMode="true" fromNode="DATA_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="REFORMAT0:0"/>
<Edge debugLastRecords="true" debugMode="true" fromNode="REFORMAT0:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
