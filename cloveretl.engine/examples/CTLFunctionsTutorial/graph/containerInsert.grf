<?xml version="1.0" encoding="UTF-8"?>
<Graph author="cloveruser" created="Thu Dec 18 10:28:44 CET 2008" guiVersion="0.0.0.devel" id="1229608164792" licenseType="Evaluation license." modified="Tue Mar 24 17:59:59 CET 2009" modifiedBy="cloveruser" name="container_push" revision="1.69">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="forInsertInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="ListElement0" type="string"/>
<Field name="ListElement1" type="string"/>
<Field name="ListElement2" type="string"/>
<Field name="FromIndex" type="integer"/>
<Field name="NewElement3" type="string"/>
<Field name="NewElement4" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="insertOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="List" type="string"/>
<Field name="FromIndex" type="integer"/>
<Field name="NewElement3" type="string"/>
<Field name="NewElement4" type="string"/>
<Field name="Function" type="string"/>
<Field name="ReturnValue" type="boolean"/>
<Field name="NewValueOfList" type="string"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="128" id="Note1" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Example" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="421" x="78" y="208">
<attr name="text"><![CDATA[
Here we use a list consisting of string elements. 
List consists of 3 elements. 
We insert 2 new elements into the list. 
insert(List, fromIndex, newElement3, newElement4) returns true. 
The List changes its value to a new list consisting of 5 elements.
]]></attr>
</Note>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="145" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="list insert(list List1, numerictype fromIndex, elementType element1, ... ..., elementType elementN)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="635" x="79" y="44">
<attr name="text"><![CDATA[
The insert(list, numerictype, elementType, ..., elementType) function accepts the following arguments: the first argument is a list, the second is of any numeric data type and the others are of any data type, which is the same for all of them. At the same time, this data type equals to that of the list elements. The function takes the elements that are contained in the function starting from the third argument (including the third argument) and inserts them one after another to the list starting from the index defined by the integer part of the second argument. The list specified as the first argument changes to this new value. The function returns true if it was successful, otherwise, it returns false. Remember that the list elements are indexed starting from 0.]]></attr>
</Note>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/containerInsert.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="80" guiY="366" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/containerInsertOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="472" guiY="366" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="282" guiY="366" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#TL

// Transforms input record into output record.
function transform() {

//Declarations.
list list1;
list old_list1;
boolean bool;

// Creates the original list1.
push(list1,$0.ListElement0);
push(list1,$0.ListElement1);
push(list1,$0.ListElement2);

//Older value of the original list1.
old_list1=list1;

//Inserts two new elements into the original list. list1 has been changed to its new value.
bool=insert(list1,$0.FromIndex,$0.NewElement3,$0.NewElement4);

//Prints the original list, the position starting from which the elements are inserted into the list, two elements that should be inserted, the return value of the function and the new value of the list. 
$0.List := concat("[",old_list1[0],",",old_list1[1],",",old_list1[2],"]");
$0.FromIndex := $0.FromIndex;
$0.NewElement3 := $0.NewElement3;
$0.NewElement4 := $0.NewElement4;
$0.Function := "insert(List,$0.FromIndex,$0.NewElement3,$0.NewElement4)";
$0.ReturnValue := bool;
$0.NewValueOfList := concat("[",list1[0],",",list1[1],",",list1[2],",",list1[3],",",list1[4],"]");
}

// Called during component initialization.
//function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Edge debugLastRecords="true" debugMode="true" fromNode="DATA_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="REFORMAT0:0"/>
<Edge debugLastRecords="true" debugMode="true" fromNode="REFORMAT0:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
