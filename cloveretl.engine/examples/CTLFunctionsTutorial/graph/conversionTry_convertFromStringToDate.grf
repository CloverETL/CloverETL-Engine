<?xml version="1.0" encoding="UTF-8"?>
<Graph author="cloveruser" created="Wed Mar 25 09:22:10 CET 2009" guiVersion="2.2.0.RC2" id="1237969573261" licenseType="Evaluation license." modified="Mon Apr 20 16:14:26 CEST 2009" modifiedBy="cloveruser" name="conversionTry_convert" revision="1.46">
<Global>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="try_convertFromDecimalToStringOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="String" type="string"/>
<Field name="Format" type="string"/>
<Field name="FunctionFromStringToDate" type="string"/>
<Field name="TryConvertFromStringToDate" type="date"/>
</Record>
</Metadata>
<Metadata id="Metadata2" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="try_convertFromStringToDecimalOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="FromString" type="string"/>
<Field name="ToDecimal" type="decimal"/>
<Field name="FunctionFromStringToDecimal" type="string"/>
<Field name="ReturnValueOfTryConvertFromStringToDecimal" type="boolean"/>
<Field name="NewArgDecimal" type="decimal"/>
</Record>
</Metadata>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="try_convertInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="String" type="string"/>
<Field name="Format" type="string"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="180" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="date try_convert(string From, nameofdatedatatype date, string Format)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="534" x="39" y="56">
<attr name="text"><![CDATA[
The try_convert(string, nameofdatedatatype, string) function accepts three arguments: the first is of string data type, the second is the name of date data type and the third is a format of the first argument. 
The date word specified as the second argument can neither be received through the edge nor be defined as variable. 
The function takes these arguments and tries to convert the first argument to date.
If the string specified as the first argument corresponds to the form of the third argument, conversion is possible and a date is returned.
If the conversion is not possible, the function returns null. 
]]></attr>
</Note>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/conversionTry_convertFromStringToDate.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="31" guiY="296" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/conversionTry_convertFromStringToDateOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="561" guiY="296" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="306" guiY="296" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#TL

// Transforms input record into output record.
function transform() {
	$0.String := $0.String;
	$0.Format := $0.Format;
	$0.FunctionFromStringToDate := "try_convert($0.String,date,$0.Format)";
	$0.TryConvertFromStringToDate := try_convert($0.String,date,$0.Format);
}

// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Edge debugMode="true" fromNode="DATA_READER0:0" guiBendpoints="" id="Edge2" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="REFORMAT0:0"/>
<Edge debugMode="true" fromNode="REFORMAT0:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
