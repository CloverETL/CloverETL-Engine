<?xml version="1.0" encoding="UTF-8"?>
<Graph author="cloveruser" created="Thu Dec 18 10:28:44 CET 2008" guiVersion="0.0.0.devel" id="1229622309380" licenseType="Evaluation license." modified="Sun Mar 15 13:09:18 CET 2009" modifiedBy="cloveruser" name="containerCut" revision="1.29">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="cutInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Arg" type="string"/>
<Field name="Element0" type="integer"/>
<Field name="Element1" type="integer"/>
<Field name="Element2" type="integer"/>
<Field name="Element3" type="integer"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="cutOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Arg" type="string"/>
<Field name="List" type="string"/>
<Field name="Function" type="string"/>
<Field name="Result" type="string"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/stringCut.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="48" guiY="134" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/stringCutOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="452" guiY="134" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="244" guiY="134" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#TL

// Transforms input record into output record.
function transform() {

// Declarations.
list lw;
list lofstrings;

// Creates a list from the even number of integer numbers. The first number within each pair means index, the second means how many characters will be taken for the substring.
// First pair of numbers. (First number and second number.)
push(lw,$0.Element0);
push(lw,$0.Element1);
// Second pair of numbers. (Third number and fourth number.)
push(lw,$0.Element2);
push(lw,$0.Element3);

// Creates a list of substrings. Each substring will be generated using one pair of integer numbers. Thus, two substrings will be created using four integer numbers. The new list of substrings will have two elements.
lofstrings=cut($0.Arg,lw);

// (We know that there are two elements of the list.)

// Concatenates the individual strings for printing.
$0.Arg := $0.Arg;
$0.List := concat("[",num2str(lw[0]),",",num2str(lw[1]),",",num2str(lw[2]),",",num2str(lw[3]),"]");
$0.Function := "cut($0.Arg,$0.List)";
$0.Result := concat("[",lofstrings[0],",",lofstrings[1],"]");
}

// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Edge debugLastRecords="true" debugMode="true" fromNode="DATA_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="REFORMAT0:0"/>
<Edge debugLastRecords="true" debugMode="true" fromNode="REFORMAT0:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
