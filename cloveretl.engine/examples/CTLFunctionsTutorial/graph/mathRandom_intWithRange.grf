<?xml version="1.0" encoding="UTF-8"?>
<Graph author="milos_kovalcik" created="Thu Dec 18 12:51:41 CET 2008" guiVersion="0.0.0.devel" id="1229624844609" licenseType="Evaluation license." modified="Wed May 20 12:25:03 CEST 2009" modifiedBy="avackova" name="stringSubstring" revision="1.30">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="random_intWithRangeInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="MinimumValue" type="integer"/>
<Field name="MaximumValue" type="integer"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="random_intWithRangeOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Minimum" type="integer"/>
<Field name="Maximum" type="integer"/>
<Field name="Function" type="string"/>
<Field name="Result" type="integer"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="143" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="int random_int(int Minimum, int Maximum)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="442" x="86" y="67">
<attr name="text"><![CDATA[
The random_int(int, int) function accepts two argument of integer data types and returns a random integer value greater than or equal to Minimum and less than or equal to Maximum.The random_int(int, int,long) function accepts one more long argument that is used as random seed. This causes that all graph executions produce the same output.

Similar are the following functions:
long random_long(long Minimum, long Maximum)
long random_long(long Minimum, long Maximum, long randomSeed)]]></attr>
</Note>
</Global>
<Phase number="0">
<Node enabled="enabled" generate="//#TL&#10;long randomSeed = -1;&#10;// Generates output record.&#10;function generate() {&#10;&#9;$0.Minimum := 0;&#10;&#9;$0.Maximum := 100;&#10;&#9;$0.Function := &quot;random_int($0.MinimumValue,$0.MaximumValue, randomSeed)&quot;;&#10;&#9;$0.Result := random_int(0,100,randomSeed);&#10;}&#10;&#10;// Called during component initialization.&#10;// function init() {}&#10;&#10;// Called after the component finishes.&#10;// function finished() {}&#10;" guiHeight="0" guiName="DataGenerator" guiWidth="0" guiX="57" guiY="271" id="DATA_GENERATOR0" recordsNumber="10" type="DATA_GENERATOR"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/mathRandom_intWithRangeOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="471" guiY="271" id="DATA_WRITER0" type="DATA_WRITER"/>
<Edge debugLastRecords="true" debugMode="true" fromNode="DATA_GENERATOR0:0" guiBendpoints="" id="Edge2" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
