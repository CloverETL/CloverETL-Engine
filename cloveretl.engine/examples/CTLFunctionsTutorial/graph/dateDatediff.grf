<?xml version="1.0" encoding="UTF-8"?>
<Graph author="milos_kovalcik" created="Fri Dec 19 12:59:32 CET 2008" guiVersion="0.0.0.devel" id="1229697305234" licenseType="Evaluation license." modified="Mon Mar 23 17:12:11 CET 2009" modifiedBy="cloveruser" name="dateDateDiff" revision="1.32">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="datediffInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field format="yyyy-MM-dd" name="FirstDate" type="date"/>
<Field format="yyyy-MM-dd" name="SecondDate" type="date"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="datediffOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field format="yyyy-MM-dd" name="FirstDate" type="date"/>
<Field format="yyyy-MM-dd" name="SecondDate" type="date"/>
<Field name="FunctionYear" type="string"/>
<Field name="DiffInYears" type="integer"/>
<Field name="FunctionMonth" type="string"/>
<Field name="DiffInMonths" type="integer"/>
<Field name="FunctionWeek" type="string"/>
<Field name="DiffInWeeks" type="integer"/>
<Field name="FunctionDay" type="string"/>
<Field name="DiffInDays" type="integer"/>
<Field name="FunctionHour" type="string"/>
<Field name="DiffInHours" type="integer"/>
<Field name="FunctionMinute" type="string"/>
<Field name="DiffInMinutes" type="integer"/>
<Field name="FunctionSecond" type="string"/>
<Field name="DiffInSeconds" type="integer"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="190" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="int datediff(date FirstDate, date SecondDate, unit timeunit)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="519" x="118" y="39">
<attr name="text"><![CDATA[
The datediff(date, date, unit) function accepts three arguments: two dates and one time unit. It takes these arguments and subtracts the second argument from the first argument. 
The unit can be one of the following: year, month, week, day, hour, minute, second, millisec. 
The unit must be specified as a symbolic constant in the function. It can neither be received through an edge nor set as variable. 
The function returns the time difference expressed in time units specified as the third argument. 
The difference of two dates is expressed in defined time units. The result is expressed as an integer number.
Thus, date(2008-06-18, 2001-02-03, year) returns 7. 
But, date(2001-02-03, 2008-06-18, year) returns -7!]]></attr>
</Note>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/dateDatediff.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="122" guiY="262" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/dateDatediffOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="527" guiY="262" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="327" guiY="262" id="REFORMAT1" type="REFORMAT">
<attr name="transform"><![CDATA[//#TL

// Transforms input record into output record.
function transform() {
    $0.FirstDate := $0.FirstDate;
    $0.SecondDate := $0.SecondDate;
	$0.FunctionYear := "datediff($0.FirstDate,$0.SecondDate,year)";
	$0.DiffInYears := datediff($0.FirstDate,$0.SecondDate,year);
	$0.FunctionMonth := "datediff($0.FirstDate,$0.SecondDate,month)";
	$0.DiffInMonths := datediff($0.FirstDate,$0.SecondDate,month);
	$0.FunctionWeek := "datediff($0.FirstDate,$0.SecondDate,week)";
	$0.DiffInWeeks := datediff($0.FirstDate,$0.SecondDate,week);
	$0.FunctionDay := "datediff($0.FirstDate,$0.SecondDate,day)";
	$0.DiffInDays := datediff($0.FirstDate,$0.SecondDate,day);
	$0.FunctionHour := "datediff($0.FirstDate,$0.SecondDate,hour)";
	$0.DiffInHours := datediff($0.FirstDate,$0.SecondDate,hour);
	$0.FunctionMinute := "datediff($0.FirstDate,$0.SecondDate,minute)";
	$0.DiffInMinutes := datediff($0.FirstDate,$0.SecondDate,minute);
	$0.FunctionSecond := "datediff($0.FirstDate,$0.SecondDate,second)";
	$0.DiffInSeconds := datediff($0.FirstDate,$0.SecondDate,second);
}

// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Edge debugLastRecords="true" debugMode="true" fromNode="DATA_READER0:0" guiBendpoints="" id="Edge3" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="REFORMAT1:0"/>
<Edge debugLastRecords="true" debugMode="true" fromNode="REFORMAT1:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
