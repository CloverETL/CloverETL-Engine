<?xml version="1.0" encoding="UTF-8"?>
<Graph author="milos_kovalcik" created="Thu Dec 18 12:51:41 CET 2008" guiVersion="0.0.0.devel" id="1229618575906" licenseType="Evaluation license." modified="Fri May 15 14:35:47 CEST 2009" modifiedBy="cloveruser" name="stringLeft" revision="1.19">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="leftInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Arg" type="string"/>
<Field name="AmountOfCharacters" type="integer"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="leftOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Arg" type="string"/>
<Field name="AmountOfCharacters" type="integer"/>
<Field name="Function" type="string"/>
<Field name="Result" type="string"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="145" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="string left(string arg, numerictype length)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="443" x="80" y="105">
<attr name="text"><![CDATA[
The left(string, numerictype) function accepts two arguments: the first is string and the other is of any numeric data type. It takes them and returns the substring of the length equal to the integer part of the second argument counted from the beginning of the string specified as the first argument.]]></attr>
</Note>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/stringLeft.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="64" guiY="269" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/stringLeftOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="469" guiY="269" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="273" guiY="269" id="REFORMAT1" type="REFORMAT">
<attr name="transform"><![CDATA[//#TL

// Transforms input record into output record.
function transform() {
	$0.Arg := $0.Arg;
	$0.AmountOfCharacters := $0.AmountOfCharacters;
	$0.Function := "left($0.Arg,$0.AmountOfCharacters)";
	$0.Result := left($0.Arg,$0.AmountOfCharacters);
}
// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Edge debugLastRecords="true" debugMode="true" fromNode="DATA_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="REFORMAT1:0"/>
<Edge debugLastRecords="true" debugMode="true" fromNode="REFORMAT1:0" guiBendpoints="" id="Edge2" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="DATA_WRITER0:0"/>
</Phase>
</Graph>
