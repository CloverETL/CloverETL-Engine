<?xml version="1.0" encoding="UTF-8"?>
<Graph author="cloveruser" created="Wed Mar 25 09:22:10 CET 2009" guiVersion="0.0.0.devel" id="1237969331155" licenseType="Evaluation license." modified="Fri May 15 14:16:47 CEST 2009" modifiedBy="cloveruser" name="conversionNum2num" revision="1.12">
<Global>
<Metadata id="Metadata2" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="conversionNum2numDecimalToIntegerInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Decimal" type="decimal"/>
</Record>
</Metadata>
<Metadata id="Metadata3" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="conversionNum2numDecimalToIntegerOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Decimal" type="decimal"/>
<Field name="Function" type="string"/>
<Field name="Result" type="integer"/>
</Record>
</Metadata>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="conversionNum2numIntegerToDecimalInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Integer" type="integer"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="conversionNum2numIntegerToDecimalOverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="Integer" type="integer"/>
<Field name="Function" type="string"/>
<Field name="Result" type="decimal"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="188" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="numerictype num2num(numerictype Arg, typename numerictype)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="618" x="63" y="23">
<attr name="text"><![CDATA[
The num2num(numerictype, typename) function accepts two arguments: the first is of any numeric data type and the second is the name of any numeric data type. 
The second argument can neither be received through the edge nor be defined as variable, it must be specified in the function.
The function takes these two arguments and converts the first argument value to that of the numeric type whose name is specified as the second argument. The return type of the function is the same as the second argument. 
The conversion is successful only if the conversion is possible without any loss of information, otherwise the function throws exception. ]]></attr>
</Note>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="124" id="Note1" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Example" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="619" x="64" y="225">
<attr name="text"><![CDATA[
Phase 0: We have tried to convert integer numbers to decimals. It can be done and the phase 0 ends successfully.

Phase 1: We have tried to convert decimal numbers to integers. It cannot be done and the phase 1 fails.]]></attr>
</Note>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/conversionNum2numIntegerToDecimal.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="67" guiY="361" id="DATA_READER0" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/conversionNum2numIntegerToDecimalOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="533" guiY="361" id="DATA_WRITER0" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="294" guiY="361" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[//#TL

// Transforms input record into output record.
function transform() {
	$0.Integer := $0.Integer;
	$0.Function := "num2num($0.Integer,decimal)";
	$0.Result := num2num($0.Integer,decimal);
}

// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Edge debugMode="true" fromNode="DATA_READER0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="REFORMAT0:0"/>
<Edge debugMode="true" fromNode="REFORMAT0:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="DATA_WRITER0:0"/>
</Phase>
<Phase number="1">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/conversionNum2numDecimalToInteger.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="67" guiY="475" id="DATA_READER1" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/conversionNum2numDecimalToIntegerOverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="533" guiY="475" id="DATA_WRITER1" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="294" guiY="475" id="REFORMAT1" type="REFORMAT">
<attr name="transform"><![CDATA[//#TL

// Transforms input record into output record.
function transform() {
	$0.Decimal := $0.Decimal;
	$0.Function := "num2num($0.Integer,int)";
	$0.Result := num2num($0.Decimal,int);
}

// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Edge debugMode="true" fromNode="DATA_READER1:0" guiBendpoints="" id="Edge3" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (output)" toNode="REFORMAT1:0"/>
<Edge debugMode="true" fromNode="REFORMAT1:0" guiBendpoints="" id="Edge2" inPort="Port 0 (in)" metadata="Metadata3" outPort="Port 0 (out)" toNode="DATA_WRITER1:0"/>
</Phase>
</Graph>
