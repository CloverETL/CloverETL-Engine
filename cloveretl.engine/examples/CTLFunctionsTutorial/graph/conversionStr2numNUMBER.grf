<?xml version="1.0" encoding="UTF-8"?>
<Graph author="cloveruser" created="Thu Mar 19 14:24:06 CET 2009" guiVersion="0.0.0.devel" id="1237480457206" licenseType="Evaluation license." modified="Wed Mar 25 14:41:39 CET 2009" modifiedBy="cloveruser" name="str2num" revision="1.24">
<Global>
<Metadata id="Metadata0" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="str2numNUMBERInput" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="String" type="string"/>
<Field name="Radix" type="integer"/>
</Record>
</Metadata>
<Metadata id="Metadata1" previewAttachmentCharset="ISO-8859-1">
<Record fieldDelimiter=";" name="str2numNUMBEROverview" previewAttachmentCharset="ISO-8859-1" recordDelimiter="\r\n" type="delimited">
<Field name="String" type="string"/>
<Field name="Radix" type="integer"/>
<Field name="Function" type="string"/>
<Field name="Result" type="number"/>
</Record>
</Metadata>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="100" id="Note1" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="Example - number data type" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="558" x="55" y="193">
<attr name="text"><![CDATA[
When working with number data type, 10 or 16 can be used as radix.

If radix is not specified, 10 or 16 are used by default.]]></attr>
</Note>
<Note alignment="1" backgroundColorB="225" backgroundColorG="255" backgroundColorR="255" folded="false" height="130" id="Note0" textColorB="0" textColorG="0" textColorR="0" textFontSize="8" title="numerictype str2num(string Arg, typename Numerictype, int Radix)" titleColorB="0" titleColorG="0" titleColorR="0" titleFontSize="10" width="561" x="54" y="20">
<attr name="text"><![CDATA[
The str2num(string, typename, int) function accepts three arguments: the first is string, the second is the name of any numeric data type and the third is integer number (radix). 
The name of the second argument can neither be received through the edge nor be defined as variable.
The function takes the first argument and returns the corresponding value in the radix based numeric system and in data type specified by the second argument. 
The return type of the function is the same as the second argument.]]></attr>
</Note>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/pokus.txt" guiHeight="0" guiName="UniversalDataReader" guiWidth="0" guiX="53" guiY="336" id="DATA_READER1" type="DATA_READER"/>
<Node enabled="enabled" fileURL="${DATAOUT_DIR}/conversionStr2numNUMBEROverview.txt" guiHeight="0" guiName="UniversalDataWriter" guiWidth="0" guiX="556" guiY="336" id="DATA_WRITER1" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="0" guiName="Reformat" guiWidth="0" guiX="297" guiY="336" id="REFORMAT1" type="REFORMAT">
<attr name="transform"><![CDATA[//#TL

// Transforms input record into output record.
function transform() {
	$0.String := $0.String;
	$0.Radix := $0.Radix;
	$0.Function := "str2num($0.String,number,$0.Radix)";
	$0.Result := str2num($0.String,number);
}

// Called during component initialization.
// function init() {}

// Called after the component finishes.
// function finished() {}
]]></attr>
</Node>
<Edge debugMode="true" fromNode="DATA_READER1:0" guiBendpoints="" id="Edge3" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="REFORMAT1:0"/>
<Edge debugMode="true" fromNode="REFORMAT1:0" guiBendpoints="" id="Edge2" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="DATA_WRITER1:0"/>
</Phase>
</Graph>
