<?xml version="1.0" encoding="UTF-8"?>
<Graph created="Wed Mar 07 09:01:26 CET 2007" description="This example illustrates usage of Reformat component with transformation&#10;code (class) inlined (saved with the graph itself). The source code&#10;is automatically compiled at runtime.&#10;For successfull compilation, tools.jar library must be part of CLASSPATH.&#10;" guiVersion="1.6" licenseType="Unlicensed clover.GUI" modified="Wed Mar 07 09:54:57 CET 2007" name="Testing Reformat" revision="1.0">
<Global>
<Metadata fileURL="metadata/delimited/ordersInfo.fmt" id="Metadata1"/>
<Metadata fileURL="metadata/delimited/orders.fmt" id="Metadata0"/>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${WORKSPACE}/data/delimited/orders.dat" guiHeight="25" guiName="INPUT" guiWidth="50" guiX="20" guiY="20" id="INPUT" type="DELIMITED_DATA_READER"/>
<Node append="false" enabled="enabled" fileURL="${WORKSPACE}/output/orders.dat.out" guiHeight="25" guiName="OUTPUT" guiWidth="50" guiX="370" guiY="20" id="OUTPUT" type="DELIMITED_DATA_WRITER"/>
<Node enabled="enabled" guiHeight="25" guiName="REF" guiWidth="50" guiX="195" guiY="20" id="REF" type="REFORMAT">
<attr name="transform">
import org.jetel.component.DataRecordTransform;
import org.jetel.data.*;


public class reformatOrders extends DataRecordTransform{

	int counter=0;
	int field=0;

	public boolean transform(DataRecord[] source, DataRecord[] target){
		StringBuffer strBuf=new StringBuffer(80);
		if (source[0]==null){
		   System.err.println("NULL source[0]");
		}
		try{
			// let's concatenate shipping address into one long string
			strBuf.append(GetVal.getString(source[0],"ShipName")).append(';');
			strBuf.append(GetVal.getString(source[0],"ShipAddress")).append(';');
			strBuf.append(GetVal.getString(source[0],"ShipCity")).append(';');
			strBuf.append(GetVal.getString(source[0],"ShipCountry"));
			// mapping among source &amp; target fields
			// some fields get assigned directly from source fields, some
			// are assigned from internall variables
			SetVal.setInt(target[0],"PRODUCTID",counter);
			SetVal.setInt(target[0],"ORDERID",GetVal.getInt(source[0],"OrderID"));
			SetVal.setString(target[0],"CUSTOMERID",GetVal.getString(source[0],"CustomerID"));
			SetVal.setString(target[0],"CUSTOMER",strBuf.toString());
			SetVal.setInt(target[0], "SHIPTIME", (int)( (GetVal.getDate(
					source[0], "RequiredDate").getTime() - GetVal.getDate(
					source[0], "ShippedDate").getTime())
					/ 1000 / 60 / 60 / 24));
		}catch(Exception ex){
		  ex.printStackTrace();
			errorMessage=ex.getMessage()+" -&gt;occured with record :"+counter;
			return false;
		}
		counter++;
			return true;
	}
}
</attr>
</Node>
<Edge fromNode="INPUT:0" guiBendpoints="" id="INEDGE" inPort="0 (REF)" metadata="Metadata0" outPort="0 (INPUT)" toNode="REF:0"/>
<Edge fromNode="REF:0" guiBendpoints="" id="OUTEDGE" inPort="0 (OUTPUT)" metadata="Metadata1" outPort="0 (REF)" toNode="OUTPUT:0"/>
</Phase>
</Graph>
