<?xml version="1.0" encoding="UTF-8"?>
<Graph author="avackova" created="Fri Jan 12 15:46:21 CET 2007" description="This graph demonstrates usage of Node-level parameters" guiVersion="0.0" id="1204549694917" licenseType="Evaluation license." modified="Mon Nov 10 11:56:28 CET 2008" modifiedBy="avackova" name="Testing Simple Lookup with parameters" revision="1.19">
<Global>
<Metadata fileURL="${META_DIR}/delimited/employees.fmt" id="Metadata0"/>
<Metadata fileURL="${META_DIR}/delimited/joinedOrders.fmt" id="Metadata1"/>
<Metadata fileURL="${META_DIR}/delimited/orders.fmt" id="Metadata2"/>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
</Global>
<Phase number="0">
<Node dataPolicy="Strict" enabled="enabled" fileURL="${DATAIN_DIR}/delimited/orders.dat" guiHeight="25" guiName="INPUT1" guiWidth="50" guiX="20" guiY="20" id="INPUT1" type="DATA_READER"/>
<Node enabled="enabled" guiHeight="25" guiName="JOIN" guiWidth="50" guiX="195" guiY="20" id="JOIN" type="REFORMAT">
<attr name="transform"><![CDATA[
import org.jetel.component.DataRecordTransform;
import org.jetel.data.DataRecord;
import org.jetel.data.RecordKey;
import org.jetel.data.lookup.Lookup;
import org.jetel.data.parser.DataParser;
import org.jetel.data.parser.Parser;
import org.jetel.exception.ComponentNotReadyException;
import org.jetel.lookup.SimpleLookupTable;
import org.jetel.metadata.DataRecordMetadata;

public class reformatTest extends DataRecordTransform{

	Lookup mylookup;

	public boolean init() throws ComponentNotReadyException{
		
		Parser parser=new DataParser();
		DataRecordMetadata lookupMetadata = getDataRecordMetadata("Metadata0");
		parser.init(lookupMetadata);
	    String[] lookupKeyStr=new String[1];
	    lookupKeyStr[0]=parameters.getProperty("keyField");
		SimpleLookupTable lt = new SimpleLookupTable("mylookup",lookupMetadata, lookupKeyStr ,parser);
		lt.setFileURL(parameters.getProperty("lookupFile"));
		// create key 
		RecordKey key=new RecordKey(lookupKeyStr,sourceMetadata[0]);
		key.init();
		lt.init();
		mylookup = lt.createLookup(key);
		return true;
	}

	public int transform(DataRecord[] source, DataRecord[] target){
	        
		mylookup.seek(source[0]);
		
		if (!mylookup.hasNext()) return SKIP; // skip this one
		
		DataRecord employee = (DataRecord)mylookup.next();

		target[0].getField(0).setValue(source[0].getField(0).getValue());
  		target[0].getField(1).setValue(source[0].getField(1).getValue());
		target[0].getField(2).setValue(source[0].getField(2).getValue().toString());
		target[0].getField(3).setValue(employee.getField(0).getValue().toString());
		target[0].getField(4).setValue(employee.getField(1).getValue());

		return ALL;
	}
}
]]></attr>
<attr name="lookupFile"><![CDATA[${LOOKUP_DIR}/employees.dat]]></attr>
<attr name="keyField"><![CDATA[EmployeeID]]></attr>
</Node>
<Node append="false" enabled="enabled" fileURL="${DATAOUT_DIR}/joined_data_hash.out" guiHeight="25" guiName="WRITER" guiWidth="50" guiX="370" guiY="20" id="WRITER" type="DATA_WRITER"/>
<Edge fromNode="INPUT1:0" guiBendpoints="" id="INEDGE1" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 0 (output)" toNode="JOIN:0"/>
<Edge fromNode="JOIN:0" guiBendpoints="" id="OUTEDGE" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="WRITER:0"/>
</Phase>
</Graph>
