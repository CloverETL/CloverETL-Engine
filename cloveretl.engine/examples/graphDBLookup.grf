<?xml version="1.0" encoding="UTF-8"?>
<Graph name="Testing Hash Joiner">
<Global>
<Metadata id="Metadata0">
<Record name="defaultRecordName" type="delimited">
<Field delimiter=";" name="Field1" nullable="false" type="string"/>
<Field delimiter=";" name="Field2" nullable="true" type="string"/>
<Field delimiter=";" name="Field3" nullable="false" type="string"/>
</Record>
</Metadata>
<Metadata id="Metadata1">
<Record name="employee" type="delimited">
<Field delimiter=";" name="employee_id" nullable="true" type="integer"/>
<Field delimiter=";" name="full_name" nullable="true" type="string"/>
<Field delimiter=";" name="first_name" nullable="true" type="string"/>
<Field delimiter=";" name="last_name" nullable="true" type="string"/>
<Field delimiter=";" name="position_id" nullable="true" type="integer"/>
<Field delimiter=";" name="position_title" nullable="true" type="string"/>
<Field delimiter=";" name="store_id" nullable="true" type="integer"/>
<Field delimiter=";" name="department_id" nullable="true" type="integer"/>
<Field delimiter=";" name="birth_date" nullable="true" type="date"/>
<Field delimiter=";" name="hire_date" nullable="true" type="date"/>
<Field delimiter=";" name="end_date" nullable="true" type="date"/>
<Field delimiter=";" name="salary" nullable="true" type="numeric"/>
<Field delimiter=";" name="supervisor_id" nullable="true" type="integer"/>
<Field delimiter=";" name="education_level" nullable="true" type="string"/>
<Field delimiter=";" name="marital_status" nullable="true" type="string"/>
<Field delimiter=";" name="gender" nullable="true" type="string"/>
<Field delimiter="\n" name="management_role" nullable="true" type="string"/>
</Record>
</Metadata>
<Metadata fileURL="metadata/employees.fmt" id="InMetadata2"/>
<Metadata fileURL="metadata/joinedOrders.fmt" id="OutMetadata"/>
<Metadata fileURL="metadata/orders.fmt" id="InMetadata1"/>
<Connection dbConfig="koule_postgre.cfg" id="DBConnection0" type="JDBC"/>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
<LookupTable dbConnection="DBConnection0" id="LookupTable0" key="employee_id" metadata="Metadata1" name="name" sqlQuery="select * from employee where employee_id=?" type="dbLookup"/>
</Global>
<Phase number="0">
<Node dataPolicy="Strict" enabled="enabled" fileURL="${WORKSPACE}/data/orders.dat" guiHeight="25" guiName="INPUT1" guiWidth="50" guiX="20" guiY="20" id="INPUT1" type="DELIMITED_DATA_READER"/>
<Node enabled="enabled" guiHeight="25" guiName="JOIN" guiWidth="50" guiX="228" guiY="20" id="JOIN" type="REFORMAT">
<attr name="transform">
import org.jetel.component.DataRecordTransform;
import org.jetel.data.DataRecord;
import org.jetel.data.RecordKey;
import org.jetel.data.lookup.LookupTable;
import org.jetel.exception.JetelException;
import org.jetel.graph.TransformationGraph;

public class reformatTest extends DataRecordTransform{

	LookupTable mylookup;

	public boolean init(){

		try {
			mylookup = graph.getLookupTable("LookupTable0");
			mylookup.init();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		// create key 
	    String[] lookupKeyStr={"EmployeeID"};
		RecordKey key=new RecordKey(lookupKeyStr,sourceMetadata[0]);
		key.init();
		mylookup.setLookupKey(key);
		return true;
	}

	public boolean transform(DataRecord[] source, DataRecord[] target){
	        

		DataRecord employee; 
		employee=mylookup.get(source[0]);
		
		if (employee==null) return false; // skip this one
		
		target[0].getField(0).setValue(source[0].getField(0).getValue());
  		target[0].getField(1).setValue(source[0].getField(1).getValue());
		target[0].getField(2).setValue(source[0].getField(2).getValue());
		target[0].getField(3).setValue(employee.getField(0).getValue().toString());
		target[0].getField(4).setValue(employee.getField(1).getValue());

		return true;
	}
}
</attr>
</Node>
<Node append="false" enabled="enabled" fileURL="${WORKSPACE}/output/joined_data_hash.out" guiHeight="25" guiName="WRITER" guiWidth="50" guiX="421" guiY="20" id="WRITER" type="DELIMITED_DATA_WRITER"/>
<Edge debugMode="false" fromNode="INPUT1:0" guiBendpoints="" id="INEDGE1" inPort="0 (JOIN)" metadata="InMetadata1" outPort="0 (INPUT1)" toNode="JOIN:0"/>
<Edge fromNode="JOIN:0" guiBendpoints="" id="OUTEDGE" inPort="0 (WRITER)" metadata="OutMetadata" outPort="0 (JOIN)" toNode="WRITER:0"/>
</Phase>
</Graph>
