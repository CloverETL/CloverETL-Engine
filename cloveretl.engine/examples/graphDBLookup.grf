<?xml version="1.0" encoding="UTF-8"?>
<Graph name="Testing Hash Joiner">
<Global>
<Metadata id="Metadata0">
<Record name="defaultRecordName" type="delimited">
<Field delimiter=";" name="Field1" nullable="false" type="string"/>
<Field delimiter=";" name="Field2" nullable="true" type="string"/>
<Field delimiter=";" name="Field3" nullable="false" type="string"/>
</Record>
</Metadata>
<Metadata fileURL="metadata/employees.fmt" id="InMetadata2"/>
<Metadata fileURL="metadata/joinedOrders.fmt" id="OutMetadata"/>
<Metadata fileURL="metadata/orders.fmt" id="InMetadata1"/>
<DBConnection dbConfig="koule_postgre.cfg" id="DBConnection0"/>
<LookupTable dbConnection="DBConnection0" id="LookupTable0" key="EmployeeID" metadata="InMetadata2" name="jmeno" sqlQuery="select * from employees where EmployeeID=?;" type="dbLookup"/>
</Global>
<Phase number="0">
<Node DataPolicy="Strict" enabled="enabled" fileURL="data/orders.dat" guiHeight="25" guiName="INPUT1" guiWidth="50" guiX="20" guiY="20" id="INPUT1" type="DELIMITED_DATA_READER_NIO"/>
<Node enabled="enabled" guiHeight="25" guiName="JOIN" guiWidth="50" guiX="228" guiY="20" id="JOIN" type="REFORMAT">
<attr name="javaSource">&#13;
import org.jetel.component.DataRecordTransform;&#13;
import org.jetel.data.DataRecord;&#13;
import org.jetel.data.RecordKey;&#13;
import org.jetel.data.lookup.LookupTable;&#13;
import org.jetel.exception.JetelException;&#13;
import org.jetel.graph.TransformationGraph;&#13;
&#13;
public class reformatTest extends DataRecordTransform{&#13;
&#13;
	LookupTable mylookup;&#13;
&#13;
	public boolean init(){&#13;
&#13;
		try {&#13;
			mylookup = graph.getLookupTable("LookupTable0");&#13;
			mylookup.init();&#13;
		} catch (Exception e) {&#13;
			// TODO Auto-generated catch block&#13;
			e.printStackTrace();&#13;
		}&#13;
		&#13;
		// create key &#13;
	    String[] lookupKeyStr={"EmployeeID"};&#13;
		RecordKey key=new RecordKey(lookupKeyStr,sourceMetadata[0]);&#13;
		key.init();&#13;
		mylookup.setLookupKey(key);&#13;
		return true;&#13;
	}&#13;
&#13;
	public boolean transform(DataRecord[] source, DataRecord[] target){&#13;
	        &#13;
&#13;
		DataRecord employee; &#13;
		employee=mylookup.get(source[0]);&#13;
		&#13;
		if (employee==null) return false; // skip this one&#13;
		&#13;
		target[0].getField(0).setValue(source[0].getField(0).getValue());&#13;
  		target[0].getField(1).setValue(source[0].getField(1).getValue());&#13;
		target[0].getField(2).setValue(source[0].getField(2).getValue());&#13;
		target[0].getField(3).setValue(employee.getField(0).getValue());&#13;
		target[0].getField(4).setValue(employee.getField(1).getValue());&#13;
&#13;
		return true;&#13;
	}&#13;
}&#13;
</attr>
</Node>
<Node append="false" enabled="enabled" fileURL="output/joined_data_hash.out" guiHeight="25" guiName="WRITER" guiWidth="50" guiX="421" guiY="20" id="WRITER" type="DELIMITED_DATA_WRITER_NIO"/>
<Edge fromNode="INPUT1:0" guiBendpoints="" id="INEDGE1" inPort="0 (JOIN)" metadata="InMetadata1" outPort="0 (INPUT1)" toNode="JOIN:0"/>
<Edge fromNode="JOIN:0" guiBendpoints="" id="OUTEDGE" inPort="0 (WRITER)" metadata="OutMetadata" outPort="0 (JOIN)" toNode="WRITER:0"/>
</Phase>
</Graph>
