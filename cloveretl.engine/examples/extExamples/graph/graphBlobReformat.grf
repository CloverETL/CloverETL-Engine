<?xml version="1.0" encoding="UTF-8"?>
<Graph author="avackova" created="Tue Jul 31 09:29:05 CEST 2007" guiVersion="0.0" id="1204543541694" licenseType="Evaluation license." modified="Mon Nov 24 11:57:07 CET 2008" modifiedBy="avackova" name="test" revision="1.152">
<Global>
<Metadata fileURL="${META_DIR}/delimited/employees.fmt" id="Metadata0"/>
<Metadata id="Metadata1">
<Record fieldDelimiter=";" name="EMP_BLOB" recordDelimiter="\n" recordSize="-1" type="delimited">
<Field name="EMPID" nullable="true" shift="0" type="integer"/>
<Field name="LASTNAME" nullable="true" shift="0" type="byte"/>
</Record>
</Metadata>
<Connection dbConfig="${CONN_DIR}/db2.cfg" id="Connection0" type="JDBC"/>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
</Global>
<Phase number="0">
<Node dbConnection="Connection0" dbTable="EMP_BLOB" enabled="enabled" guiHeight="0" guiName="DB2 OUTPUT" guiWidth="0" guiX="470" guiY="20" id="DB_OUTPUT_TABLE0" type="DB_OUTPUT_TABLE"/>
<Node dataPolicy="controlled" enabled="enabled" fileURL="${DATAIN_DIR}/delimited/employees.dat" guiHeight="0" guiName="FILE INPUT" guiWidth="0" guiX="20" guiY="20" id="DELIMITED_DATA_READER0" quotedStrings="true" type="DATA_READER"/>
<Node enabled="enabled" guiHeight="0" guiName="REFORMAT" guiWidth="0" guiX="245" guiY="20" id="REFORMAT0" type="REFORMAT">
<attr name="transform"><![CDATA[// automatically generated on Mon Nov 24 11:53:08 CET 2008
import java.util.*;
import org.jetel.data.*;
import org.jetel.graph.*;
import org.jetel.metadata.*;
import org.jetel.component.*;
import org.jetel.exception.*;
import org.jetel.data.sequence.*;

public class Transform extends DataRecordTransform { 


	/**
	 * Initializes reformat class/function. This method is called only once at then
	 * beginning of transformation process. Any object allocation/initialization should
	 * happen here.
	 */
	public boolean init() throws ComponentNotReadyException {
		return true;
	}

	/**
	 * Performs reformat of source records to target records.
	 * This method is called as one step in transforming flow of
	 * records.
	 */
	public int transform(DataRecord[] inputRecords, DataRecord[] outputRecords) throws TransformException {
		try {
			// user's code STARTs from here !

				outputRecords[0].getField(0).setValue(inputRecords[0].getField(0));
				outputRecords[0].getField(1).setValue(inputRecords[0].getField(1).toString().getBytes());
			
			// user's code ENDs here !
		} catch(Exception e) {
			throw new TransformException("Error in extern transformation class " + Transform.class.getName() + ": " + e.getMessage());
		}
		return ALL;
	}

	/**
	 * Method called at the end of transformation process. No more
	 * records will be processed. The implementing class should release
	 * any resource reserved during init() or runtime at this point.
	 */
	public void finished() {
		
	}
}
//end of transform class 
]]></attr>
</Node>
<Edge fromNode="DELIMITED_DATA_READER0:0" guiBendpoints="" id="Edge1" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (output)" toNode="REFORMAT0:0"/>
<Edge fromNode="REFORMAT0:0" guiBendpoints="" id="Edge0" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="DB_OUTPUT_TABLE0:0"/>
</Phase>
</Graph>
