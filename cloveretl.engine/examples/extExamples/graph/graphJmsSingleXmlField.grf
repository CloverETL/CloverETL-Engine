<?xml version="1.0" encoding="UTF-8"?>
<Graph created="Mon Dec 16 11:30:48 CET 2007" description="This graph ilustrates usage of JMS Reader/Writer for transfer one single field containing XML element. It requires ACtiveMQ JMS server and all libraries required by ACtiveMQ connection factory." guiVersion="1.9" id="1204546496818" licenseType="Evaluation license." modified="Thu Apr 03 11:09:14 CEST 2008" name="graphSystemExecute" revision="1.10">
<Global>
<Metadata fileURL="${META_DIR}/delimited/customers.fmt" id="Metadata1"/>
<Metadata fileURL="${META_DIR}/delimited/orders.fmt" id="Metadata2"/>
<Metadata id="Metadata0">
<Record fieldDelimiter="#" name="Customer" recordSize="-1" type="delimited">
<Field eofAsDelimiter="true" name="xml" nullable="true" shift="0" type="string"/>
</Record>
</Metadata>
<Connection connectionFactory="ConnectionFactory" destId="dynamicQueues/Clover" id="dest" iniCtxFactory="org.apache.activemq.jndi.ActiveMQInitialContextFactory" libraries="file:${WORKSPACE}/../cloveretl.engine/lib/mx4j-tools-2.1.1.jar;file:${WORKSPACE}/../cloveretl.engine/lib/activeio-core-3.0.0-incubator.jar;file:${WORKSPACE}/../cloveretl.engine/lib/backport-util-concurrent-2.1.jar;file:${WORKSPACE}/../cloveretl.engine/lib/jms.jar;file:${WORKSPACE}/../cloveretl.engine/lib/activemq-core-4.1.1.jar;file:${WORKSPACE}/../cloveretl.engine/lib/geronimo-j2ee-management_1.0_spec-1.0.jar;file:${WORKSPACE}/../cloveretl.engine/lib/derby-10.1.1.0.jar" providerUrl="vm://koule:61613?marshal=false&amp;broker.persistent=false" type="JMS"/>
<Property fileURL="workspace.prm" id="GraphParameter0"/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${DATAIN_DIR}/other/customers.xml" guiHeight="25" guiName="Input" guiWidth="50" guiX="13" guiY="28" id="Input" type="DATA_READER"/>
<Node connection="dest" enabled="enabled" guiHeight="25" guiName="JmsReader" guiWidth="50" guiX="223" guiY="111" id="JmsReader" maxMsgCount="0" timeout="4000" type="JMS_READER">
<attr name="bodyField"><![CDATA[xml]]></attr>
<attr name="_processorClass"><![CDATA[org.jetel.component.JmsMsg2DataRecordProperties]]></attr>
</Node>
<Node connection="dest" enabled="enabled" guiHeight="25" guiName="JmsWriter" guiWidth="50" guiX="223" guiY="28" id="JmsWriter" type="JMS_WRITER">
<attr name="bodyField"><![CDATA[xml]]></attr>
<attr name="_processorClass"><![CDATA[org.jetel.component.DataRecord2JmsMsgProperties]]></attr>
</Node>
<Edge fromNode="Input:0" guiBendpoints="" id="INEDGE1" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="JmsWriter:0"/>
<Edge fromNode="JmsReader:0" guiBendpoints="" id="INEDGE3" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="XPathTransform:0"/>
</Phase>
<Phase number="1">
<Node append="false" enabled="enabled" fileURL="${DATAOUT_DIR}/customers.out" guiHeight="25" guiName="OutCustomer" guiWidth="50" guiX="647" guiY="226" id="OutCustomer" type="DATA_WRITER"/>
<Node append="false" enabled="enabled" fileURL="${DATAOUT_DIR}/orders.out" guiHeight="25" guiName="OutOrder" guiWidth="50" guiX="648" guiY="307" id="OutOrder" type="DATA_WRITER"/>
<Node enabled="enabled" guiHeight="25" guiName="REF" guiWidth="50" guiX="431" guiY="228" id="XPathTransform" type="REFORMAT">
<attr name="transform"><![CDATA[
import org.jetel.component.DataRecordTransform;
import org.jetel.data.*;
import java.io.StringReader;
import org.jetel.component.XmlXPathReader;
import javax.xml.parsers.DocumentBuilderFactory;

import org.jetel.data.DataRecord;
import org.jetel.data.parser.XPathParser;
import org.jetel.exception.*;
import org.jetel.graph.*;
import org.jetel.util.*;
import org.w3c.dom.*;
import org.xml.sax.InputSource;
import org.jetel.data.parser.*;
import java.io.*;

public class reformatOrders extends DataRecordTransform{

	int counter=0;
	private XPathParser parser;

	public boolean init() throws ComponentNotReadyException {
		String mapping = 
	              " <Context xpath=\"/records/customer\" outPort=\"0\"> " + 
	              " <Context xpath=\"/records/customer/order\" outPort=\"1\" /> " +
	          	  " </Context> ";
		
		try {
			Document doc = XmlXPathReader.createDocumentFromString(mapping);
			parser = new XPathParser(doc);
		} catch (Exception e) {
			e.printStackTrace();
		}
	    return true;
	}

	public boolean transform(DataRecord[] source, DataRecord[] target){
   		System.out.println("============== XPath transform ==============");
		try{
			
			parser.init(target[0].getMetadata());
			for (int i=0; i<target.length; i++){
		   		System.out.println("assign port:"+i);
				parser.assignRecord(target[i], i);
			}// for

			String s = source[0].getField(0).toString();
		    System.out.println("source XML:"+s);
			InputStream is = new StringBufferInputStream(s); 
			parser.setDataSource( is );
			
			boolean[] flags = new boolean[target.length];
			DataRecord dr = null;
			while ((dr = parser.getNext()) != null){
				int port = parser.getActualPort();
				if (flags[port])
					continue;
				flags[port] = true;	
				target[port] = dr.duplicate();
			    System.out.println("OUTport:"+port+" data record:"+target[port]);
			} // while
		
		}catch(Exception ex){
			ex.printStackTrace();
			errorMessage=ex.getMessage()+" -&gt;occured with record :"+counter;
			return false;
		}
		counter++;
		return true;
	}
}

]]></attr>
</Node>
<Edge fromNode="XPathTransform:0" guiBendpoints="" id="INEDGE4" inPort="Port 0 (in)" metadata="Metadata1" outPort="Port 0 (out)" toNode="OutCustomer:0"/>
<Edge fromNode="XPathTransform:1" guiBendpoints="" id="INEDGE5" inPort="Port 0 (in)" metadata="Metadata2" outPort="Port 1 (out)" toNode="OutOrder:0"/>
</Phase>
</Graph>
