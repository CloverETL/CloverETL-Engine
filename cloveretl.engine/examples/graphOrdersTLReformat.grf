<?xml version="1.0" encoding="UTF-8"?>
<Graph description="This example illustrates usage of Reformat component with transformation&#10;code (class) inlined (saved with the graph itself). The source code&#10;is automatically compiled at runtime.&#10;For successfull compilation, tools.jar library must be part of CLASSPATH.&#10;" name="Testing Reformat">
<Global>
<Metadata fileURL="metadata/orders.fmt" id="InMetadata"/>
<Metadata fileURL="metadata/ordersRef.fmt" id="OutMetadata"/>
</Global>
<Phase number="0">
<Node enabled="enabled" fileURL="${WORKSPACE}/data/orders.dat" guiHeight="25" guiName="INPUT" guiWidth="50" guiX="20" guiY="20" id="INPUT" type="DELIMITED_DATA_READER"/>
<Node append="false" enabled="enabled" fileURL="${WORKSPACE}/output/orders.dat.out" guiHeight="25" guiName="OUTPUT" guiWidth="50" guiX="370" guiY="20" id="OUTPUT" type="DELIMITED_DATA_WRITER"/>
<Node enabled="enabled" guiHeight="25" guiName="REF" guiWidth="50" guiX="195" guiY="20" id="REF" type="REFORMAT">
<attr name="transform">
//#TL

int key; // define global variable, will be used as counter for generating IDs
 
key=-1; // assign value to it

/* 
  sample function, just to show how things work
*/
function sum(a,b){
	return a+b;
}


function transform()
{

$0.CustomerID := $0.CustomerID;
$0.OrderKey := ++key;
$0.OrderID := $0.OrderID;
$0.OrderDate := $0.OrderDate;
$0.ShippedDate := sum($0.OrderDate,7); // we ship 1 week later :-)
$0.ShipVia := $0.ShipVia;
$0.ShipTo := $0.ShipName+$0.ShipAddress+$0.ShipCity+$0.ShipCountry;

}

</attr>
</Node>
<Edge fromNode="INPUT:0" guiBendpoints="" id="INEDGE" inPort="0 (REF)" metadata="InMetadata" outPort="0 (INPUT)" toNode="REF:0"/>
<Edge fromNode="REF:0" guiBendpoints="" id="OUTEDGE" inPort="0 (OUTPUT)" metadata="OutMetadata" outPort="0 (REF)" toNode="OUTPUT:0"/>
</Phase>
</Graph>
