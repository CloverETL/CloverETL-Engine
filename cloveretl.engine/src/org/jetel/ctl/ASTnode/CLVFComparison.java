/* Generated By:JJTree: Do not edit this line. CLVFComparison.java */

package org.jetel.ctl.ASTnode;

import org.jetel.ctl.ExpParser;
import org.jetel.ctl.TransformLangParserConstants;
import org.jetel.ctl.TransformLangParserVisitor;
import org.jetel.ctl.data.TLType;

public class CLVFComparison extends SimpleNode {

	private int operator;
	/** Type in which to perform the comparison */
	private TLType operationType;

	public CLVFComparison(int id) {
		super(id);
	}

	public CLVFComparison(ExpParser p, int id) {
		super(p, id);
	}
	

	public CLVFComparison(CLVFComparison node) {
		super(node);
		this.operator = node.operator;
	}

	/** Accept the visitor. * */
	public Object jjtAccept(TransformLangParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}

	public String toString() {
		return super.toString() + " - " + TransformLangParserConstants.tokenImage[operator];
	}

	public void setOperator(int operator) {
		this.operator = operator;
	}

	public int getOperator() {
		return operator;
	}
	
	public void setOperationType(TLType operationType) {
		this.operationType = operationType;
	}
	
	public TLType getOperationType() {
		return operationType;
	}
	
	@Override
	public SimpleNode duplicate() {
		return new CLVFComparison(this);
	}
}