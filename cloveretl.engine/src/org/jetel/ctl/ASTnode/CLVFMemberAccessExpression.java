/* Generated By:JJTree: Do not edit this line. CLVFMemberAccessExpression.java */

package org.jetel.ctl.ASTnode;

import org.jetel.ctl.TransformLangParser;
import org.jetel.ctl.TransformLangParserVisitor;

public class CLVFMemberAccessExpression extends SimpleNode {
	
	private String name;
	private int fieldId;
	private boolean isWildcard = false;
	
	public CLVFMemberAccessExpression(int id) {
		super(id);
	}

	public CLVFMemberAccessExpression(TransformLangParser p, int id) {
		super(p, id);
	}

	public CLVFMemberAccessExpression(CLVFMemberAccessExpression node) {
		super(node);
		this.name = node.name;
		this.fieldId = node.fieldId;
	}

	/** Accept the visitor. * */
	public Object jjtAccept(TransformLangParserVisitor visitor, Object data) {
		return visitor.visit(this, data);
	}
	
	public void setName(String name) {
		this.name = name;
	}
	
	
	public String getName() {
		return name;
	}

	public void setFieldId(int fieldId) {
		this.fieldId = fieldId;
	}
	
	public int getFieldId() {
		return fieldId;
	}
	
	
	@Override
	public String toString() {
		return super.toString() + " field \'" + name + "'";
	}
	
	@Override
	public SimpleNode duplicate() {
		return new CLVFMemberAccessExpression(this);
	}

	public void setWildcard(boolean isWildcard) {
		this.isWildcard = isWildcard;
	}
	
	public boolean isWildcard() {
		return this.isWildcard;
	}
}
