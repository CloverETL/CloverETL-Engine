/* Generated By:JJTree&JavaCC: Do not edit this line. TransformLangParserConstants.java */
package org.jetel.interpreter;

public interface TransformLangParserConstants {

  int EOF = 0;
  int INTEGER_LITERAL = 12;
  int DIGIT = 13;
  int LETTER = 14;
  int UNDERSCORE = 15;
  int DECIMAL_LITERAL = 16;
  int HEX_LITERAL = 17;
  int OCTAL_LITERAL = 18;
  int FLOATING_POINT_LITERAL = 19;
  int EXPONENT = 20;
  int STRING_LITERAL = 21;
  int QUOTED_STRING = 22;
  int DQUOTED_STRING = 23;
  int UNTERMINATED_STRING_LITERAL = 24;
  int UNTERMINATED_QUOTED_STRING = 25;
  int UNTERMINATED_DQUOTED_STRING = 26;
  int BOOLEAN_LITERAL = 27;
  int TRUE = 28;
  int FALSE = 29;
  int DATE_LITERAL = 30;
  int DATETIME_LITERAL = 31;
  int SEMICOLON = 32;
  int NULL_LITERAL = 33;
  int OR = 34;
  int AND = 35;
  int NOT = 36;
  int EQUAL = 37;
  int NON_EQUAL = 38;
  int LESS_THAN = 39;
  int LESS_THAN_EQUAL = 40;
  int GREATER_THAN = 41;
  int GREATER_THAN_EQUAL = 42;
  int REGEX_EQUAL = 43;
  int CMPOPERATOR = 44;
  int MINUS = 45;
  int PLUS = 46;
  int MULTIPLY = 47;
  int DIVIDE = 48;
  int MODULO = 49;
  int PLUS_PLUS = 50;
  int MINUS_MINUS = 51;
  int FIELD_ID = 52;
  int REC_NAME_FIELD_ID = 53;
  int REC_NUM_FIELD_ID = 54;
  int GLOBAL_PARAMETER_ID = 55;
  int OPEN_PAR = 56;
  int CLOSE_PAR = 57;
  int INT_VAR = 58;
  int LONG_VAR = 59;
  int DATE_VAR = 60;
  int DOUBLE_VAR = 61;
  int DECIMAL_VAR = 62;
  int BOOLEAN_VAR = 63;
  int STRING_VAR = 64;
  int DATE_FIELD_LITERAL = 112;
  int IDENTIFIER = 113;
  int ERROR = 114;

  int DEFAULT = 0;
  int WithinComment = 1;
  int WithinLineComment = 2;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\n\\r\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 8>",
    "\"//\"",
    "\"\\n\"",
    "<token of kind 11>",
    "<INTEGER_LITERAL>",
    "<DIGIT>",
    "<LETTER>",
    "<UNDERSCORE>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<STRING_LITERAL>",
    "<QUOTED_STRING>",
    "<DQUOTED_STRING>",
    "<UNTERMINATED_STRING_LITERAL>",
    "<UNTERMINATED_QUOTED_STRING>",
    "<UNTERMINATED_DQUOTED_STRING>",
    "<BOOLEAN_LITERAL>",
    "\"true\"",
    "\"false\"",
    "<DATE_LITERAL>",
    "<DATETIME_LITERAL>",
    "\";\"",
    "\"null\"",
    "<OR>",
    "<AND>",
    "<NOT>",
    "<EQUAL>",
    "<NON_EQUAL>",
    "<LESS_THAN>",
    "<LESS_THAN_EQUAL>",
    "<GREATER_THAN>",
    "<GREATER_THAN_EQUAL>",
    "<REGEX_EQUAL>",
    "<CMPOPERATOR>",
    "\"-\"",
    "\"+\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"++\"",
    "\"--\"",
    "<FIELD_ID>",
    "<REC_NAME_FIELD_ID>",
    "<REC_NUM_FIELD_ID>",
    "<GLOBAL_PARAMETER_ID>",
    "\"(\"",
    "\")\"",
    "\"int\"",
    "\"long\"",
    "\"date\"",
    "<DOUBLE_VAR>",
    "\"decimal\"",
    "\"boolean\"",
    "\"string\"",
    "\"function\"",
    "\",\"",
    "\"{\"",
    "\"}\"",
    "\"=\"",
    "\":=\"",
    "\":\"",
    "\"if\"",
    "\"else\"",
    "\"switch\"",
    "\"default\"",
    "\"case\"",
    "\"while\"",
    "\"for\"",
    "\"do\"",
    "\"break\"",
    "\"continue\"",
    "\"return\"",
    "\"substring\"",
    "\"uppercase\"",
    "\"lowercase\"",
    "\"trim\"",
    "\"length\"",
    "\"today\"",
    "\"isnull\"",
    "\"nvl\"",
    "\"replace\"",
    "\"iif\"",
    "\"sqrt\"",
    "\"log\"",
    "\"log10\"",
    "\"exp\"",
    "\"pow\"",
    "\"pi\"",
    "\"round\"",
    "\"trunc\"",
    "\"print_err\"",
    "\"print_stack\"",
    "\"breakpoint\"",
    "\"concat\"",
    "\"dateadd\"",
    "\"datediff\"",
    "\"date2str\"",
    "\"str2date\"",
    "\"date2num\"",
    "\"str2num\"",
    "\"num2str\"",
    "<DATE_FIELD_LITERAL>",
    "<IDENTIFIER>",
    "<ERROR>",
  };

}
