<?xml version="1.0" encoding="UTF-8"?>
<Graph author="krivanekm" created="Thu Jul 26 10:35:55 CEST 2018" guiVersion="5.1.0" id="1532622832325" licenseCode="Commercial Devel" name="FileDescriptorLeak" showComponentDetails="true">
<Global>
<Metadata id="Metadata0">
<Record fieldDelimiter="|" name="recordName1" recordDelimiter="\r\n" type="delimited">
<Field name="field1" type="string"/>
</Record>
</Metadata>
<GraphParameters/>
<Dictionary/>
</Global>
<Phase number="0">
<Node guiName="DataGenerator" guiX="274" guiY="232" id="DATA_GENERATOR" recordsNumber="0" type="DATA_GENERATOR">
<attr name="generate"><![CDATA[//#CTL2

// Generates output record.
function integer generate() {

	return ALL;
}

// Called during component initialization.
// function boolean init() {}

// Called during each graph run before the transform is executed. May be used to allocate and initialize resources
// required by the generate. All resources allocated within this method should be released
// by the postExecute() method.
// function void preExecute() {}

// Called only if generate() throws an exception.
// function integer generateOnError(string errorMessage, string stackTrace) {
// }

// Called during each graph run after the entire transform was executed. Should be used to free any resources
// allocated within the preExecute() method.
// function void postExecute() {}

// Called to return a user-defined error message when an error occurs.
// function string getMessage() {}
]]></attr>
</Node>
<Edge fromNode="DATA_GENERATOR:0" guiBendpoints="" guiRouter="Manhattan" id="Edge0" inPort="Port 0 (in)" metadata="Metadata0" outPort="Port 0 (out)" toNode="TRASH:0"/>
</Phase>
<Phase number="1">
<Node guiName="Fail" guiX="428" guiY="140" id="FAIL" type="FAIL"/>
</Phase>
<Phase number="2">
<Node guiName="Trash" guiX="591" guiY="232" id="TRASH" type="TRASH"/>
</Phase>
</Graph>
